contract main {




// =====================  Runtime code  =====================


#
#  - __LnDefaultPrices_init(address arg1, address arg2, bytes32[] arg3, uint256[] arg4)
#  - exchangeAndPrices(bytes32 arg1, uint256 arg2, bytes32 arg3)
#  - exchange(bytes32 arg1, uint256 arg2, bytes32 arg3)
#
const LINA = 'LINA'

const LUSD = 'lUSD'


uint8 stor0;
uint8 stor0; offset 8
address stor0;
address adminAddress; offset 16
uint256 stor0; offset 16
uint256 stor0; offset 8
array of uint256 stor1;
address oracleAddress;
uint256 stalePeriod;
mapping of uint256 currentRoundId;
mapping of struct stor53;
mapping of address bandOracleMap;
array of uint256 bandOracleMapKeys;
array of struct bandCurrencyKeys;
array of uint256 stor65121483548824993324859576973500511702880785110129058561322659104044632942535;

function mPricesLastRound(bytes32 arg1) payable {
    require calldata.size - 4 >= 32
    return currentRoundId[arg1]
}

function bandOracleMapKeys(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < bandOracleMapKeys.length
    return bandOracleMapKeys[arg1]
}

function candidate() payable {
    return address(stor1.length)
}

function getCurrentRoundId(bytes32 arg1) payable {
    require calldata.size - 4 >= 32
    return currentRoundId[arg1]
}

function oracle() payable {
    return oracleAddress
}

function stalePeriod() payable {
    return stalePeriod
}

function bandOracleMap(bytes32 arg1) payable {
    require calldata.size - 4 >= 32
    return bandOracleMap[arg1]
}

function admin() payable {
    return adminAddress
}

function bandCurrencyKeys(bytes32 arg1) payable {
    return bandCurrencyKeys[arg1][0 len bandCurrencyKeys[arg1].length].field_0
}

function _fallback() payable {
    revert
}

function setStalePeriod(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if adminAddress != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'LnAdminUpgradeable: only the contract admin can perform this action'
    stalePeriod = arg1
    emit StalePeriodUpdated(arg1);
}

function setOracle(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if adminAddress != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'LnAdminUpgradeable: only the contract admin can perform this action'
    oracleAddress = arg1
    emit OracleUpdated(arg1);
}

function setCandidate(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if adminAddress != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'LnAdminUpgradeable: only the contract admin can perform this action'
    address(stor1.length) = arg1
    emit CandidateChanged(address(stor1.length), arg1);
}

function becomeAdmin() payable {
    if address(stor1.length) != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'LnAdminUpgradeable: only candidate can become admin'
    Mask(240, 0, stor0.field_16) = address(stor1.length)
    emit AdminChanged(address rg1, address rg2):
                      address(stor0.field_0),
                      0,
                      address(stor1.length),
}

function __LnAdminUpgradeable_init(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not uint8(stor0.field_8):
        if ext_code.size(this.address):
            if uint8(stor0.field_0):
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
        if not uint8(stor0.field_8):
            uint8(stor0.field_0) = 1
            uint8(stor0.field_8) = 1
            Mask(248, 0, stor0.field_8) = 0
    if not arg1:
        revert with 0, 'LnAdminUpgradeable: zero address'
    adminAddress = arg1
    emit AdminChanged(0, arg1);
    if not uint8(stor0.field_8):
        uint8(stor0.field_8) = 0
}

function removeOracle(bytes32 arg1) payable {
    require calldata.size - 4 >= 32
    if adminAddress != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'LnAdminUpgradeable: only the contract admin can perform this action'
    if not bandOracleMap[arg1]:
        revert with 0, 'Oracle does not exists'
    bandOracleMap[arg1] = 0
    idx = 0
    while idx < bandOracleMapKeys.length:
        mem[0] = 101
        if bandOracleMapKeys[idx] != arg1:
            idx = idx + 1
            continue 
        require idx < bandOracleMapKeys.length
        bandOracleMapKeys[idx] = 0
        require bandOracleMapKeys.length - 1 < bandOracleMapKeys.length
        require idx < bandOracleMapKeys.length
        bandOracleMapKeys[idx] = bandOracleMapKeys[bandOracleMapKeys.length]
        require bandOracleMapKeys.length
        bandOracleMapKeys[bandOracleMapKeys.length] = 0
        bandOracleMapKeys.length--
        emit OracleRemoved(arg1, bandOracleMap[arg1]);
    emit OracleRemoved(arg1, bandOracleMap[arg1]);
}

function addOracle(bytes32 arg1, string arg2, address arg3) payable {
    require calldata.size - 4 >= 96
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    require arg2.length <= test266151307()
    require arg2 + arg2.length + 36 <= calldata.size
    require arg3 == arg3
    if adminAddress != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'LnAdminUpgradeable: only the contract admin can perform this action'
    if bandOracleMap[arg1]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'LnBandProtocol: oracle already exists'
    bandOracleMap[arg1] = arg3
    bandOracleMapKeys.length++
    stor8FF9[stor101.length] = arg1
    bandCurrencyKeys[arg1].field_0 = (2 * arg2.length) + 1
    s = 0
    idx = arg2 + 36
    while arg2 + arg2.length + 36 > idx:
        bandCurrencyKeys[arg1][s].field_0 = cd[idx]
        s = s + 1
        idx = idx + 32
        continue 
    idx = Mask(251, 0, arg2.length + 31) >> 5
    while bandCurrencyKeys[arg1].length + 31 / 32 > idx:
        bandCurrencyKeys[arg1][idx].field_0 = 0
        idx = idx + 1
        continue 
    emit 0x87c6f250: arg1, Array(len=arg2.length, data=arg2[all]), arg3
}

function getPrice(bytes32 arg1) payable {
    require calldata.size - 4 >= 32
    mem[320] = bandCurrencyKeys[arg1].field_0
    idx = 320
    s = 0
    while bandCurrencyKeys[arg1].length + 288 > idx:
        mem[idx + 32] = bandCurrencyKeys[arg1][s].field_256
        idx = idx + 32
        s = s + 1
        continue 
    if not bandOracleMap[arg1]:
        return stor53[arg1][stor52[arg1]].field_0
    mem[ceil32(bandCurrencyKeys[arg1].length) + 516 len ceil32(bandCurrencyKeys[arg1].length)] = mem[320 len ceil32(bandCurrencyKeys[arg1].length)]
    if ceil32(bandCurrencyKeys[arg1].length) > bandCurrencyKeys[arg1].length:
        mem[ceil32(bandCurrencyKeys[arg1].length) + bandCurrencyKeys[arg1].length + 516] = 0
    mem[(2 * ceil32(bandCurrencyKeys[arg1].length)) + 516] = 3
    mem[(2 * ceil32(bandCurrencyKeys[arg1].length)) + 548] = 'USD'
    mem[(2 * ceil32(bandCurrencyKeys[arg1].length)) + 551] = 0
    require ext_code.size(bandOracleMap[arg1])
    staticcall bandOracleMap[arg1].getReferenceData(string rg1, string rg2) with:
            gas gas_remaining wei
           args 64, ceil32(bandCurrencyKeys[arg1].length) + 96, bandCurrencyKeys[arg1].length, mem[320 len ceil32(bandCurrencyKeys[arg1].length)], 3, 'USD', 0
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require bool(ceil32(bandCurrencyKeys[arg1].length) + ceil32(return_data.size) + 512 <= test266151307())
    mem[ceil32(bandCurrencyKeys[arg1].length) + ceil32(return_data.size) + 512] = ext_call.return_data[5 len 27]
    return memory
      from ceil32(bandCurrencyKeys[arg1].length) + ceil32(return_data.size) + 517
       len 27
}

function getPriceAndUpdatedTime(bytes32 arg1) payable {
    require calldata.size - 4 >= 32
    mem[320] = bandCurrencyKeys[arg1].field_0
    idx = 320
    s = 0
    while bandCurrencyKeys[arg1].length + 288 > idx:
        mem[idx + 32] = bandCurrencyKeys[arg1][s].field_256
        idx = idx + 32
        s = s + 1
        continue 
    if not bandOracleMap[arg1]:
        return stor53[arg1][stor52[arg1]].field_0, stor53[arg1][stor52[arg1]].field_216
    mem[ceil32(bandCurrencyKeys[arg1].length) + 516 len ceil32(bandCurrencyKeys[arg1].length)] = mem[320 len ceil32(bandCurrencyKeys[arg1].length)]
    if ceil32(bandCurrencyKeys[arg1].length) > bandCurrencyKeys[arg1].length:
        mem[ceil32(bandCurrencyKeys[arg1].length) + bandCurrencyKeys[arg1].length + 516] = 0
    mem[(2 * ceil32(bandCurrencyKeys[arg1].length)) + 516] = 3
    mem[(2 * ceil32(bandCurrencyKeys[arg1].length)) + 548] = 'USD'
    mem[(2 * ceil32(bandCurrencyKeys[arg1].length)) + 551] = 0
    require ext_code.size(bandOracleMap[arg1])
    staticcall bandOracleMap[arg1].getReferenceData(string rg1, string rg2) with:
            gas gas_remaining wei
           args 64, ceil32(bandCurrencyKeys[arg1].length) + 96, bandCurrencyKeys[arg1].length, mem[320 len ceil32(bandCurrencyKeys[arg1].length)], 3, 'USD', 0
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require bool(ceil32(bandCurrencyKeys[arg1].length) + ceil32(return_data.size) + 512 <= test266151307())
    mem[ceil32(bandCurrencyKeys[arg1].length) + ceil32(return_data.size) + 512] = ext_call.return_data[5 len 27]
    return mem[ceil32(bandCurrencyKeys[arg1].length) + ceil32(return_data.size) + 517 len 27], 
           ext_call.return_data[59 len 5] << 216
}

function isStale(bytes32 arg1) payable {
    require calldata.size - 4 >= 32
    if arg1 == 'lUSD':
        return 0
    mem[320] = bandCurrencyKeys[arg1].field_0
    idx = 320
    s = 0
    while bandCurrencyKeys[arg1].length + 288 > idx:
        mem[idx + 32] = bandCurrencyKeys[arg1][s].field_256
        idx = idx + 32
        s = s + 1
        continue 
    if not bandOracleMap[arg1]:
        if stalePeriod + stor53[arg1][stor52[arg1]].field_216 < stor53[arg1][stor52[arg1]].field_216:
            revert with 0, 'SafeMath: addition overflow'
        return (stalePeriod + stor53[arg1][stor52[arg1]].field_216 < block.timestamp)
    mem[ceil32(bandCurrencyKeys[arg1].length) + 516 len ceil32(bandCurrencyKeys[arg1].length)] = mem[320 len ceil32(bandCurrencyKeys[arg1].length)]
    if ceil32(bandCurrencyKeys[arg1].length) > bandCurrencyKeys[arg1].length:
        mem[ceil32(bandCurrencyKeys[arg1].length) + bandCurrencyKeys[arg1].length + 516] = 0
    mem[(2 * ceil32(bandCurrencyKeys[arg1].length)) + 551] = 0
    require ext_code.size(bandOracleMap[arg1])
    staticcall bandOracleMap[arg1].getReferenceData(string rg1, string rg2) with:
            gas gas_remaining wei
           args 64, ceil32(bandCurrencyKeys[arg1].length) + 96, bandCurrencyKeys[arg1].length, mem[320 len ceil32(bandCurrencyKeys[arg1].length)], 3, 'USD', 0
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require bool(ceil32(bandCurrencyKeys[arg1].length) + ceil32(return_data.size) + 512 <= test266151307())
    mem[ceil32(bandCurrencyKeys[arg1].length) + ceil32(return_data.size) + 544] = ext_call.return_data[59 len 5]
    if stalePeriod + mem[ceil32(bandCurrencyKeys[arg1].length) + ceil32(return_data.size) + 571 len 5] < mem[ceil32(bandCurrencyKeys[arg1].length) + ceil32(return_data.size) + 571 len 5]:
        revert with 0, 'SafeMath: addition overflow'
    return (stalePeriod + mem[ceil32(bandCurrencyKeys[arg1].length) + ceil32(return_data.size) + 571 len 5] < block.timestamp)
}

function deletePrice(bytes32 arg1) payable {
    require calldata.size - 4 >= 32
    if oracleAddress != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Only the oracle can perform this action'
    mem[320] = bandCurrencyKeys[arg1].field_0
    idx = 320
    s = 0
    while bandCurrencyKeys[arg1].length + 288 > idx:
        mem[idx + 32] = bandCurrencyKeys[arg1][s].field_256
        idx = idx + 32
        s = s + 1
        continue 
    if not bandOracleMap[arg1]:
        if stor53[arg1][stor52[arg1]].field_0 <= 0:
            revert with 0, 'price is zero'
    else:
        mem[ceil32(bandCurrencyKeys[arg1].length) + 516 len ceil32(bandCurrencyKeys[arg1].length)] = mem[320 len ceil32(bandCurrencyKeys[arg1].length)]
        if ceil32(bandCurrencyKeys[arg1].length) > bandCurrencyKeys[arg1].length:
            mem[ceil32(bandCurrencyKeys[arg1].length) + bandCurrencyKeys[arg1].length + 516] = 0
        mem[(2 * ceil32(bandCurrencyKeys[arg1].length)) + 516] = 3
        mem[(2 * ceil32(bandCurrencyKeys[arg1].length)) + 548] = 'USD'
        mem[(2 * ceil32(bandCurrencyKeys[arg1].length)) + 551] = 0
        require ext_code.size(bandOracleMap[arg1])
        staticcall bandOracleMap[arg1].getReferenceData(string rg1, string rg2) with:
                gas gas_remaining wei
               args 64, ceil32(bandCurrencyKeys[arg1].length) + 96, bandCurrencyKeys[arg1].length, mem[320 len ceil32(bandCurrencyKeys[arg1].length)], 3, 'USD', 0
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require bool(ceil32(bandCurrencyKeys[arg1].length) + ceil32(return_data.size) + 512 <= test266151307())
        mem[ceil32(bandCurrencyKeys[arg1].length) + ceil32(return_data.size) + 512] = ext_call.return_data[5 len 27]
        if mem[ceil32(bandCurrencyKeys[arg1].length) + ceil32(return_data.size) + 517 len 27] <= 0:
            revert with 0, 'price is zero'
    stor53[arg1][stor52[arg1]].field_0 = 0
    currentRoundId[arg1]--
    emit 0x51f3f19a: arg1
}

function updateAll(bytes32[] arg1, uint256[] arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    require arg2.length <= test266151307()
    require arg2 + (32 * arg2.length) + 36 <= calldata.size
    if oracleAddress != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Only the oracle can perform this action'
    mem[96] = arg1.length
    mem[128 len 32 * arg1.length] = call.data[arg1 + 36 len 32 * arg1.length]
    mem[64] = (32 * arg2.length) + (32 * arg1.length) + 160
    mem[(32 * arg1.length) + 128] = arg2.length
    mem[(32 * arg1.length) + 160 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
    mem[(32 * arg1.length) + (32 * arg2.length) + 160] = 0
    if arg1.length != arg2.length:
        revert with 0, 'array length error, not match.'
    if arg3 >= block.timestamp + 600:
        revert with 0, 'Time error'
    idx = 0
    while idx < arg1.length:
        require idx < mem[96]
        _323 = mem[(32 * idx) + 128]
        require idx < mem[(32 * arg1.length) + 128]
        if 0 == mem[(32 * idx) + (32 * arg1.length) + 160]:
            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
        if mem[(32 * idx) + 128] == 'lUSD':
            revert with 0, 'LUSD cannot be updated.'
        _331 = mem[64]
        mem[64] = mem[64] + 64
        mem[_331] = 0
        mem[_331 + 32] = 0
        _335 = mem[64]
        mem[64] = mem[64] + 64
        mem[_335] = 0
        mem[_335 + 32] = 0
        _337 = mem[64]
        mem[64] = mem[64] + 64
        mem[_337] = 3
        mem[_337 + 32] = 'USD'
        mem[0] = _323
        mem[32] = 102
        _339 = mem[64]
        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_323].length) + 32
        mem[_339] = bandCurrencyKeys[_323].length
        mem[_339 + 32] = bandCurrencyKeys[_323].field_0
        s = _339 + 32
        t = sha3(sha3(_323, 102))
        while _339 + bandCurrencyKeys[_323].length > s:
            mem[s + 32] = uint256(stor1[t])
            s = s + 32
            t = t + 1
            continue 
        mem[0] = _323
        mem[32] = 100
        if not bandOracleMap[_323]:
            _637 = mem[64]
            mem[64] = mem[64] + 64
            mem[_637] = 0
            mem[_637 + 32] = 0
            mem[0] = currentRoundId[_323]
            mem[32] = sha3(_323, 53)
            _645 = mem[64]
            mem[64] = mem[64] + 64
            mem[_645] = stor53[_323][stor52[_323]].field_0
            mem[_645 + 32] = stor53[_323][stor52[_323]].field_216
            if arg3 >= stor53[_323][stor52[_323]].field_216:
                require idx < mem[(32 * arg1.length) + 128]
                _667 = mem[(32 * idx) + (32 * arg1.length) + 160]
                mem[0] = _323
                mem[32] = 52
                currentRoundId[_323]++
                _673 = mem[64]
                mem[64] = mem[64] + 64
                mem[_673] = mem[(32 * idx) + (32 * arg1.length) + 165 len 27]
                mem[_673 + 32] = arg3 % 1099511627776
                mem[0] = currentRoundId[_323] + 1
                mem[32] = sha3(_323, 53)
                stor53[_323][stor52[_323] + 1].field_0 = Mask(216, 0, _667)
                stor53[_323][stor52[_323] + 1].field_216 = arg3 % 1099511627776
        else:
            _633 = mem[64]
            mem[64] = mem[64] + 96
            mem[_633] = 0
            mem[_633 + 32] = 0
            mem[_633 + 64] = 0
            _638 = mem[64]
            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 64
            mem[mem[64] + 68] = bandCurrencyKeys[_323].length
            s = 0
            while s < bandCurrencyKeys[_323].length:
                mem[s + mem[64] + 100] = mem[_339 + s + 32]
                s = s + 32
                continue 
            if ceil32(bandCurrencyKeys[_323].length) <= bandCurrencyKeys[_323].length:
                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_323].length) + 96
                _892 = mem[_337]
                mem[ceil32(bandCurrencyKeys[_323].length) + mem[64] + 100] = mem[_337]
                s = 0
                while s < _892:
                    mem[s + ceil32(bandCurrencyKeys[_323].length) + mem[64] + 132] = mem[_337 + s + 32]
                    s = s + 32
                    continue 
                if ceil32(_892) <= _892:
                    require ext_code.size(bandOracleMap[_323])
                    staticcall bandOracleMap[_323].getReferenceData(string rg1, string rg2) with:
                            gas gas_remaining wei
                           args Array(len=bandCurrencyKeys[_323].length, data=mem[mem[64] + 100 len ceil32(_892) + ceil32(bandCurrencyKeys[_323].length) + 32]), ceil32(bandCurrencyKeys[_323].length) + 96
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1117 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1121 = mem[64]
                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                    mem[64] = mem[64] + 96
                    mem[_1121] = mem[_1117]
                    mem[_1121 + 32] = mem[_1117 + 32]
                    mem[_1121 + 64] = mem[_1117 + 64]
                    _1131 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_1131] = mem[_1121 + 5 len 27]
                    mem[_1131 + 32] = mem[_1121 + 59 len 5]
                    if arg3 >= mem[_1131 + 59 len 5]:
                        require idx < mem[(32 * arg1.length) + 128]
                        _1155 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        mem[0] = _323
                        mem[32] = 52
                        currentRoundId[_323]++
                        _1160 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_1160] = mem[(32 * idx) + (32 * arg1.length) + 165 len 27]
                        mem[_1160 + 32] = arg3 % 1099511627776
                        mem[0] = currentRoundId[_323] + 1
                        mem[32] = sha3(_323, 53)
                        stor53[_323][stor52[_323] + 1].field_0 = Mask(216, 0, _1155)
                        stor53[_323][stor52[_323] + 1].field_216 = arg3 % 1099511627776
                else:
                    mem[ceil32(bandCurrencyKeys[_323].length) + mem[64] + _892 + 132] = 0
                    require ext_code.size(bandOracleMap[_323])
                    staticcall bandOracleMap[_323].getReferenceData(string rg1, string rg2) with:
                            gas gas_remaining wei
                           args Array(len=bandCurrencyKeys[_323].length, data=mem[mem[64] + 100 len ceil32(_892) + ceil32(bandCurrencyKeys[_323].length) + 32]), ceil32(bandCurrencyKeys[_323].length) + 96
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1119 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1123 = mem[64]
                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                    mem[64] = mem[64] + 96
                    mem[_1123] = mem[_1119]
                    mem[_1123 + 32] = mem[_1119 + 32]
                    mem[_1123 + 64] = mem[_1119 + 64]
                    _1143 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_1143] = mem[_1123 + 5 len 27]
                    mem[_1143 + 32] = mem[_1123 + 59 len 5]
                    if arg3 >= mem[_1143 + 59 len 5]:
                        require idx < mem[(32 * arg1.length) + 128]
                        _1165 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        mem[0] = _323
                        mem[32] = 52
                        currentRoundId[_323]++
                        _1174 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_1174] = mem[(32 * idx) + (32 * arg1.length) + 165 len 27]
                        mem[_1174 + 32] = arg3 % 1099511627776
                        mem[0] = currentRoundId[_323] + 1
                        mem[32] = sha3(_323, 53)
                        stor53[_323][stor52[_323] + 1].field_0 = Mask(216, 0, _1165)
                        stor53[_323][stor52[_323] + 1].field_216 = arg3 % 1099511627776
            else:
                mem[mem[64] + bandCurrencyKeys[_323].length + 100] = 0
                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_323].length) + 96
                _897 = mem[_337]
                mem[ceil32(bandCurrencyKeys[_323].length) + mem[64] + 100] = mem[_337]
                s = 0
                while s < _897:
                    mem[s + ceil32(bandCurrencyKeys[_323].length) + mem[64] + 132] = mem[_337 + s + 32]
                    s = s + 32
                    continue 
                if ceil32(_897) <= _897:
                    require ext_code.size(bandOracleMap[_323])
                    staticcall bandOracleMap[_323].mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len ceil32(_897) + ceil32(bandCurrencyKeys[_323].length) + _638 + -mem[64] + 128]
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1118 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1122 = mem[64]
                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                    mem[64] = mem[64] + 96
                    mem[_1122] = mem[_1118]
                    mem[_1122 + 32] = mem[_1118 + 32]
                    mem[_1122 + 64] = mem[_1118 + 64]
                    _1137 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_1137] = mem[_1122 + 5 len 27]
                    mem[_1137 + 32] = mem[_1122 + 59 len 5]
                    if arg3 >= mem[_1137 + 59 len 5]:
                        require idx < mem[(32 * arg1.length) + 128]
                        _1157 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        mem[0] = _323
                        mem[32] = 52
                        currentRoundId[_323]++
                        _1167 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_1167] = mem[(32 * idx) + (32 * arg1.length) + 165 len 27]
                        mem[_1167 + 32] = arg3 % 1099511627776
                        mem[0] = currentRoundId[_323] + 1
                        mem[32] = sha3(_323, 53)
                        stor53[_323][stor52[_323] + 1].field_0 = Mask(216, 0, _1157)
                        stor53[_323][stor52[_323] + 1].field_216 = arg3 % 1099511627776
                else:
                    mem[ceil32(bandCurrencyKeys[_323].length) + _638 + _897 + 132] = 0
                    require ext_code.size(bandOracleMap[_323])
                    staticcall bandOracleMap[_323].mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len ceil32(_897) + ceil32(bandCurrencyKeys[_323].length) + _638 + -mem[64] + 128]
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1120 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1124 = mem[64]
                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                    mem[64] = mem[64] + 96
                    mem[_1124] = mem[_1120]
                    mem[_1124 + 32] = mem[_1120 + 32]
                    mem[_1124 + 64] = mem[_1120 + 64]
                    _1146 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_1146] = mem[_1124 + 5 len 27]
                    mem[_1146 + 32] = mem[_1124 + 59 len 5]
                    if arg3 >= mem[_1146 + 59 len 5]:
                        require idx < mem[(32 * arg1.length) + 128]
                        _1172 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        mem[0] = _323
                        mem[32] = 52
                        currentRoundId[_323]++
                        _1180 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_1180] = mem[(32 * idx) + (32 * arg1.length) + 165 len 27]
                        mem[_1180 + 32] = arg3 % 1099511627776
                        mem[0] = currentRoundId[_323] + 1
                        mem[32] = sha3(_323, 53)
                        stor53[_323][stor52[_323] + 1].field_0 = Mask(216, 0, _1172)
                        stor53[_323][stor52[_323] + 1].field_216 = arg3 % 1099511627776
        idx = idx + 1
        continue 
    _320 = mem[64]
    mem[mem[64]] = 64
    _322 = mem[96]
    mem[mem[64] + 64] = mem[96]
    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
    mem[mem[64] + 32] = (32 * mem[96]) + 96
    _627 = mem[(32 * arg1.length) + 128]
    mem[_320 + (32 * mem[96]) + 96] = mem[(32 * arg1.length) + 128]
    mem[_320 + (32 * _322) + 128 len 32 * _627] = mem[(32 * arg1.length) + 160 len 32 * _627]
    emit 0x50f45835: mem[mem[64] len _320 + (32 * _322) + (32 * _627) + -mem[64] + 128]
    return 0
}

function __LnBandProtocol_init(address arg1, address arg2, bytes32[] arg3, uint256[] arg4) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg3 <= test266151307()
    require arg3 + 35 < calldata.size
    require arg3.length <= test266151307()
    require (32 * arg3.length) + 128 >= 96 and (32 * arg3.length) + 128 <= test266151307()
    mem[96] = arg3.length
    require calldata.size >= arg3 + (32 * arg3.length) + 36
    s = arg3 + 36
    t = 128
    idx = 0
    while idx < arg3.length:
        mem[t] = cd[s]
        s = s + 32
        t = t + 32
        idx = idx + 1
        continue 
    require arg4 <= test266151307()
    require arg4 + 35 < calldata.size
    require arg4.length <= test266151307()
    require (32 * arg4.length) + 160 >= 128 and (32 * arg3.length) + (32 * arg4.length) + 160 <= test266151307()
    mem[(32 * arg3.length) + 128] = arg4.length
    require calldata.size >= arg4 + (32 * arg4.length) + 36
    idx = 0
    s = arg4 + 36
    t = (32 * arg3.length) + 160
    while idx < arg4.length:
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if uint8(stor0.field_8):
        if not arg1:
            revert with 0, 'LnAdminUpgradeable: zero address'
        adminAddress = arg1
        mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
        emit AdminChanged(0, arg1);
        if uint8(stor0.field_8):
            stalePeriod = 12 * 3600
            if arg3.length != arg4.length:
                revert with 0, 'array length error.'
            oracleAddress = arg2
            require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
            delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                 gas gas_remaining wei
                args 
            mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
            if not delegate.return_code:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            currentRoundId['lUSD']++
            mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
            mem[0] = currentRoundId['lUSD'] + 1
            mem[32] = sha3('lUSD', 53)
            stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
            stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
            if arg3.length != arg4.length:
                revert with 0, 'array length error, not match.'
            if block.timestamp >= block.timestamp + 600:
                revert with 0, 'Time error'
            idx = 0
            while idx < arg3.length:
                require idx < mem[96]
                _45449 = mem[(32 * idx) + 128]
                require idx < mem[(32 * arg3.length) + 128]
                if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                    revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                if mem[(32 * idx) + 128] == 'lUSD':
                    revert with 0, 'LUSD cannot be updated.'
                _45862 = mem[64]
                mem[64] = mem[64] + 64
                mem[_45862] = 0
                mem[_45862 + 32] = 0
                _46046 = mem[64]
                mem[64] = mem[64] + 64
                mem[_46046] = 0
                mem[_46046 + 32] = 0
                _46092 = mem[64]
                mem[64] = mem[64] + 64
                mem[_46092] = 3
                mem[_46092 + 32] = 'USD'
                mem[0] = _45449
                mem[32] = 102
                _46094 = mem[64]
                mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45449].length) + 32
                mem[_46094] = bandCurrencyKeys[_45449].length
                mem[_46094 + 32] = bandCurrencyKeys[_45449].field_0
                s = _46094 + 32
                t = sha3(sha3(_45449, 102))
                while _46094 + bandCurrencyKeys[_45449].length > s:
                    mem[s + 32] = uint256(stor1[t])
                    s = s + 32
                    t = t + 1
                    continue 
                mem[0] = _45449
                mem[32] = 100
                if not bandOracleMap[_45449]:
                    _59756 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_59756] = 0
                    mem[_59756 + 32] = 0
                    mem[0] = currentRoundId[_45449]
                    mem[32] = sha3(_45449, 53)
                    _59989 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_59989] = stor53[_45449][stor52[_45449]].field_0
                    mem[_59989 + 32] = stor53[_45449][stor52[_45449]].field_216
                    if block.timestamp >= stor53[_45449][stor52[_45449]].field_216:
                        require idx < mem[(32 * arg3.length) + 128]
                        _61044 = mem[(32 * idx) + (32 * arg3.length) + 160]
                        mem[0] = _45449
                        mem[32] = 52
                        currentRoundId[_45449]++
                        _61320 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_61320] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                        mem[_61320 + 32] = block.timestamp % 1099511627776
                        mem[0] = currentRoundId[_45449] + 1
                        mem[32] = sha3(_45449, 53)
                        stor53[_45449][stor52[_45449] + 1].field_0 = Mask(216, 0, _61044)
                        stor53[_45449][stor52[_45449] + 1].field_216 = block.timestamp % 1099511627776
                else:
                    _59617 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_59617] = 0
                    mem[_59617 + 32] = 0
                    mem[_59617 + 64] = 0
                    _59757 = mem[64]
                    mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 64
                    mem[mem[64] + 68] = bandCurrencyKeys[_45449].length
                    s = 0
                    while s < bandCurrencyKeys[_45449].length:
                        mem[s + mem[64] + 100] = mem[_46094 + s + 32]
                        s = s + 32
                        continue 
                    if ceil32(bandCurrencyKeys[_45449].length) <= bandCurrencyKeys[_45449].length:
                        mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45449].length) + 96
                        _71348 = mem[_46092]
                        mem[ceil32(bandCurrencyKeys[_45449].length) + _59757 + 100] = mem[_46092]
                        s = 0
                        while s < _71348:
                            mem[s + ceil32(bandCurrencyKeys[_45449].length) + _59757 + 132] = mem[_46092 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_71348) <= _71348:
                            require ext_code.size(bandOracleMap[_45449])
                            staticcall bandOracleMap[_45449].mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len ceil32(_71348) + ceil32(bandCurrencyKeys[_45449].length) + _59757 + -mem[64] + 128]
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _81742 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _81926 = mem[64]
                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                            mem[64] = mem[64] + 96
                            mem[_81926] = mem[_81742]
                            mem[_81926 + 32] = mem[_81742 + 32]
                            mem[_81926 + 64] = mem[_81742 + 64]
                            _82386 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_82386] = mem[_81926 + 5 len 27]
                            mem[_82386 + 32] = mem[_81926 + 59 len 5]
                            if block.timestamp >= mem[_82386 + 59 len 5]:
                                require idx < mem[(32 * arg3.length) + 128]
                                _83490 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                mem[0] = _45449
                                mem[32] = 52
                                currentRoundId[_45449]++
                                _83675 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_83675] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                mem[_83675 + 32] = block.timestamp % 1099511627776
                                mem[0] = currentRoundId[_45449] + 1
                                mem[32] = sha3(_45449, 53)
                                stor53[_45449][stor52[_45449] + 1].field_0 = Mask(216, 0, _83490)
                                stor53[_45449][stor52[_45449] + 1].field_216 = block.timestamp % 1099511627776
                        else:
                            mem[ceil32(bandCurrencyKeys[_45449].length) + _59757 + _71348 + 132] = 0
                            require ext_code.size(bandOracleMap[_45449])
                            staticcall bandOracleMap[_45449].mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len ceil32(_71348) + ceil32(bandCurrencyKeys[_45449].length) + _59757 + -mem[64] + 128]
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _81834 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _82018 = mem[64]
                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                            mem[64] = mem[64] + 96
                            mem[_82018] = mem[_81834]
                            mem[_82018 + 32] = mem[_81834 + 32]
                            mem[_82018 + 64] = mem[_81834 + 64]
                            _82938 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_82938] = mem[_82018 + 5 len 27]
                            mem[_82938 + 32] = mem[_82018 + 59 len 5]
                            if block.timestamp >= mem[_82938 + 59 len 5]:
                                require idx < mem[(32 * arg3.length) + 128]
                                _83680 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                mem[0] = _45449
                                mem[32] = 52
                                currentRoundId[_45449]++
                                _84319 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_84319] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                mem[_84319 + 32] = block.timestamp % 1099511627776
                                mem[0] = currentRoundId[_45449] + 1
                                mem[32] = sha3(_45449, 53)
                                stor53[_45449][stor52[_45449] + 1].field_0 = Mask(216, 0, _83680)
                                stor53[_45449][stor52[_45449] + 1].field_216 = block.timestamp % 1099511627776
                    else:
                        mem[mem[64] + bandCurrencyKeys[_45449].length + 100] = 0
                        mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45449].length) + 96
                        _71578 = mem[_46092]
                        mem[ceil32(bandCurrencyKeys[_45449].length) + _59757 + 100] = mem[_46092]
                        s = 0
                        while s < _71578:
                            mem[s + ceil32(bandCurrencyKeys[_45449].length) + _59757 + 132] = mem[_46092 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_71578) <= _71578:
                            require ext_code.size(bandOracleMap[_45449])
                            staticcall bandOracleMap[_45449].mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len ceil32(_71578) + ceil32(bandCurrencyKeys[_45449].length) + _59757 + -mem[64] + 128]
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _81743 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _81927 = mem[64]
                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                            mem[64] = mem[64] + 96
                            mem[_81927] = mem[_81743]
                            mem[_81927 + 32] = mem[_81743 + 32]
                            mem[_81927 + 64] = mem[_81743 + 64]
                            _82392 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_82392] = mem[_81927 + 5 len 27]
                            mem[_82392 + 32] = mem[_81927 + 59 len 5]
                            if block.timestamp >= mem[_82392 + 59 len 5]:
                                require idx < mem[(32 * arg3.length) + 128]
                                _83492 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                mem[0] = _45449
                                mem[32] = 52
                                currentRoundId[_45449]++
                                _83682 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_83682] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                mem[_83682 + 32] = block.timestamp % 1099511627776
                                mem[0] = currentRoundId[_45449] + 1
                                mem[32] = sha3(_45449, 53)
                                stor53[_45449][stor52[_45449] + 1].field_0 = Mask(216, 0, _83492)
                                stor53[_45449][stor52[_45449] + 1].field_216 = block.timestamp % 1099511627776
                        else:
                            mem[ceil32(bandCurrencyKeys[_45449].length) + _59757 + _71578 + 132] = 0
                            require ext_code.size(bandOracleMap[_45449])
                            staticcall bandOracleMap[_45449].mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len ceil32(_71578) + ceil32(bandCurrencyKeys[_45449].length) + _59757 + -mem[64] + 128]
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _81835 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _82019 = mem[64]
                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                            mem[64] = mem[64] + 96
                            mem[_82019] = mem[_81835]
                            mem[_82019 + 32] = mem[_81835 + 32]
                            mem[_82019 + 64] = mem[_81835 + 64]
                            _82941 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_82941] = mem[_82019 + 5 len 27]
                            mem[_82941 + 32] = mem[_82019 + 59 len 5]
                            if block.timestamp >= mem[_82941 + 59 len 5]:
                                require idx < mem[(32 * arg3.length) + 128]
                                _83687 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                mem[0] = _45449
                                mem[32] = 52
                                currentRoundId[_45449]++
                                _84325 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_84325] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                mem[_84325 + 32] = block.timestamp % 1099511627776
                                mem[0] = currentRoundId[_45449] + 1
                                mem[32] = sha3(_45449, 53)
                                stor53[_45449][stor52[_45449] + 1].field_0 = Mask(216, 0, _83687)
                                stor53[_45449][stor52[_45449] + 1].field_216 = block.timestamp % 1099511627776
                idx = idx + 1
                continue 
            _45356 = mem[64]
            mem[mem[64]] = 64
            _45448 = mem[96]
            mem[mem[64] + 64] = mem[96]
            mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
            mem[mem[64] + 32] = (32 * mem[96]) + 96
            _59386 = mem[(32 * arg3.length) + 128]
            mem[_45356 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
            mem[_45356 + (32 * _45448) + 128 len 32 * _59386] = mem[(32 * arg3.length) + 160 len 32 * _59386]
            emit 0x50f45835: mem[mem[64] len _45356 + (32 * _45448) + (32 * _59386) + -mem[64] + 128]
        else:
            uint8(stor0.field_8) = 0
            stalePeriod = 12 * 3600
            if arg3.length != arg4.length:
                revert with 0, 'array length error.'
            oracleAddress = arg2
            require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
            delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                 gas gas_remaining wei
                args 
            mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
            if not delegate.return_code:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            currentRoundId['lUSD']++
            mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
            mem[0] = currentRoundId['lUSD'] + 1
            mem[32] = sha3('lUSD', 53)
            stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
            stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
            if arg3.length != arg4.length:
                revert with 0, 'array length error, not match.'
            if block.timestamp >= block.timestamp + 600:
                revert with 0, 'Time error'
            idx = 0
            while idx < arg3.length:
                require idx < mem[96]
                _45452 = mem[(32 * idx) + 128]
                require idx < mem[(32 * arg3.length) + 128]
                if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                    revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                if mem[(32 * idx) + 128] == 'lUSD':
                    revert with 0, 'LUSD cannot be updated.'
                _45864 = mem[64]
                mem[64] = mem[64] + 64
                mem[_45864] = 0
                mem[_45864 + 32] = 0
                _46047 = mem[64]
                mem[64] = mem[64] + 64
                mem[_46047] = 0
                mem[_46047 + 32] = 0
                _46095 = mem[64]
                mem[64] = mem[64] + 64
                mem[_46095] = 3
                mem[_46095 + 32] = 'USD'
                mem[0] = _45452
                mem[32] = 102
                _46097 = mem[64]
                mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45452].length) + 32
                mem[_46097] = bandCurrencyKeys[_45452].length
                mem[_46097 + 32] = bandCurrencyKeys[_45452].field_0
                s = _46097 + 32
                t = sha3(sha3(_45452, 102))
                while _46097 + bandCurrencyKeys[_45452].length > s:
                    mem[s + 32] = uint256(stor1[t])
                    s = s + 32
                    t = t + 1
                    continue 
                mem[0] = _45452
                mem[32] = 100
                if not bandOracleMap[_45452]:
                    _59761 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_59761] = 0
                    mem[_59761 + 32] = 0
                    mem[0] = currentRoundId[_45452]
                    mem[32] = sha3(_45452, 53)
                    _59996 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_59996] = stor53[_45452][stor52[_45452]].field_0
                    mem[_59996 + 32] = stor53[_45452][stor52[_45452]].field_216
                    if block.timestamp >= stor53[_45452][stor52[_45452]].field_216:
                        require idx < mem[(32 * arg3.length) + 128]
                        _61050 = mem[(32 * idx) + (32 * arg3.length) + 160]
                        mem[0] = _45452
                        mem[32] = 52
                        currentRoundId[_45452]++
                        _61329 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_61329] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                        mem[_61329 + 32] = block.timestamp % 1099511627776
                        mem[0] = currentRoundId[_45452] + 1
                        mem[32] = sha3(_45452, 53)
                        stor53[_45452][stor52[_45452] + 1].field_0 = Mask(216, 0, _61050)
                        stor53[_45452][stor52[_45452] + 1].field_216 = block.timestamp % 1099511627776
                else:
                    _59620 = mem[64]
                    mem[64] = mem[64] + 96
                    mem[_59620] = 0
                    mem[_59620 + 32] = 0
                    mem[_59620 + 64] = 0
                    _59762 = mem[64]
                    mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 64
                    mem[mem[64] + 68] = bandCurrencyKeys[_45452].length
                    s = 0
                    while s < bandCurrencyKeys[_45452].length:
                        mem[s + mem[64] + 100] = mem[_46097 + s + 32]
                        s = s + 32
                        continue 
                    if ceil32(bandCurrencyKeys[_45452].length) <= bandCurrencyKeys[_45452].length:
                        mem[_59762 + 36] = ceil32(bandCurrencyKeys[_45452].length) + 96
                        _71353 = mem[_46095]
                        mem[ceil32(bandCurrencyKeys[_45452].length) + _59762 + 100] = mem[_46095]
                        s = 0
                        while s < _71353:
                            mem[s + ceil32(bandCurrencyKeys[_45452].length) + _59762 + 132] = mem[_46095 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_71353) <= _71353:
                            require ext_code.size(bandOracleMap[_45452])
                            staticcall bandOracleMap[_45452].mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len ceil32(_71353) + ceil32(bandCurrencyKeys[_45452].length) + _59762 + -mem[64] + 128]
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _81744 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _81928 = mem[64]
                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                            mem[64] = mem[64] + 96
                            mem[_81928] = mem[_81744]
                            mem[_81928 + 32] = mem[_81744 + 32]
                            mem[_81928 + 64] = mem[_81744 + 64]
                            _82398 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_82398] = mem[_81928 + 5 len 27]
                            mem[_82398 + 32] = mem[_81928 + 59 len 5]
                            if block.timestamp >= mem[_82398 + 59 len 5]:
                                require idx < mem[(32 * arg3.length) + 128]
                                _83494 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                mem[0] = _45452
                                mem[32] = 52
                                currentRoundId[_45452]++
                                _83689 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_83689] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                mem[_83689 + 32] = block.timestamp % 1099511627776
                                mem[0] = currentRoundId[_45452] + 1
                                mem[32] = sha3(_45452, 53)
                                stor53[_45452][stor52[_45452] + 1].field_0 = Mask(216, 0, _83494)
                                stor53[_45452][stor52[_45452] + 1].field_216 = block.timestamp % 1099511627776
                        else:
                            mem[ceil32(bandCurrencyKeys[_45452].length) + _59762 + _71353 + 132] = 0
                            require ext_code.size(bandOracleMap[_45452])
                            staticcall bandOracleMap[_45452].mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len ceil32(_71353) + ceil32(bandCurrencyKeys[_45452].length) + _59762 + -mem[64] + 128]
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _81836 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _82020 = mem[64]
                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                            mem[64] = mem[64] + 96
                            mem[_82020] = mem[_81836]
                            mem[_82020 + 32] = mem[_81836 + 32]
                            mem[_82020 + 64] = mem[_81836 + 64]
                            _82944 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_82944] = mem[_82020 + 5 len 27]
                            mem[_82944 + 32] = mem[_82020 + 59 len 5]
                            if block.timestamp >= mem[_82944 + 59 len 5]:
                                require idx < mem[(32 * arg3.length) + 128]
                                _83694 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                mem[0] = _45452
                                mem[32] = 52
                                currentRoundId[_45452]++
                                _84331 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_84331] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                mem[_84331 + 32] = block.timestamp % 1099511627776
                                mem[0] = currentRoundId[_45452] + 1
                                mem[32] = sha3(_45452, 53)
                                stor53[_45452][stor52[_45452] + 1].field_0 = Mask(216, 0, _83694)
                                stor53[_45452][stor52[_45452] + 1].field_216 = block.timestamp % 1099511627776
                    else:
                        mem[_59762 + bandCurrencyKeys[_45452].length + 100] = 0
                        mem[_59762 + 36] = ceil32(bandCurrencyKeys[_45452].length) + 96
                        _71583 = mem[_46095]
                        mem[ceil32(bandCurrencyKeys[_45452].length) + _59762 + 100] = mem[_46095]
                        s = 0
                        while s < _71583:
                            mem[s + ceil32(bandCurrencyKeys[_45452].length) + _59762 + 132] = mem[_46095 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_71583) <= _71583:
                            require ext_code.size(bandOracleMap[_45452])
                            staticcall bandOracleMap[_45452].mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len ceil32(_71583) + ceil32(bandCurrencyKeys[_45452].length) + _59762 + -mem[64] + 128]
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _81745 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _81929 = mem[64]
                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                            mem[64] = mem[64] + 96
                            mem[_81929] = mem[_81745]
                            mem[_81929 + 32] = mem[_81745 + 32]
                            mem[_81929 + 64] = mem[_81745 + 64]
                            _82404 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_82404] = mem[_81929 + 5 len 27]
                            mem[_82404 + 32] = mem[_81929 + 59 len 5]
                            if block.timestamp >= mem[_82404 + 59 len 5]:
                                require idx < mem[(32 * arg3.length) + 128]
                                _83496 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                mem[0] = _45452
                                mem[32] = 52
                                currentRoundId[_45452]++
                                _83696 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_83696] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                mem[_83696 + 32] = block.timestamp % 1099511627776
                                mem[0] = currentRoundId[_45452] + 1
                                mem[32] = sha3(_45452, 53)
                                stor53[_45452][stor52[_45452] + 1].field_0 = Mask(216, 0, _83496)
                                stor53[_45452][stor52[_45452] + 1].field_216 = block.timestamp % 1099511627776
                        else:
                            mem[ceil32(bandCurrencyKeys[_45452].length) + _59762 + _71583 + 132] = 0
                            require ext_code.size(bandOracleMap[_45452])
                            staticcall bandOracleMap[_45452].mem[mem[64] len 4] with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4 len ceil32(_71583) + ceil32(bandCurrencyKeys[_45452].length) + _59762 + -mem[64] + 128]
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _81837 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _82021 = mem[64]
                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                            mem[64] = mem[64] + 96
                            mem[_82021] = mem[_81837]
                            mem[_82021 + 32] = mem[_81837 + 32]
                            mem[_82021 + 64] = mem[_81837 + 64]
                            _82947 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_82947] = mem[_82021 + 5 len 27]
                            mem[_82947 + 32] = mem[_82021 + 59 len 5]
                            if block.timestamp >= mem[_82947 + 59 len 5]:
                                require idx < mem[(32 * arg3.length) + 128]
                                _83701 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                mem[0] = _45452
                                mem[32] = 52
                                currentRoundId[_45452]++
                                _84337 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_84337] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                mem[_84337 + 32] = block.timestamp % 1099511627776
                                mem[0] = currentRoundId[_45452] + 1
                                mem[32] = sha3(_45452, 53)
                                stor53[_45452][stor52[_45452] + 1].field_0 = Mask(216, 0, _83701)
                                stor53[_45452][stor52[_45452] + 1].field_216 = block.timestamp % 1099511627776
                idx = idx + 1
                continue 
            _45358 = mem[64]
            mem[mem[64]] = 64
            _45451 = mem[96]
            mem[mem[64] + 64] = mem[96]
            mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
            mem[mem[64] + 32] = (32 * mem[96]) + 96
            _59390 = mem[(32 * arg3.length) + 128]
            mem[_45358 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
            mem[_45358 + (32 * _45451) + 128 len 32 * _59390] = mem[(32 * arg3.length) + 160 len 32 * _59390]
            emit 0x50f45835: mem[mem[64] len _45358 + (32 * _45451) + (32 * _59390) + -mem[64] + 128]
    else:
        if not ext_code.size(this.address):
            if uint8(stor0.field_8):
                if not arg1:
                    revert with 0, 'LnAdminUpgradeable: zero address'
                adminAddress = arg1
                mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                emit AdminChanged(0, arg1);
                if uint8(stor0.field_8):
                    stalePeriod = 12 * 3600
                    if arg3.length != arg4.length:
                        revert with 0, 'array length error.'
                    oracleAddress = arg2
                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                         gas gas_remaining wei
                        args 
                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                    if not delegate.return_code:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    currentRoundId['lUSD']++
                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                    mem[0] = currentRoundId['lUSD'] + 1
                    mem[32] = sha3('lUSD', 53)
                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                    if arg3.length != arg4.length:
                        revert with 0, 'array length error, not match.'
                    if block.timestamp >= block.timestamp + 600:
                        revert with 0, 'Time error'
                    idx = 0
                    while idx < arg3.length:
                        require idx < mem[96]
                        _45455 = mem[(32 * idx) + 128]
                        require idx < mem[(32 * arg3.length) + 128]
                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                        if mem[(32 * idx) + 128] == 'lUSD':
                            revert with 0, 'LUSD cannot be updated.'
                        _45866 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_45866] = 0
                        mem[_45866 + 32] = 0
                        _46048 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_46048] = 0
                        mem[_46048 + 32] = 0
                        _46098 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_46098] = 3
                        mem[_46098 + 32] = 'USD'
                        mem[0] = _45455
                        mem[32] = 102
                        _46100 = mem[64]
                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45455].length) + 32
                        mem[_46100] = bandCurrencyKeys[_45455].length
                        mem[_46100 + 32] = bandCurrencyKeys[_45455].field_0
                        s = _46100 + 32
                        t = sha3(sha3(_45455, 102))
                        while _46100 + bandCurrencyKeys[_45455].length > s:
                            mem[s + 32] = uint256(stor1[t])
                            s = s + 32
                            t = t + 1
                            continue 
                        mem[0] = _45455
                        mem[32] = 100
                        if not bandOracleMap[_45455]:
                            _59766 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_59766] = 0
                            mem[_59766 + 32] = 0
                            mem[0] = currentRoundId[_45455]
                            mem[32] = sha3(_45455, 53)
                            _60003 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_60003] = stor53[_45455][stor52[_45455]].field_0
                            mem[_60003 + 32] = stor53[_45455][stor52[_45455]].field_216
                            if block.timestamp >= stor53[_45455][stor52[_45455]].field_216:
                                require idx < mem[(32 * arg3.length) + 128]
                                _61056 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                mem[0] = _45455
                                mem[32] = 52
                                currentRoundId[_45455]++
                                _61338 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_61338] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                mem[_61338 + 32] = block.timestamp % 1099511627776
                                mem[0] = currentRoundId[_45455] + 1
                                mem[32] = sha3(_45455, 53)
                                stor53[_45455][stor52[_45455] + 1].field_0 = Mask(216, 0, _61056)
                                stor53[_45455][stor52[_45455] + 1].field_216 = block.timestamp % 1099511627776
                        else:
                            _59623 = mem[64]
                            mem[64] = mem[64] + 96
                            mem[_59623] = 0
                            mem[_59623 + 32] = 0
                            mem[_59623 + 64] = 0
                            _59767 = mem[64]
                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 64
                            mem[mem[64] + 68] = bandCurrencyKeys[_45455].length
                            s = 0
                            while s < bandCurrencyKeys[_45455].length:
                                mem[s + mem[64] + 100] = mem[_46100 + s + 32]
                                s = s + 32
                                continue 
                            if ceil32(bandCurrencyKeys[_45455].length) <= bandCurrencyKeys[_45455].length:
                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45455].length) + 96
                                _71358 = mem[_46098]
                                mem[ceil32(bandCurrencyKeys[_45455].length) + mem[64] + 100] = mem[_46098]
                                s = 0
                                while s < _71358:
                                    mem[s + ceil32(bandCurrencyKeys[_45455].length) + mem[64] + 132] = mem[_46098 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_71358) <= _71358:
                                    require ext_code.size(bandOracleMap[_45455])
                                    staticcall bandOracleMap[_45455].getReferenceData(string rg1, string rg2) with:
                                            gas gas_remaining wei
                                           args Array(len=bandCurrencyKeys[_45455].length, data=mem[mem[64] + 100 len ceil32(_71358) + ceil32(bandCurrencyKeys[_45455].length) + 32]), ceil32(bandCurrencyKeys[_45455].length) + 96
                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _81746 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 96
                                    _81930 = mem[64]
                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                    mem[64] = mem[64] + 96
                                    mem[_81930] = mem[_81746]
                                    mem[_81930 + 32] = mem[_81746 + 32]
                                    mem[_81930 + 64] = mem[_81746 + 64]
                                    _82410 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_82410] = mem[_81930 + 5 len 27]
                                    mem[_82410 + 32] = mem[_81930 + 59 len 5]
                                    if block.timestamp >= mem[_82410 + 59 len 5]:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _83498 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45455
                                        mem[32] = 52
                                        currentRoundId[_45455]++
                                        _83703 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_83703] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_83703 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45455] + 1
                                        mem[32] = sha3(_45455, 53)
                                        stor53[_45455][stor52[_45455] + 1].field_0 = Mask(216, 0, _83498)
                                        stor53[_45455][stor52[_45455] + 1].field_216 = block.timestamp % 1099511627776
                                else:
                                    mem[ceil32(bandCurrencyKeys[_45455].length) + mem[64] + _71358 + 132] = 0
                                    require ext_code.size(bandOracleMap[_45455])
                                    staticcall bandOracleMap[_45455].getReferenceData(string rg1, string rg2) with:
                                            gas gas_remaining wei
                                           args Array(len=bandCurrencyKeys[_45455].length, data=mem[mem[64] + 100 len ceil32(_71358) + ceil32(bandCurrencyKeys[_45455].length) + 32]), ceil32(bandCurrencyKeys[_45455].length) + 96
                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _81838 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 96
                                    _82022 = mem[64]
                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                    mem[64] = mem[64] + 96
                                    mem[_82022] = mem[_81838]
                                    mem[_82022 + 32] = mem[_81838 + 32]
                                    mem[_82022 + 64] = mem[_81838 + 64]
                                    _82950 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_82950] = mem[_82022 + 5 len 27]
                                    mem[_82950 + 32] = mem[_82022 + 59 len 5]
                                    if block.timestamp >= mem[_82950 + 59 len 5]:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _83708 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45455
                                        mem[32] = 52
                                        currentRoundId[_45455]++
                                        _84343 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_84343] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_84343 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45455] + 1
                                        mem[32] = sha3(_45455, 53)
                                        stor53[_45455][stor52[_45455] + 1].field_0 = Mask(216, 0, _83708)
                                        stor53[_45455][stor52[_45455] + 1].field_216 = block.timestamp % 1099511627776
                            else:
                                mem[mem[64] + bandCurrencyKeys[_45455].length + 100] = 0
                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45455].length) + 96
                                _71588 = mem[_46098]
                                mem[ceil32(bandCurrencyKeys[_45455].length) + mem[64] + 100] = mem[_46098]
                                s = 0
                                while s < _71588:
                                    mem[s + ceil32(bandCurrencyKeys[_45455].length) + mem[64] + 132] = mem[_46098 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_71588) <= _71588:
                                    require ext_code.size(bandOracleMap[_45455])
                                    staticcall bandOracleMap[_45455].mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len ceil32(_71588) + ceil32(bandCurrencyKeys[_45455].length) + _59767 + -mem[64] + 128]
                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _81747 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 96
                                    _81931 = mem[64]
                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                    mem[64] = mem[64] + 96
                                    mem[_81931] = mem[_81747]
                                    mem[_81931 + 32] = mem[_81747 + 32]
                                    mem[_81931 + 64] = mem[_81747 + 64]
                                    _82416 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_82416] = mem[_81931 + 5 len 27]
                                    mem[_82416 + 32] = mem[_81931 + 59 len 5]
                                    if block.timestamp >= mem[_82416 + 59 len 5]:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _83500 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45455
                                        mem[32] = 52
                                        currentRoundId[_45455]++
                                        _83710 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_83710] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_83710 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45455] + 1
                                        mem[32] = sha3(_45455, 53)
                                        stor53[_45455][stor52[_45455] + 1].field_0 = Mask(216, 0, _83500)
                                        stor53[_45455][stor52[_45455] + 1].field_216 = block.timestamp % 1099511627776
                                else:
                                    mem[ceil32(bandCurrencyKeys[_45455].length) + _59767 + _71588 + 132] = 0
                                    require ext_code.size(bandOracleMap[_45455])
                                    staticcall bandOracleMap[_45455].mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len ceil32(_71588) + ceil32(bandCurrencyKeys[_45455].length) + _59767 + -mem[64] + 128]
                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _81839 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 96
                                    _82023 = mem[64]
                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                    mem[64] = mem[64] + 96
                                    mem[_82023] = mem[_81839]
                                    mem[_82023 + 32] = mem[_81839 + 32]
                                    mem[_82023 + 64] = mem[_81839 + 64]
                                    _82953 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_82953] = mem[_82023 + 5 len 27]
                                    mem[_82953 + 32] = mem[_82023 + 59 len 5]
                                    if block.timestamp >= mem[_82953 + 59 len 5]:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _83715 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45455
                                        mem[32] = 52
                                        currentRoundId[_45455]++
                                        _84349 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_84349] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_84349 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45455] + 1
                                        mem[32] = sha3(_45455, 53)
                                        stor53[_45455][stor52[_45455] + 1].field_0 = Mask(216, 0, _83715)
                                        stor53[_45455][stor52[_45455] + 1].field_216 = block.timestamp % 1099511627776
                        idx = idx + 1
                        continue 
                    _45360 = mem[64]
                    mem[mem[64]] = 64
                    _45454 = mem[96]
                    mem[mem[64] + 64] = mem[96]
                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                    _59394 = mem[(32 * arg3.length) + 128]
                    mem[_45360 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                    mem[_45360 + (32 * _45454) + 128 len 32 * _59394] = mem[(32 * arg3.length) + 160 len 32 * _59394]
                    emit 0x50f45835: mem[mem[64] len _45360 + (32 * _45454) + (32 * _59394) + -mem[64] + 128]
                else:
                    uint8(stor0.field_8) = 0
                    stalePeriod = 12 * 3600
                    if arg3.length != arg4.length:
                        revert with 0, 'array length error.'
                    oracleAddress = arg2
                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                         gas gas_remaining wei
                        args 
                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                    if not delegate.return_code:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    currentRoundId['lUSD']++
                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                    mem[0] = currentRoundId['lUSD'] + 1
                    mem[32] = sha3('lUSD', 53)
                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                    if arg3.length != arg4.length:
                        revert with 0, 'array length error, not match.'
                    if block.timestamp >= block.timestamp + 600:
                        revert with 0, 'Time error'
                    idx = 0
                    while idx < arg3.length:
                        require idx < mem[96]
                        _45458 = mem[(32 * idx) + 128]
                        require idx < mem[(32 * arg3.length) + 128]
                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                        if mem[(32 * idx) + 128] == 'lUSD':
                            revert with 0, 'LUSD cannot be updated.'
                        _45868 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_45868] = 0
                        mem[_45868 + 32] = 0
                        _46049 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_46049] = 0
                        mem[_46049 + 32] = 0
                        _46101 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_46101] = 3
                        mem[_46101 + 32] = 'USD'
                        mem[0] = _45458
                        mem[32] = 102
                        _46103 = mem[64]
                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45458].length) + 32
                        mem[_46103] = bandCurrencyKeys[_45458].length
                        mem[_46103 + 32] = bandCurrencyKeys[_45458].field_0
                        s = _46103 + 32
                        t = sha3(sha3(_45458, 102))
                        while _46103 + bandCurrencyKeys[_45458].length > s:
                            mem[s + 32] = uint256(stor1[t])
                            s = s + 32
                            t = t + 1
                            continue 
                        mem[0] = _45458
                        mem[32] = 100
                        if not bandOracleMap[_45458]:
                            _59771 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_59771] = 0
                            mem[_59771 + 32] = 0
                            mem[0] = currentRoundId[_45458]
                            mem[32] = sha3(_45458, 53)
                            _60010 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_60010] = stor53[_45458][stor52[_45458]].field_0
                            mem[_60010 + 32] = stor53[_45458][stor52[_45458]].field_216
                            if block.timestamp >= stor53[_45458][stor52[_45458]].field_216:
                                require idx < mem[(32 * arg3.length) + 128]
                                _61062 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                mem[0] = _45458
                                mem[32] = 52
                                currentRoundId[_45458]++
                                _61347 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_61347] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                mem[_61347 + 32] = block.timestamp % 1099511627776
                                mem[0] = currentRoundId[_45458] + 1
                                mem[32] = sha3(_45458, 53)
                                stor53[_45458][stor52[_45458] + 1].field_0 = Mask(216, 0, _61062)
                                stor53[_45458][stor52[_45458] + 1].field_216 = block.timestamp % 1099511627776
                        else:
                            _59626 = mem[64]
                            mem[64] = mem[64] + 96
                            mem[_59626] = 0
                            mem[_59626 + 32] = 0
                            mem[_59626 + 64] = 0
                            _59772 = mem[64]
                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 64
                            mem[mem[64] + 68] = bandCurrencyKeys[_45458].length
                            s = 0
                            while s < bandCurrencyKeys[_45458].length:
                                mem[s + mem[64] + 100] = mem[_46103 + s + 32]
                                s = s + 32
                                continue 
                            if ceil32(bandCurrencyKeys[_45458].length) <= bandCurrencyKeys[_45458].length:
                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45458].length) + 96
                                _71363 = mem[_46101]
                                mem[ceil32(bandCurrencyKeys[_45458].length) + _59772 + 100] = mem[_46101]
                                s = 0
                                while s < _71363:
                                    mem[s + ceil32(bandCurrencyKeys[_45458].length) + _59772 + 132] = mem[_46101 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_71363) <= _71363:
                                    require ext_code.size(bandOracleMap[_45458])
                                    staticcall bandOracleMap[_45458].mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len ceil32(_71363) + ceil32(bandCurrencyKeys[_45458].length) + _59772 + -mem[64] + 128]
                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _81748 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 96
                                    _81932 = mem[64]
                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                    mem[64] = mem[64] + 96
                                    mem[_81932] = mem[_81748]
                                    mem[_81932 + 32] = mem[_81748 + 32]
                                    mem[_81932 + 64] = mem[_81748 + 64]
                                    _82422 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_82422] = mem[_81932 + 5 len 27]
                                    mem[_82422 + 32] = mem[_81932 + 59 len 5]
                                    if block.timestamp >= mem[_82422 + 59 len 5]:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _83502 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45458
                                        mem[32] = 52
                                        currentRoundId[_45458]++
                                        _83717 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_83717] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_83717 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45458] + 1
                                        mem[32] = sha3(_45458, 53)
                                        stor53[_45458][stor52[_45458] + 1].field_0 = Mask(216, 0, _83502)
                                        stor53[_45458][stor52[_45458] + 1].field_216 = block.timestamp % 1099511627776
                                else:
                                    mem[ceil32(bandCurrencyKeys[_45458].length) + _59772 + _71363 + 132] = 0
                                    require ext_code.size(bandOracleMap[_45458])
                                    staticcall bandOracleMap[_45458].mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len ceil32(_71363) + ceil32(bandCurrencyKeys[_45458].length) + _59772 + -mem[64] + 128]
                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _81840 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 96
                                    _82024 = mem[64]
                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                    mem[64] = mem[64] + 96
                                    mem[_82024] = mem[_81840]
                                    mem[_82024 + 32] = mem[_81840 + 32]
                                    mem[_82024 + 64] = mem[_81840 + 64]
                                    _82956 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_82956] = mem[_82024 + 5 len 27]
                                    mem[_82956 + 32] = mem[_82024 + 59 len 5]
                                    if block.timestamp >= mem[_82956 + 59 len 5]:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _83722 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45458
                                        mem[32] = 52
                                        currentRoundId[_45458]++
                                        _84355 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_84355] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_84355 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45458] + 1
                                        mem[32] = sha3(_45458, 53)
                                        stor53[_45458][stor52[_45458] + 1].field_0 = Mask(216, 0, _83722)
                                        stor53[_45458][stor52[_45458] + 1].field_216 = block.timestamp % 1099511627776
                            else:
                                mem[mem[64] + bandCurrencyKeys[_45458].length + 100] = 0
                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45458].length) + 96
                                _71593 = mem[_46101]
                                mem[ceil32(bandCurrencyKeys[_45458].length) + _59772 + 100] = mem[_46101]
                                s = 0
                                while s < _71593:
                                    mem[s + ceil32(bandCurrencyKeys[_45458].length) + _59772 + 132] = mem[_46101 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_71593) <= _71593:
                                    require ext_code.size(bandOracleMap[_45458])
                                    staticcall bandOracleMap[_45458].mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len ceil32(_71593) + ceil32(bandCurrencyKeys[_45458].length) + _59772 + -mem[64] + 128]
                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _81749 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 96
                                    _81933 = mem[64]
                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                    mem[64] = mem[64] + 96
                                    mem[_81933] = mem[_81749]
                                    mem[_81933 + 32] = mem[_81749 + 32]
                                    mem[_81933 + 64] = mem[_81749 + 64]
                                    _82428 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_82428] = mem[_81933 + 5 len 27]
                                    mem[_82428 + 32] = mem[_81933 + 59 len 5]
                                    if block.timestamp >= mem[_82428 + 59 len 5]:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _83504 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45458
                                        mem[32] = 52
                                        currentRoundId[_45458]++
                                        _83724 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_83724] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_83724 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45458] + 1
                                        mem[32] = sha3(_45458, 53)
                                        stor53[_45458][stor52[_45458] + 1].field_0 = Mask(216, 0, _83504)
                                        stor53[_45458][stor52[_45458] + 1].field_216 = block.timestamp % 1099511627776
                                else:
                                    mem[ceil32(bandCurrencyKeys[_45458].length) + _59772 + _71593 + 132] = 0
                                    require ext_code.size(bandOracleMap[_45458])
                                    staticcall bandOracleMap[_45458].mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len ceil32(_71593) + ceil32(bandCurrencyKeys[_45458].length) + _59772 + -mem[64] + 128]
                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _81841 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 96
                                    _82025 = mem[64]
                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                    mem[64] = mem[64] + 96
                                    mem[_82025] = mem[_81841]
                                    mem[_82025 + 32] = mem[_81841 + 32]
                                    mem[_82025 + 64] = mem[_81841 + 64]
                                    _82959 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_82959] = mem[_82025 + 5 len 27]
                                    mem[_82959 + 32] = mem[_82025 + 59 len 5]
                                    if block.timestamp >= mem[_82959 + 59 len 5]:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _83729 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45458
                                        mem[32] = 52
                                        currentRoundId[_45458]++
                                        _84361 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_84361] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_84361 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45458] + 1
                                        mem[32] = sha3(_45458, 53)
                                        stor53[_45458][stor52[_45458] + 1].field_0 = Mask(216, 0, _83729)
                                        stor53[_45458][stor52[_45458] + 1].field_216 = block.timestamp % 1099511627776
                        idx = idx + 1
                        continue 
                    _45362 = mem[64]
                    mem[mem[64]] = 64
                    _45457 = mem[96]
                    mem[mem[64] + 64] = mem[96]
                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                    _59398 = mem[(32 * arg3.length) + 128]
                    mem[_45362 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                    mem[_45362 + (32 * _45457) + 128 len 32 * _59398] = mem[(32 * arg3.length) + 160 len 32 * _59398]
                    var84001 = _59398
                    emit 0x50f45835: mem[mem[64] len _45362 + (32 * _45457) + (32 * _59398) + -mem[64] + 128]
            else:
                uint8(stor0.field_0) = 1
                uint8(stor0.field_8) = 1
                Mask(248, 0, stor0.field_8) = 0
                if not ext_code.size(this.address):
                    if uint8(stor0.field_8):
                        if not arg1:
                            revert with 0, 'LnAdminUpgradeable: zero address'
                        adminAddress = arg1
                        mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                        emit AdminChanged(0, arg1);
                        if uint8(stor0.field_8):
                            stalePeriod = 12 * 3600
                            if arg3.length != arg4.length:
                                revert with 0, 'array length error.'
                            oracleAddress = arg2
                            require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                            delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                 gas gas_remaining wei
                                args 
                            mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                            if not delegate.return_code:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            currentRoundId['lUSD']++
                            mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                            mem[0] = currentRoundId['lUSD'] + 1
                            mem[32] = sha3('lUSD', 53)
                            stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                            stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                            if arg3.length != arg4.length:
                                revert with 0, 'array length error, not match.'
                            if block.timestamp >= block.timestamp + 600:
                                revert with 0, 'Time error'
                            idx = 0
                            while idx < arg3.length:
                                require idx < mem[96]
                                _45461 = mem[(32 * idx) + 128]
                                require idx < mem[(32 * arg3.length) + 128]
                                if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                    revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                if mem[(32 * idx) + 128] == 'lUSD':
                                    revert with 0, 'LUSD cannot be updated.'
                                _45870 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_45870] = 0
                                mem[_45870 + 32] = 0
                                _46050 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_46050] = 0
                                mem[_46050 + 32] = 0
                                _46104 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_46104] = 3
                                mem[_46104 + 32] = 'USD'
                                mem[0] = _45461
                                mem[32] = 102
                                _46106 = mem[64]
                                mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45461].length) + 32
                                mem[_46106] = bandCurrencyKeys[_45461].length
                                mem[_46106 + 32] = bandCurrencyKeys[_45461].field_0
                                s = _46106 + 32
                                t = sha3(sha3(_45461, 102))
                                while _46106 + bandCurrencyKeys[_45461].length > s:
                                    mem[s + 32] = uint256(stor1[t])
                                    s = s + 32
                                    t = t + 1
                                    continue 
                                mem[0] = _45461
                                mem[32] = 100
                                if not bandOracleMap[_45461]:
                                    _59776 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_59776] = 0
                                    mem[_59776 + 32] = 0
                                    mem[0] = currentRoundId[_45461]
                                    mem[32] = sha3(_45461, 53)
                                    _60017 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_60017] = stor53[_45461][stor52[_45461]].field_0
                                    mem[_60017 + 32] = stor53[_45461][stor52[_45461]].field_216
                                    if block.timestamp >= stor53[_45461][stor52[_45461]].field_216:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _61068 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45461
                                        mem[32] = 52
                                        currentRoundId[_45461]++
                                        _61356 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_61356] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_61356 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45461] + 1
                                        mem[32] = sha3(_45461, 53)
                                        stor53[_45461][stor52[_45461] + 1].field_0 = Mask(216, 0, _61068)
                                        stor53[_45461][stor52[_45461] + 1].field_216 = block.timestamp % 1099511627776
                                else:
                                    _59629 = mem[64]
                                    mem[64] = mem[64] + 96
                                    mem[_59629] = 0
                                    mem[_59629 + 32] = 0
                                    mem[_59629 + 64] = 0
                                    mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 64
                                    mem[mem[64] + 68] = bandCurrencyKeys[_45461].length
                                    s = 0
                                    while s < bandCurrencyKeys[_45461].length:
                                        mem[s + mem[64] + 100] = mem[_46106 + s + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(bandCurrencyKeys[_45461].length) <= bandCurrencyKeys[_45461].length:
                                        mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45461].length) + 96
                                        _71368 = mem[_46104]
                                        mem[ceil32(bandCurrencyKeys[_45461].length) + mem[64] + 100] = mem[_46104]
                                        s = 0
                                        while s < _71368:
                                            mem[s + ceil32(bandCurrencyKeys[_45461].length) + mem[64] + 132] = mem[_46104 + s + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_71368) <= _71368:
                                            require ext_code.size(bandOracleMap[_45461])
                                            staticcall bandOracleMap[_45461].getReferenceData(string rg1, string rg2) with:
                                                    gas gas_remaining wei
                                                   args Array(len=bandCurrencyKeys[_45461].length, data=mem[mem[64] + 100 len ceil32(_71368) + ceil32(bandCurrencyKeys[_45461].length) + 32]), ceil32(bandCurrencyKeys[_45461].length) + 96
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81750 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _81934 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_81934] = mem[_81750]
                                            mem[_81934 + 32] = mem[_81750 + 32]
                                            mem[_81934 + 64] = mem[_81750 + 64]
                                            _82434 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82434] = mem[_81934 + 5 len 27]
                                            mem[_82434 + 32] = mem[_81934 + 59 len 5]
                                            if block.timestamp >= mem[_82434 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83506 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45461
                                                mem[32] = 52
                                                currentRoundId[_45461]++
                                                _83731 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_83731] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_83731 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45461] + 1
                                                mem[32] = sha3(_45461, 53)
                                                stor53[_45461][stor52[_45461] + 1].field_0 = Mask(216, 0, _83506)
                                                stor53[_45461][stor52[_45461] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            mem[ceil32(bandCurrencyKeys[_45461].length) + mem[64] + _71368 + 132] = 0
                                            require ext_code.size(bandOracleMap[_45461])
                                            staticcall bandOracleMap[_45461].getReferenceData(string rg1, string rg2) with:
                                                    gas gas_remaining wei
                                                   args Array(len=bandCurrencyKeys[_45461].length, data=mem[mem[64] + 100 len ceil32(_71368) + ceil32(bandCurrencyKeys[_45461].length) + 32]), ceil32(bandCurrencyKeys[_45461].length) + 96
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81842 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _82026 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_82026] = mem[_81842]
                                            mem[_82026 + 32] = mem[_81842 + 32]
                                            mem[_82026 + 64] = mem[_81842 + 64]
                                            _82962 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82962] = mem[_82026 + 5 len 27]
                                            mem[_82962 + 32] = mem[_82026 + 59 len 5]
                                            if block.timestamp >= mem[_82962 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83736 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45461
                                                mem[32] = 52
                                                currentRoundId[_45461]++
                                                _84367 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84367] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84367 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45461] + 1
                                                mem[32] = sha3(_45461, 53)
                                                stor53[_45461][stor52[_45461] + 1].field_0 = Mask(216, 0, _83736)
                                                stor53[_45461][stor52[_45461] + 1].field_216 = block.timestamp % 1099511627776
                                    else:
                                        mem[mem[64] + bandCurrencyKeys[_45461].length + 100] = 0
                                        mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45461].length) + 96
                                        _71598 = mem[_46104]
                                        mem[ceil32(bandCurrencyKeys[_45461].length) + mem[64] + 100] = mem[_46104]
                                        s = 0
                                        while s < _71598:
                                            mem[s + ceil32(bandCurrencyKeys[_45461].length) + mem[64] + 132] = mem[_46104 + s + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_71598) <= _71598:
                                            require ext_code.size(bandOracleMap[_45461])
                                            staticcall bandOracleMap[_45461].getReferenceData(string rg1, string rg2) with:
                                                    gas gas_remaining wei
                                                   args Array(len=bandCurrencyKeys[_45461].length, data=mem[mem[64] + 100 len ceil32(_71598) + ceil32(bandCurrencyKeys[_45461].length) + 32]), ceil32(bandCurrencyKeys[_45461].length) + 96
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81751 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _81935 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_81935] = mem[_81751]
                                            mem[_81935 + 32] = mem[_81751 + 32]
                                            mem[_81935 + 64] = mem[_81751 + 64]
                                            _82440 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82440] = mem[_81935 + 5 len 27]
                                            mem[_82440 + 32] = mem[_81935 + 59 len 5]
                                            if block.timestamp >= mem[_82440 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83508 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45461
                                                mem[32] = 52
                                                currentRoundId[_45461]++
                                                _83738 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_83738] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_83738 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45461] + 1
                                                mem[32] = sha3(_45461, 53)
                                                stor53[_45461][stor52[_45461] + 1].field_0 = Mask(216, 0, _83508)
                                                stor53[_45461][stor52[_45461] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            mem[ceil32(bandCurrencyKeys[_45461].length) + mem[64] + _71598 + 132] = 0
                                            require ext_code.size(bandOracleMap[_45461])
                                            staticcall bandOracleMap[_45461].getReferenceData(string rg1, string rg2) with:
                                                    gas gas_remaining wei
                                                   args Array(len=bandCurrencyKeys[_45461].length, data=mem[mem[64] + 100 len ceil32(_71598) + ceil32(bandCurrencyKeys[_45461].length) + 32]), ceil32(bandCurrencyKeys[_45461].length) + 96
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81843 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _82027 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_82027] = mem[_81843]
                                            mem[_82027 + 32] = mem[_81843 + 32]
                                            mem[_82027 + 64] = mem[_81843 + 64]
                                            _82965 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82965] = mem[_82027 + 5 len 27]
                                            mem[_82965 + 32] = mem[_82027 + 59 len 5]
                                            if block.timestamp >= mem[_82965 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83743 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45461
                                                mem[32] = 52
                                                currentRoundId[_45461]++
                                                _84373 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84373] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84373 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45461] + 1
                                                mem[32] = sha3(_45461, 53)
                                                stor53[_45461][stor52[_45461] + 1].field_0 = Mask(216, 0, _83743)
                                                stor53[_45461][stor52[_45461] + 1].field_216 = block.timestamp % 1099511627776
                                idx = idx + 1
                                continue 
                            _45364 = mem[64]
                            mem[mem[64]] = 64
                            _45460 = mem[96]
                            mem[mem[64] + 64] = mem[96]
                            mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                            mem[mem[64] + 32] = (32 * mem[96]) + 96
                            _59402 = mem[(32 * arg3.length) + 128]
                            mem[_45364 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                            mem[_45364 + (32 * _45460) + 128 len 32 * _59402] = mem[(32 * arg3.length) + 160 len 32 * _59402]
                            var86001 = _59402
                            emit 0x50f45835: mem[mem[64] len _45364 + (32 * _45460) + (32 * _59402) + -mem[64] + 128]
                        else:
                            uint8(stor0.field_8) = 0
                            stalePeriod = 12 * 3600
                            if arg3.length != arg4.length:
                                revert with 0, 'array length error.'
                            oracleAddress = arg2
                            require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                            delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                 gas gas_remaining wei
                                args 
                            mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                            if not delegate.return_code:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            currentRoundId['lUSD']++
                            mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                            mem[0] = currentRoundId['lUSD'] + 1
                            mem[32] = sha3('lUSD', 53)
                            stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                            stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                            if arg3.length != arg4.length:
                                revert with 0, 'array length error, not match.'
                            if block.timestamp >= block.timestamp + 600:
                                revert with 0, 'Time error'
                            idx = 0
                            while idx < arg3.length:
                                require idx < mem[96]
                                _45464 = mem[(32 * idx) + 128]
                                require idx < mem[(32 * arg3.length) + 128]
                                if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                    revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                if mem[(32 * idx) + 128] == 'lUSD':
                                    revert with 0, 'LUSD cannot be updated.'
                                _45872 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_45872] = 0
                                mem[_45872 + 32] = 0
                                _46051 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_46051] = 0
                                mem[_46051 + 32] = 0
                                _46107 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_46107] = 3
                                mem[_46107 + 32] = 'USD'
                                mem[0] = _45464
                                mem[32] = 102
                                _46109 = mem[64]
                                mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45464].length) + 32
                                mem[_46109] = bandCurrencyKeys[_45464].length
                                mem[_46109 + 32] = bandCurrencyKeys[_45464].field_0
                                s = _46109 + 32
                                t = sha3(sha3(_45464, 102))
                                while _46109 + bandCurrencyKeys[_45464].length > s:
                                    mem[s + 32] = uint256(stor1[t])
                                    s = s + 32
                                    t = t + 1
                                    continue 
                                mem[0] = _45464
                                mem[32] = 100
                                if not bandOracleMap[_45464]:
                                    _59781 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_59781] = 0
                                    mem[_59781 + 32] = 0
                                    mem[0] = currentRoundId[_45464]
                                    mem[32] = sha3(_45464, 53)
                                    _60024 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_60024] = stor53[_45464][stor52[_45464]].field_0
                                    mem[_60024 + 32] = stor53[_45464][stor52[_45464]].field_216
                                    if block.timestamp >= stor53[_45464][stor52[_45464]].field_216:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _61074 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45464
                                        mem[32] = 52
                                        currentRoundId[_45464]++
                                        _61365 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_61365] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_61365 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45464] + 1
                                        mem[32] = sha3(_45464, 53)
                                        stor53[_45464][stor52[_45464] + 1].field_0 = Mask(216, 0, _61074)
                                        stor53[_45464][stor52[_45464] + 1].field_216 = block.timestamp % 1099511627776
                                else:
                                    _59632 = mem[64]
                                    mem[64] = mem[64] + 96
                                    mem[_59632] = 0
                                    mem[_59632 + 32] = 0
                                    mem[_59632 + 64] = 0
                                    _59782 = mem[64]
                                    mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 64
                                    mem[mem[64] + 68] = bandCurrencyKeys[_45464].length
                                    s = 0
                                    while s < bandCurrencyKeys[_45464].length:
                                        mem[s + mem[64] + 100] = mem[_46109 + s + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(bandCurrencyKeys[_45464].length) <= bandCurrencyKeys[_45464].length:
                                        mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45464].length) + 96
                                        _71373 = mem[_46107]
                                        mem[ceil32(bandCurrencyKeys[_45464].length) + mem[64] + 100] = mem[_46107]
                                        s = 0
                                        while s < _71373:
                                            mem[s + ceil32(bandCurrencyKeys[_45464].length) + mem[64] + 132] = mem[_46107 + s + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_71373) <= _71373:
                                            require ext_code.size(bandOracleMap[_45464])
                                            staticcall bandOracleMap[_45464].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71373) + ceil32(bandCurrencyKeys[_45464].length) + _59782 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81752 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _81936 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_81936] = mem[_81752]
                                            mem[_81936 + 32] = mem[_81752 + 32]
                                            mem[_81936 + 64] = mem[_81752 + 64]
                                            _82446 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82446] = mem[_81936 + 5 len 27]
                                            mem[_82446 + 32] = mem[_81936 + 59 len 5]
                                            if block.timestamp >= mem[_82446 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83510 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45464
                                                mem[32] = 52
                                                currentRoundId[_45464]++
                                                _83745 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_83745] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_83745 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45464] + 1
                                                mem[32] = sha3(_45464, 53)
                                                stor53[_45464][stor52[_45464] + 1].field_0 = Mask(216, 0, _83510)
                                                stor53[_45464][stor52[_45464] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            mem[ceil32(bandCurrencyKeys[_45464].length) + _59782 + _71373 + 132] = 0
                                            require ext_code.size(bandOracleMap[_45464])
                                            staticcall bandOracleMap[_45464].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71373) + ceil32(bandCurrencyKeys[_45464].length) + _59782 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81844 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _82028 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_82028] = mem[_81844]
                                            mem[_82028 + 32] = mem[_81844 + 32]
                                            mem[_82028 + 64] = mem[_81844 + 64]
                                            _82968 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82968] = mem[_82028 + 5 len 27]
                                            mem[_82968 + 32] = mem[_82028 + 59 len 5]
                                            if block.timestamp >= mem[_82968 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83750 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45464
                                                mem[32] = 52
                                                currentRoundId[_45464]++
                                                _84379 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84379] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84379 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45464] + 1
                                                mem[32] = sha3(_45464, 53)
                                                stor53[_45464][stor52[_45464] + 1].field_0 = Mask(216, 0, _83750)
                                                stor53[_45464][stor52[_45464] + 1].field_216 = block.timestamp % 1099511627776
                                    else:
                                        mem[mem[64] + bandCurrencyKeys[_45464].length + 100] = 0
                                        mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45464].length) + 96
                                        _71603 = mem[_46107]
                                        mem[ceil32(bandCurrencyKeys[_45464].length) + mem[64] + 100] = mem[_46107]
                                        s = 0
                                        while s < _71603:
                                            mem[s + ceil32(bandCurrencyKeys[_45464].length) + mem[64] + 132] = mem[_46107 + s + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_71603) <= _71603:
                                            require ext_code.size(bandOracleMap[_45464])
                                            staticcall bandOracleMap[_45464].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71603) + ceil32(bandCurrencyKeys[_45464].length) + _59782 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81753 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _81937 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_81937] = mem[_81753]
                                            mem[_81937 + 32] = mem[_81753 + 32]
                                            mem[_81937 + 64] = mem[_81753 + 64]
                                            _82452 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82452] = mem[_81937 + 5 len 27]
                                            mem[_82452 + 32] = mem[_81937 + 59 len 5]
                                            if block.timestamp >= mem[_82452 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83512 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45464
                                                mem[32] = 52
                                                currentRoundId[_45464]++
                                                _83752 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_83752] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_83752 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45464] + 1
                                                mem[32] = sha3(_45464, 53)
                                                stor53[_45464][stor52[_45464] + 1].field_0 = Mask(216, 0, _83512)
                                                stor53[_45464][stor52[_45464] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            mem[ceil32(bandCurrencyKeys[_45464].length) + _59782 + _71603 + 132] = 0
                                            require ext_code.size(bandOracleMap[_45464])
                                            staticcall bandOracleMap[_45464].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71603) + ceil32(bandCurrencyKeys[_45464].length) + _59782 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81845 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _82029 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_82029] = mem[_81845]
                                            mem[_82029 + 32] = mem[_81845 + 32]
                                            mem[_82029 + 64] = mem[_81845 + 64]
                                            _82971 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82971] = mem[_82029 + 5 len 27]
                                            mem[_82971 + 32] = mem[_82029 + 59 len 5]
                                            if block.timestamp >= mem[_82971 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83757 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45464
                                                mem[32] = 52
                                                currentRoundId[_45464]++
                                                _84385 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84385] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84385 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45464] + 1
                                                mem[32] = sha3(_45464, 53)
                                                stor53[_45464][stor52[_45464] + 1].field_0 = Mask(216, 0, _83757)
                                                stor53[_45464][stor52[_45464] + 1].field_216 = block.timestamp % 1099511627776
                                idx = idx + 1
                                continue 
                            _45366 = mem[64]
                            mem[mem[64]] = 64
                            _45463 = mem[96]
                            mem[mem[64] + 64] = mem[96]
                            mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                            mem[mem[64] + 32] = (32 * mem[96]) + 96
                            _59406 = mem[(32 * arg3.length) + 128]
                            mem[_45366 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                            mem[_45366 + (32 * _45463) + 128 len 32 * _59406] = mem[(32 * arg3.length) + 160 len 32 * _59406]
                            var87001 = _59406
                            emit 0x50f45835: mem[mem[64] len _45366 + (32 * _45463) + (32 * _59406) + -mem[64] + 128]
                    else:
                        uint8(stor0.field_0) = 1
                        uint8(stor0.field_8) = 1
                        Mask(248, 0, stor0.field_8) = 0
                        if not ext_code.size(this.address):
                            if uint8(stor0.field_8):
                                if not arg1:
                                    revert with 0, 'LnAdminUpgradeable: zero address'
                                adminAddress = arg1
                                mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                                emit AdminChanged(0, arg1);
                                if uint8(stor0.field_8):
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45467 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45874 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45874] = 0
                                        mem[_45874 + 32] = 0
                                        _46052 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46052] = 0
                                        mem[_46052 + 32] = 0
                                        _46110 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46110] = 3
                                        mem[_46110 + 32] = 'USD'
                                        mem[0] = _45467
                                        mem[32] = 102
                                        _46112 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45467].length) + 32
                                        mem[_46112] = bandCurrencyKeys[_45467].length
                                        mem[_46112 + 32] = bandCurrencyKeys[_45467].field_0
                                        s = _46112 + 32
                                        t = sha3(sha3(_45467, 102))
                                        while _46112 + bandCurrencyKeys[_45467].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45467
                                        mem[32] = 100
                                        if not bandOracleMap[_45467]:
                                            _59786 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59786] = 0
                                            mem[_59786 + 32] = 0
                                            mem[0] = currentRoundId[_45467]
                                            mem[32] = sha3(_45467, 53)
                                            _60031 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60031] = stor53[_45467][stor52[_45467]].field_0
                                            mem[_60031 + 32] = stor53[_45467][stor52[_45467]].field_216
                                            if block.timestamp >= stor53[_45467][stor52[_45467]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61080 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45467
                                                mem[32] = 52
                                                currentRoundId[_45467]++
                                                _61374 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61374] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61374 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45467] + 1
                                                mem[32] = sha3(_45467, 53)
                                                stor53[_45467][stor52[_45467] + 1].field_0 = Mask(216, 0, _61080)
                                                stor53[_45467][stor52[_45467] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59635 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59635] = 0
                                            mem[_59635 + 32] = 0
                                            mem[_59635 + 64] = 0
                                            _59787 = mem[64]
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45467].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45467].length:
                                                mem[s + mem[64] + 100] = mem[_46112 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45467].length) <= bandCurrencyKeys[_45467].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45467].length) + 96
                                                _71378 = mem[_46110]
                                                mem[ceil32(bandCurrencyKeys[_45467].length) + _59787 + 100] = mem[_46110]
                                                s = 0
                                                while s < _71378:
                                                    mem[s + ceil32(bandCurrencyKeys[_45467].length) + _59787 + 132] = mem[_46110 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71378) <= _71378:
                                                    require ext_code.size(bandOracleMap[_45467])
                                                    staticcall bandOracleMap[_45467].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71378) + ceil32(bandCurrencyKeys[_45467].length) + _59787 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81754 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81938 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81938] = mem[_81754]
                                                    mem[_81938 + 32] = mem[_81754 + 32]
                                                    mem[_81938 + 64] = mem[_81754 + 64]
                                                    _82458 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82458] = mem[_81938 + 5 len 27]
                                                    mem[_82458 + 32] = mem[_81938 + 59 len 5]
                                                    if block.timestamp >= mem[_82458 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83514 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45467
                                                        mem[32] = 52
                                                        currentRoundId[_45467]++
                                                        _83759 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83759] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83759 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45467] + 1
                                                        mem[32] = sha3(_45467, 53)
                                                        stor53[_45467][stor52[_45467] + 1].field_0 = Mask(216, 0, _83514)
                                                        stor53[_45467][stor52[_45467] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45467].length) + _59787 + _71378 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45467])
                                                    staticcall bandOracleMap[_45467].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71378) + ceil32(bandCurrencyKeys[_45467].length) + _59787 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81846 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82030 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82030] = mem[_81846]
                                                    mem[_82030 + 32] = mem[_81846 + 32]
                                                    mem[_82030 + 64] = mem[_81846 + 64]
                                                    _82974 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82974] = mem[_82030 + 5 len 27]
                                                    mem[_82974 + 32] = mem[_82030 + 59 len 5]
                                                    if block.timestamp >= mem[_82974 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83764 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45467
                                                        mem[32] = 52
                                                        currentRoundId[_45467]++
                                                        _84391 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84391] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84391 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45467] + 1
                                                        mem[32] = sha3(_45467, 53)
                                                        stor53[_45467][stor52[_45467] + 1].field_0 = Mask(216, 0, _83764)
                                                        stor53[_45467][stor52[_45467] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45467].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45467].length) + 96
                                                _71608 = mem[_46110]
                                                mem[ceil32(bandCurrencyKeys[_45467].length) + _59787 + 100] = mem[_46110]
                                                s = 0
                                                while s < _71608:
                                                    mem[s + ceil32(bandCurrencyKeys[_45467].length) + _59787 + 132] = mem[_46110 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71608) <= _71608:
                                                    require ext_code.size(bandOracleMap[_45467])
                                                    staticcall bandOracleMap[_45467].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71608) + ceil32(bandCurrencyKeys[_45467].length) + _59787 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81755 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81939 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81939] = mem[_81755]
                                                    mem[_81939 + 32] = mem[_81755 + 32]
                                                    mem[_81939 + 64] = mem[_81755 + 64]
                                                    _82464 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82464] = mem[_81939 + 5 len 27]
                                                    mem[_82464 + 32] = mem[_81939 + 59 len 5]
                                                    if block.timestamp >= mem[_82464 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83516 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45467
                                                        mem[32] = 52
                                                        currentRoundId[_45467]++
                                                        _83766 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83766] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83766 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45467] + 1
                                                        mem[32] = sha3(_45467, 53)
                                                        stor53[_45467][stor52[_45467] + 1].field_0 = Mask(216, 0, _83516)
                                                        stor53[_45467][stor52[_45467] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45467].length) + _59787 + _71608 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45467])
                                                    staticcall bandOracleMap[_45467].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71608) + ceil32(bandCurrencyKeys[_45467].length) + _59787 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81847 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82031 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82031] = mem[_81847]
                                                    mem[_82031 + 32] = mem[_81847 + 32]
                                                    mem[_82031 + 64] = mem[_81847 + 64]
                                                    _82977 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82977] = mem[_82031 + 5 len 27]
                                                    mem[_82977 + 32] = mem[_82031 + 59 len 5]
                                                    if block.timestamp >= mem[_82977 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83771 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45467
                                                        mem[32] = 52
                                                        currentRoundId[_45467]++
                                                        _84397 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84397] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84397 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45467] + 1
                                                        mem[32] = sha3(_45467, 53)
                                                        stor53[_45467][stor52[_45467] + 1].field_0 = Mask(216, 0, _83771)
                                                        stor53[_45467][stor52[_45467] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45368 = mem[64]
                                    mem[mem[64]] = 64
                                    _45466 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59410 = mem[(32 * arg3.length) + 128]
                                    mem[_45368 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45368 + (32 * _45466) + 128 len 32 * _59410] = mem[(32 * arg3.length) + 160 len 32 * _59410]
                                    var89001 = _59410
                                    emit 0x50f45835: mem[mem[64] len _45368 + (32 * _45466) + (32 * _59410) + -mem[64] + 128]
                                else:
                                    uint8(stor0.field_8) = 0
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45470 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45876 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45876] = 0
                                        mem[_45876 + 32] = 0
                                        _46053 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46053] = 0
                                        mem[_46053 + 32] = 0
                                        _46113 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46113] = 3
                                        mem[_46113 + 32] = 'USD'
                                        mem[0] = _45470
                                        mem[32] = 102
                                        _46115 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45470].length) + 32
                                        mem[_46115] = bandCurrencyKeys[_45470].length
                                        mem[_46115 + 32] = bandCurrencyKeys[_45470].field_0
                                        s = _46115 + 32
                                        t = sha3(sha3(_45470, 102))
                                        while _46115 + bandCurrencyKeys[_45470].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45470
                                        mem[32] = 100
                                        if not bandOracleMap[_45470]:
                                            _59791 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59791] = 0
                                            mem[_59791 + 32] = 0
                                            mem[0] = currentRoundId[_45470]
                                            mem[32] = sha3(_45470, 53)
                                            _60038 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60038] = stor53[_45470][stor52[_45470]].field_0
                                            mem[_60038 + 32] = stor53[_45470][stor52[_45470]].field_216
                                            if block.timestamp >= stor53[_45470][stor52[_45470]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61086 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45470
                                                mem[32] = 52
                                                currentRoundId[_45470]++
                                                _61383 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61383] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61383 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45470] + 1
                                                mem[32] = sha3(_45470, 53)
                                                stor53[_45470][stor52[_45470] + 1].field_0 = Mask(216, 0, _61086)
                                                stor53[_45470][stor52[_45470] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59638 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59638] = 0
                                            mem[_59638 + 32] = 0
                                            mem[_59638 + 64] = 0
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45470].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45470].length:
                                                mem[s + mem[64] + 100] = mem[_46115 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45470].length) <= bandCurrencyKeys[_45470].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45470].length) + 96
                                                _71383 = mem[_46113]
                                                mem[ceil32(bandCurrencyKeys[_45470].length) + mem[64] + 100] = mem[_46113]
                                                s = 0
                                                while s < _71383:
                                                    mem[s + ceil32(bandCurrencyKeys[_45470].length) + mem[64] + 132] = mem[_46113 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71383) <= _71383:
                                                    require ext_code.size(bandOracleMap[_45470])
                                                    staticcall bandOracleMap[_45470].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45470].length, data=mem[mem[64] + 100 len ceil32(_71383) + ceil32(bandCurrencyKeys[_45470].length) + 32]), ceil32(bandCurrencyKeys[_45470].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81756 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81940 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81940] = mem[_81756]
                                                    mem[_81940 + 32] = mem[_81756 + 32]
                                                    mem[_81940 + 64] = mem[_81756 + 64]
                                                    _82470 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82470] = mem[_81940 + 5 len 27]
                                                    mem[_82470 + 32] = mem[_81940 + 59 len 5]
                                                    if block.timestamp >= mem[_82470 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83518 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45470
                                                        mem[32] = 52
                                                        currentRoundId[_45470]++
                                                        _83773 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83773] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83773 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45470] + 1
                                                        mem[32] = sha3(_45470, 53)
                                                        stor53[_45470][stor52[_45470] + 1].field_0 = Mask(216, 0, _83518)
                                                        stor53[_45470][stor52[_45470] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45470].length) + mem[64] + _71383 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45470])
                                                    staticcall bandOracleMap[_45470].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45470].length, data=mem[mem[64] + 100 len ceil32(_71383) + ceil32(bandCurrencyKeys[_45470].length) + 32]), ceil32(bandCurrencyKeys[_45470].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81848 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82032 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82032] = mem[_81848]
                                                    mem[_82032 + 32] = mem[_81848 + 32]
                                                    mem[_82032 + 64] = mem[_81848 + 64]
                                                    _82980 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82980] = mem[_82032 + 5 len 27]
                                                    mem[_82980 + 32] = mem[_82032 + 59 len 5]
                                                    if block.timestamp >= mem[_82980 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83778 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45470
                                                        mem[32] = 52
                                                        currentRoundId[_45470]++
                                                        _84403 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84403] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84403 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45470] + 1
                                                        mem[32] = sha3(_45470, 53)
                                                        stor53[_45470][stor52[_45470] + 1].field_0 = Mask(216, 0, _83778)
                                                        stor53[_45470][stor52[_45470] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45470].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45470].length) + 96
                                                _71613 = mem[_46113]
                                                mem[ceil32(bandCurrencyKeys[_45470].length) + mem[64] + 100] = mem[_46113]
                                                s = 0
                                                while s < _71613:
                                                    mem[s + ceil32(bandCurrencyKeys[_45470].length) + mem[64] + 132] = mem[_46113 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71613) <= _71613:
                                                    require ext_code.size(bandOracleMap[_45470])
                                                    staticcall bandOracleMap[_45470].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45470].length, data=mem[mem[64] + 100 len ceil32(_71613) + ceil32(bandCurrencyKeys[_45470].length) + 32]), ceil32(bandCurrencyKeys[_45470].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81757 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81941 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81941] = mem[_81757]
                                                    mem[_81941 + 32] = mem[_81757 + 32]
                                                    mem[_81941 + 64] = mem[_81757 + 64]
                                                    _82476 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82476] = mem[_81941 + 5 len 27]
                                                    mem[_82476 + 32] = mem[_81941 + 59 len 5]
                                                    if block.timestamp >= mem[_82476 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83520 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45470
                                                        mem[32] = 52
                                                        currentRoundId[_45470]++
                                                        _83780 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83780] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83780 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45470] + 1
                                                        mem[32] = sha3(_45470, 53)
                                                        stor53[_45470][stor52[_45470] + 1].field_0 = Mask(216, 0, _83520)
                                                        stor53[_45470][stor52[_45470] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45470].length) + mem[64] + _71613 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45470])
                                                    staticcall bandOracleMap[_45470].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45470].length, data=mem[mem[64] + 100 len ceil32(_71613) + ceil32(bandCurrencyKeys[_45470].length) + 32]), ceil32(bandCurrencyKeys[_45470].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81849 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82033 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82033] = mem[_81849]
                                                    mem[_82033 + 32] = mem[_81849 + 32]
                                                    mem[_82033 + 64] = mem[_81849 + 64]
                                                    _82983 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82983] = mem[_82033 + 5 len 27]
                                                    mem[_82983 + 32] = mem[_82033 + 59 len 5]
                                                    if block.timestamp >= mem[_82983 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83785 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45470
                                                        mem[32] = 52
                                                        currentRoundId[_45470]++
                                                        _84409 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84409] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84409 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45470] + 1
                                                        mem[32] = sha3(_45470, 53)
                                                        stor53[_45470][stor52[_45470] + 1].field_0 = Mask(216, 0, _83785)
                                                        stor53[_45470][stor52[_45470] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45370 = mem[64]
                                    mem[mem[64]] = 64
                                    _45469 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59414 = mem[(32 * arg3.length) + 128]
                                    mem[_45370 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45370 + (32 * _45469) + 128 len 32 * _59414] = mem[(32 * arg3.length) + 160 len 32 * _59414]
                                    var90001 = _59414
                                    emit 0x50f45835: mem[mem[64] len _45370 + (32 * _45469) + (32 * _59414) + -mem[64] + 128]
                            else:
                                uint8(stor0.field_0) = 1
                                uint8(stor0.field_8) = 1
                                Mask(248, 0, stor0.field_8) = 0
                                if not arg1:
                                    revert with 0, 'LnAdminUpgradeable: zero address'
                                adminAddress = arg1
                                mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                                emit AdminChanged(0, arg1);
                                if uint8(stor0.field_8):
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45473 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45878 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45878] = 0
                                        mem[_45878 + 32] = 0
                                        _46054 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46054] = 0
                                        mem[_46054 + 32] = 0
                                        _46116 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46116] = 3
                                        mem[_46116 + 32] = 'USD'
                                        mem[0] = _45473
                                        mem[32] = 102
                                        _46118 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45473].length) + 32
                                        mem[_46118] = bandCurrencyKeys[_45473].length
                                        mem[_46118 + 32] = bandCurrencyKeys[_45473].field_0
                                        s = _46118 + 32
                                        t = sha3(sha3(_45473, 102))
                                        while _46118 + bandCurrencyKeys[_45473].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45473
                                        mem[32] = 100
                                        if not bandOracleMap[_45473]:
                                            _59796 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59796] = 0
                                            mem[_59796 + 32] = 0
                                            mem[0] = currentRoundId[_45473]
                                            mem[32] = sha3(_45473, 53)
                                            _60045 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60045] = stor53[_45473][stor52[_45473]].field_0
                                            mem[_60045 + 32] = stor53[_45473][stor52[_45473]].field_216
                                            if block.timestamp >= stor53[_45473][stor52[_45473]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61092 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45473
                                                mem[32] = 52
                                                currentRoundId[_45473]++
                                                _61392 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61392] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61392 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45473] + 1
                                                mem[32] = sha3(_45473, 53)
                                                stor53[_45473][stor52[_45473] + 1].field_0 = Mask(216, 0, _61092)
                                                stor53[_45473][stor52[_45473] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59641 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59641] = 0
                                            mem[_59641 + 32] = 0
                                            mem[_59641 + 64] = 0
                                            _59797 = mem[64]
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45473].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45473].length:
                                                mem[s + mem[64] + 100] = mem[_46118 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45473].length) <= bandCurrencyKeys[_45473].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45473].length) + 96
                                                _71388 = mem[_46116]
                                                mem[ceil32(bandCurrencyKeys[_45473].length) + _59797 + 100] = mem[_46116]
                                                s = 0
                                                while s < _71388:
                                                    mem[s + ceil32(bandCurrencyKeys[_45473].length) + _59797 + 132] = mem[_46116 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71388) <= _71388:
                                                    require ext_code.size(bandOracleMap[_45473])
                                                    staticcall bandOracleMap[_45473].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71388) + ceil32(bandCurrencyKeys[_45473].length) + _59797 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81758 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81942 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81942] = mem[_81758]
                                                    mem[_81942 + 32] = mem[_81758 + 32]
                                                    mem[_81942 + 64] = mem[_81758 + 64]
                                                    _82482 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82482] = mem[_81942 + 5 len 27]
                                                    mem[_82482 + 32] = mem[_81942 + 59 len 5]
                                                    if block.timestamp >= mem[_82482 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83522 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45473
                                                        mem[32] = 52
                                                        currentRoundId[_45473]++
                                                        _83787 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83787] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83787 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45473] + 1
                                                        mem[32] = sha3(_45473, 53)
                                                        stor53[_45473][stor52[_45473] + 1].field_0 = Mask(216, 0, _83522)
                                                        stor53[_45473][stor52[_45473] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45473].length) + _59797 + _71388 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45473])
                                                    staticcall bandOracleMap[_45473].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71388) + ceil32(bandCurrencyKeys[_45473].length) + _59797 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81850 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82034 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82034] = mem[_81850]
                                                    mem[_82034 + 32] = mem[_81850 + 32]
                                                    mem[_82034 + 64] = mem[_81850 + 64]
                                                    _82986 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82986] = mem[_82034 + 5 len 27]
                                                    mem[_82986 + 32] = mem[_82034 + 59 len 5]
                                                    if block.timestamp >= mem[_82986 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83792 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45473
                                                        mem[32] = 52
                                                        currentRoundId[_45473]++
                                                        _84415 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84415] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84415 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45473] + 1
                                                        mem[32] = sha3(_45473, 53)
                                                        stor53[_45473][stor52[_45473] + 1].field_0 = Mask(216, 0, _83792)
                                                        stor53[_45473][stor52[_45473] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45473].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45473].length) + 96
                                                _71618 = mem[_46116]
                                                mem[ceil32(bandCurrencyKeys[_45473].length) + _59797 + 100] = mem[_46116]
                                                s = 0
                                                while s < _71618:
                                                    mem[s + ceil32(bandCurrencyKeys[_45473].length) + _59797 + 132] = mem[_46116 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71618) <= _71618:
                                                    require ext_code.size(bandOracleMap[_45473])
                                                    staticcall bandOracleMap[_45473].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71618) + ceil32(bandCurrencyKeys[_45473].length) + _59797 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81759 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81943 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81943] = mem[_81759]
                                                    mem[_81943 + 32] = mem[_81759 + 32]
                                                    mem[_81943 + 64] = mem[_81759 + 64]
                                                    _82488 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82488] = mem[_81943 + 5 len 27]
                                                    mem[_82488 + 32] = mem[_81943 + 59 len 5]
                                                    if block.timestamp >= mem[_82488 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83524 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45473
                                                        mem[32] = 52
                                                        currentRoundId[_45473]++
                                                        _83794 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83794] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83794 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45473] + 1
                                                        mem[32] = sha3(_45473, 53)
                                                        stor53[_45473][stor52[_45473] + 1].field_0 = Mask(216, 0, _83524)
                                                        stor53[_45473][stor52[_45473] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45473].length) + _59797 + _71618 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45473])
                                                    staticcall bandOracleMap[_45473].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71618) + ceil32(bandCurrencyKeys[_45473].length) + _59797 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81851 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82035 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82035] = mem[_81851]
                                                    mem[_82035 + 32] = mem[_81851 + 32]
                                                    mem[_82035 + 64] = mem[_81851 + 64]
                                                    _82989 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82989] = mem[_82035 + 5 len 27]
                                                    mem[_82989 + 32] = mem[_82035 + 59 len 5]
                                                    if block.timestamp >= mem[_82989 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83799 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45473
                                                        mem[32] = 52
                                                        currentRoundId[_45473]++
                                                        _84421 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84421] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84421 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45473] + 1
                                                        mem[32] = sha3(_45473, 53)
                                                        stor53[_45473][stor52[_45473] + 1].field_0 = Mask(216, 0, _83799)
                                                        stor53[_45473][stor52[_45473] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45372 = mem[64]
                                    mem[mem[64]] = 64
                                    _45472 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59418 = mem[(32 * arg3.length) + 128]
                                    mem[_45372 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45372 + (32 * _45472) + 128 len 32 * _59418] = mem[(32 * arg3.length) + 160 len 32 * _59418]
                                    var90001 = _59418
                                    emit 0x50f45835: mem[mem[64] len _45372 + (32 * _45472) + (32 * _59418) + -mem[64] + 128]
                                else:
                                    uint8(stor0.field_8) = 0
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45476 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45880 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45880] = 0
                                        mem[_45880 + 32] = 0
                                        _46055 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46055] = 0
                                        mem[_46055 + 32] = 0
                                        _46119 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46119] = 3
                                        mem[_46119 + 32] = 'USD'
                                        mem[0] = _45476
                                        mem[32] = 102
                                        _46121 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45476].length) + 32
                                        mem[_46121] = bandCurrencyKeys[_45476].length
                                        mem[_46121 + 32] = bandCurrencyKeys[_45476].field_0
                                        s = _46121 + 32
                                        t = sha3(sha3(_45476, 102))
                                        while _46121 + bandCurrencyKeys[_45476].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45476
                                        mem[32] = 100
                                        if not bandOracleMap[_45476]:
                                            _59801 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59801] = 0
                                            mem[_59801 + 32] = 0
                                            mem[0] = currentRoundId[_45476]
                                            mem[32] = sha3(_45476, 53)
                                            _60052 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60052] = stor53[_45476][stor52[_45476]].field_0
                                            mem[_60052 + 32] = stor53[_45476][stor52[_45476]].field_216
                                            if block.timestamp >= stor53[_45476][stor52[_45476]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61098 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45476
                                                mem[32] = 52
                                                currentRoundId[_45476]++
                                                _61401 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61401] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61401 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45476] + 1
                                                mem[32] = sha3(_45476, 53)
                                                stor53[_45476][stor52[_45476] + 1].field_0 = Mask(216, 0, _61098)
                                                stor53[_45476][stor52[_45476] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59644 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59644] = 0
                                            mem[_59644 + 32] = 0
                                            mem[_59644 + 64] = 0
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45476].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45476].length:
                                                mem[s + mem[64] + 100] = mem[_46121 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45476].length) <= bandCurrencyKeys[_45476].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45476].length) + 96
                                                _71393 = mem[_46119]
                                                mem[ceil32(bandCurrencyKeys[_45476].length) + mem[64] + 100] = mem[_46119]
                                                s = 0
                                                while s < _71393:
                                                    mem[s + ceil32(bandCurrencyKeys[_45476].length) + mem[64] + 132] = mem[_46119 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71393) <= _71393:
                                                    require ext_code.size(bandOracleMap[_45476])
                                                    staticcall bandOracleMap[_45476].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45476].length, data=mem[mem[64] + 100 len ceil32(_71393) + ceil32(bandCurrencyKeys[_45476].length) + 32]), ceil32(bandCurrencyKeys[_45476].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81760 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81944 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81944] = mem[_81760]
                                                    mem[_81944 + 32] = mem[_81760 + 32]
                                                    mem[_81944 + 64] = mem[_81760 + 64]
                                                    _82494 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82494] = mem[_81944 + 5 len 27]
                                                    mem[_82494 + 32] = mem[_81944 + 59 len 5]
                                                    if block.timestamp >= mem[_82494 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83526 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45476
                                                        mem[32] = 52
                                                        currentRoundId[_45476]++
                                                        _83801 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83801] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83801 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45476] + 1
                                                        mem[32] = sha3(_45476, 53)
                                                        stor53[_45476][stor52[_45476] + 1].field_0 = Mask(216, 0, _83526)
                                                        stor53[_45476][stor52[_45476] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45476].length) + mem[64] + _71393 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45476])
                                                    staticcall bandOracleMap[_45476].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45476].length, data=mem[mem[64] + 100 len ceil32(_71393) + ceil32(bandCurrencyKeys[_45476].length) + 32]), ceil32(bandCurrencyKeys[_45476].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81852 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82036 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82036] = mem[_81852]
                                                    mem[_82036 + 32] = mem[_81852 + 32]
                                                    mem[_82036 + 64] = mem[_81852 + 64]
                                                    _82992 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82992] = mem[_82036 + 5 len 27]
                                                    mem[_82992 + 32] = mem[_82036 + 59 len 5]
                                                    if block.timestamp >= mem[_82992 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83806 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45476
                                                        mem[32] = 52
                                                        currentRoundId[_45476]++
                                                        _84427 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84427] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84427 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45476] + 1
                                                        mem[32] = sha3(_45476, 53)
                                                        stor53[_45476][stor52[_45476] + 1].field_0 = Mask(216, 0, _83806)
                                                        stor53[_45476][stor52[_45476] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45476].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45476].length) + 96
                                                _71623 = mem[_46119]
                                                mem[ceil32(bandCurrencyKeys[_45476].length) + mem[64] + 100] = mem[_46119]
                                                s = 0
                                                while s < _71623:
                                                    mem[s + ceil32(bandCurrencyKeys[_45476].length) + mem[64] + 132] = mem[_46119 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71623) <= _71623:
                                                    require ext_code.size(bandOracleMap[_45476])
                                                    staticcall bandOracleMap[_45476].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45476].length, data=mem[mem[64] + 100 len ceil32(_71623) + ceil32(bandCurrencyKeys[_45476].length) + 32]), ceil32(bandCurrencyKeys[_45476].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81761 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81945 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81945] = mem[_81761]
                                                    mem[_81945 + 32] = mem[_81761 + 32]
                                                    mem[_81945 + 64] = mem[_81761 + 64]
                                                    _82500 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82500] = mem[_81945 + 5 len 27]
                                                    mem[_82500 + 32] = mem[_81945 + 59 len 5]
                                                    if block.timestamp >= mem[_82500 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83528 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45476
                                                        mem[32] = 52
                                                        currentRoundId[_45476]++
                                                        _83808 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83808] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83808 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45476] + 1
                                                        mem[32] = sha3(_45476, 53)
                                                        stor53[_45476][stor52[_45476] + 1].field_0 = Mask(216, 0, _83528)
                                                        stor53[_45476][stor52[_45476] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45476].length) + mem[64] + _71623 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45476])
                                                    staticcall bandOracleMap[_45476].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45476].length, data=mem[mem[64] + 100 len ceil32(_71623) + ceil32(bandCurrencyKeys[_45476].length) + 32]), ceil32(bandCurrencyKeys[_45476].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81853 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82037 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82037] = mem[_81853]
                                                    mem[_82037 + 32] = mem[_81853 + 32]
                                                    mem[_82037 + 64] = mem[_81853 + 64]
                                                    _82995 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82995] = mem[_82037 + 5 len 27]
                                                    mem[_82995 + 32] = mem[_82037 + 59 len 5]
                                                    if block.timestamp >= mem[_82995 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83813 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45476
                                                        mem[32] = 52
                                                        currentRoundId[_45476]++
                                                        _84433 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84433] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84433 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45476] + 1
                                                        mem[32] = sha3(_45476, 53)
                                                        stor53[_45476][stor52[_45476] + 1].field_0 = Mask(216, 0, _83813)
                                                        stor53[_45476][stor52[_45476] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45374 = mem[64]
                                    mem[mem[64]] = 64
                                    _45475 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var84001 = mem[96]
                                    var84002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59422 = mem[(32 * arg3.length) + 128]
                                    mem[_45374 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45374 + (32 * _45475) + 128 len 32 * _59422] = mem[(32 * arg3.length) + 160 len 32 * _59422]
                                    var91001 = _59422
                                    emit 0x50f45835: mem[mem[64] len _45374 + (32 * _45475) + (32 * _59422) + -mem[64] + 128]
                        else:
                            if uint8(stor0.field_0):
                                revert with 0, 'Initializable: contract is already initialized'
                            if uint8(stor0.field_8):
                                if not arg1:
                                    revert with 0, 'LnAdminUpgradeable: zero address'
                                adminAddress = arg1
                                mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                                emit AdminChanged(0, arg1);
                                if uint8(stor0.field_8):
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45479 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45882 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45882] = 0
                                        mem[_45882 + 32] = 0
                                        _46056 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46056] = 0
                                        mem[_46056 + 32] = 0
                                        _46122 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46122] = 3
                                        mem[_46122 + 32] = 'USD'
                                        mem[0] = _45479
                                        mem[32] = 102
                                        _46124 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45479].length) + 32
                                        mem[_46124] = bandCurrencyKeys[_45479].length
                                        mem[_46124 + 32] = bandCurrencyKeys[_45479].field_0
                                        s = _46124 + 32
                                        t = sha3(sha3(_45479, 102))
                                        while _46124 + bandCurrencyKeys[_45479].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45479
                                        mem[32] = 100
                                        if not bandOracleMap[_45479]:
                                            _59806 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59806] = 0
                                            mem[_59806 + 32] = 0
                                            mem[0] = currentRoundId[_45479]
                                            mem[32] = sha3(_45479, 53)
                                            _60059 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60059] = stor53[_45479][stor52[_45479]].field_0
                                            mem[_60059 + 32] = stor53[_45479][stor52[_45479]].field_216
                                            if block.timestamp >= stor53[_45479][stor52[_45479]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61104 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45479
                                                mem[32] = 52
                                                currentRoundId[_45479]++
                                                _61410 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61410] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61410 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45479] + 1
                                                mem[32] = sha3(_45479, 53)
                                                stor53[_45479][stor52[_45479] + 1].field_0 = Mask(216, 0, _61104)
                                                stor53[_45479][stor52[_45479] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59647 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59647] = 0
                                            mem[_59647 + 32] = 0
                                            mem[_59647 + 64] = 0
                                            _59807 = mem[64]
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45479].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45479].length:
                                                mem[s + mem[64] + 100] = mem[_46124 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45479].length) <= bandCurrencyKeys[_45479].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45479].length) + 96
                                                _71398 = mem[_46122]
                                                mem[ceil32(bandCurrencyKeys[_45479].length) + mem[64] + 100] = mem[_46122]
                                                s = 0
                                                while s < _71398:
                                                    mem[s + ceil32(bandCurrencyKeys[_45479].length) + mem[64] + 132] = mem[_46122 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71398) <= _71398:
                                                    require ext_code.size(bandOracleMap[_45479])
                                                    staticcall bandOracleMap[_45479].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71398) + ceil32(bandCurrencyKeys[_45479].length) + _59807 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81762 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81946 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81946] = mem[_81762]
                                                    mem[_81946 + 32] = mem[_81762 + 32]
                                                    mem[_81946 + 64] = mem[_81762 + 64]
                                                    _82506 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82506] = mem[_81946 + 5 len 27]
                                                    mem[_82506 + 32] = mem[_81946 + 59 len 5]
                                                    if block.timestamp >= mem[_82506 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83530 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45479
                                                        mem[32] = 52
                                                        currentRoundId[_45479]++
                                                        _83815 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83815] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83815 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45479] + 1
                                                        mem[32] = sha3(_45479, 53)
                                                        stor53[_45479][stor52[_45479] + 1].field_0 = Mask(216, 0, _83530)
                                                        stor53[_45479][stor52[_45479] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45479].length) + _59807 + _71398 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45479])
                                                    staticcall bandOracleMap[_45479].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71398) + ceil32(bandCurrencyKeys[_45479].length) + _59807 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81854 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82038 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82038] = mem[_81854]
                                                    mem[_82038 + 32] = mem[_81854 + 32]
                                                    mem[_82038 + 64] = mem[_81854 + 64]
                                                    _82998 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82998] = mem[_82038 + 5 len 27]
                                                    mem[_82998 + 32] = mem[_82038 + 59 len 5]
                                                    if block.timestamp >= mem[_82998 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83820 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45479
                                                        mem[32] = 52
                                                        currentRoundId[_45479]++
                                                        _84439 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84439] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84439 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45479] + 1
                                                        mem[32] = sha3(_45479, 53)
                                                        stor53[_45479][stor52[_45479] + 1].field_0 = Mask(216, 0, _83820)
                                                        stor53[_45479][stor52[_45479] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45479].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45479].length) + 96
                                                _71628 = mem[_46122]
                                                mem[ceil32(bandCurrencyKeys[_45479].length) + mem[64] + 100] = mem[_46122]
                                                s = 0
                                                while s < _71628:
                                                    mem[s + ceil32(bandCurrencyKeys[_45479].length) + mem[64] + 132] = mem[_46122 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71628) <= _71628:
                                                    require ext_code.size(bandOracleMap[_45479])
                                                    staticcall bandOracleMap[_45479].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45479].length, data=mem[mem[64] + 100 len ceil32(_71628) + ceil32(bandCurrencyKeys[_45479].length) + 32]), ceil32(bandCurrencyKeys[_45479].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81763 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81947 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81947] = mem[_81763]
                                                    mem[_81947 + 32] = mem[_81763 + 32]
                                                    mem[_81947 + 64] = mem[_81763 + 64]
                                                    _82512 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82512] = mem[_81947 + 5 len 27]
                                                    mem[_82512 + 32] = mem[_81947 + 59 len 5]
                                                    if block.timestamp >= mem[_82512 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83532 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45479
                                                        mem[32] = 52
                                                        currentRoundId[_45479]++
                                                        _83822 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83822] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83822 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45479] + 1
                                                        mem[32] = sha3(_45479, 53)
                                                        stor53[_45479][stor52[_45479] + 1].field_0 = Mask(216, 0, _83532)
                                                        stor53[_45479][stor52[_45479] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45479].length) + mem[64] + _71628 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45479])
                                                    staticcall bandOracleMap[_45479].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45479].length, data=mem[mem[64] + 100 len ceil32(_71628) + ceil32(bandCurrencyKeys[_45479].length) + 32]), ceil32(bandCurrencyKeys[_45479].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81855 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82039 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82039] = mem[_81855]
                                                    mem[_82039 + 32] = mem[_81855 + 32]
                                                    mem[_82039 + 64] = mem[_81855 + 64]
                                                    _83001 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83001] = mem[_82039 + 5 len 27]
                                                    mem[_83001 + 32] = mem[_82039 + 59 len 5]
                                                    if block.timestamp >= mem[_83001 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83827 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45479
                                                        mem[32] = 52
                                                        currentRoundId[_45479]++
                                                        _84445 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84445] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84445 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45479] + 1
                                                        mem[32] = sha3(_45479, 53)
                                                        stor53[_45479][stor52[_45479] + 1].field_0 = Mask(216, 0, _83827)
                                                        stor53[_45479][stor52[_45479] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45376 = mem[64]
                                    mem[mem[64]] = 64
                                    _45478 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59426 = mem[(32 * arg3.length) + 128]
                                    mem[_45376 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45376 + (32 * _45478) + 128 len 32 * _59426] = mem[(32 * arg3.length) + 160 len 32 * _59426]
                                    var90001 = _59426
                                    emit 0x50f45835: mem[mem[64] len _45376 + (32 * _45478) + (32 * _59426) + -mem[64] + 128]
                                else:
                                    uint8(stor0.field_8) = 0
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45482 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45884 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45884] = 0
                                        mem[_45884 + 32] = 0
                                        _46057 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46057] = 0
                                        mem[_46057 + 32] = 0
                                        _46125 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46125] = 3
                                        mem[_46125 + 32] = 'USD'
                                        mem[0] = _45482
                                        mem[32] = 102
                                        _46127 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45482].length) + 32
                                        mem[_46127] = bandCurrencyKeys[_45482].length
                                        mem[_46127 + 32] = bandCurrencyKeys[_45482].field_0
                                        s = _46127 + 32
                                        t = sha3(sha3(_45482, 102))
                                        while _46127 + bandCurrencyKeys[_45482].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45482
                                        mem[32] = 100
                                        if not bandOracleMap[_45482]:
                                            _59811 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59811] = 0
                                            mem[_59811 + 32] = 0
                                            mem[0] = currentRoundId[_45482]
                                            mem[32] = sha3(_45482, 53)
                                            _60066 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60066] = stor53[_45482][stor52[_45482]].field_0
                                            mem[_60066 + 32] = stor53[_45482][stor52[_45482]].field_216
                                            if block.timestamp >= stor53[_45482][stor52[_45482]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61110 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45482
                                                mem[32] = 52
                                                currentRoundId[_45482]++
                                                _61419 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61419] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61419 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45482] + 1
                                                mem[32] = sha3(_45482, 53)
                                                stor53[_45482][stor52[_45482] + 1].field_0 = Mask(216, 0, _61110)
                                                stor53[_45482][stor52[_45482] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59650 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59650] = 0
                                            mem[_59650 + 32] = 0
                                            mem[_59650 + 64] = 0
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45482].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45482].length:
                                                mem[s + mem[64] + 100] = mem[_46127 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45482].length) <= bandCurrencyKeys[_45482].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45482].length) + 96
                                                _71403 = mem[_46125]
                                                mem[ceil32(bandCurrencyKeys[_45482].length) + mem[64] + 100] = mem[_46125]
                                                s = 0
                                                while s < _71403:
                                                    mem[s + ceil32(bandCurrencyKeys[_45482].length) + mem[64] + 132] = mem[_46125 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71403) <= _71403:
                                                    require ext_code.size(bandOracleMap[_45482])
                                                    staticcall bandOracleMap[_45482].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45482].length, data=mem[mem[64] + 100 len ceil32(_71403) + ceil32(bandCurrencyKeys[_45482].length) + 32]), ceil32(bandCurrencyKeys[_45482].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81764 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81948 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81948] = mem[_81764]
                                                    mem[_81948 + 32] = mem[_81764 + 32]
                                                    mem[_81948 + 64] = mem[_81764 + 64]
                                                    _82518 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82518] = mem[_81948 + 5 len 27]
                                                    mem[_82518 + 32] = mem[_81948 + 59 len 5]
                                                    if block.timestamp >= mem[_82518 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83534 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45482
                                                        mem[32] = 52
                                                        currentRoundId[_45482]++
                                                        _83829 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83829] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83829 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45482] + 1
                                                        mem[32] = sha3(_45482, 53)
                                                        stor53[_45482][stor52[_45482] + 1].field_0 = Mask(216, 0, _83534)
                                                        stor53[_45482][stor52[_45482] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45482].length) + mem[64] + _71403 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45482])
                                                    staticcall bandOracleMap[_45482].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45482].length, data=mem[mem[64] + 100 len ceil32(_71403) + ceil32(bandCurrencyKeys[_45482].length) + 32]), ceil32(bandCurrencyKeys[_45482].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81856 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82040 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82040] = mem[_81856]
                                                    mem[_82040 + 32] = mem[_81856 + 32]
                                                    mem[_82040 + 64] = mem[_81856 + 64]
                                                    _83004 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83004] = mem[_82040 + 5 len 27]
                                                    mem[_83004 + 32] = mem[_82040 + 59 len 5]
                                                    if block.timestamp >= mem[_83004 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83834 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45482
                                                        mem[32] = 52
                                                        currentRoundId[_45482]++
                                                        _84451 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84451] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84451 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45482] + 1
                                                        mem[32] = sha3(_45482, 53)
                                                        stor53[_45482][stor52[_45482] + 1].field_0 = Mask(216, 0, _83834)
                                                        stor53[_45482][stor52[_45482] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45482].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45482].length) + 96
                                                _71633 = mem[_46125]
                                                mem[ceil32(bandCurrencyKeys[_45482].length) + mem[64] + 100] = mem[_46125]
                                                s = 0
                                                while s < _71633:
                                                    mem[s + ceil32(bandCurrencyKeys[_45482].length) + mem[64] + 132] = mem[_46125 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71633) <= _71633:
                                                    require ext_code.size(bandOracleMap[_45482])
                                                    staticcall bandOracleMap[_45482].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45482].length, data=mem[mem[64] + 100 len ceil32(_71633) + ceil32(bandCurrencyKeys[_45482].length) + 32]), ceil32(bandCurrencyKeys[_45482].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81765 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81949 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81949] = mem[_81765]
                                                    mem[_81949 + 32] = mem[_81765 + 32]
                                                    mem[_81949 + 64] = mem[_81765 + 64]
                                                    _82524 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82524] = mem[_81949 + 5 len 27]
                                                    mem[_82524 + 32] = mem[_81949 + 59 len 5]
                                                    if block.timestamp >= mem[_82524 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83536 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45482
                                                        mem[32] = 52
                                                        currentRoundId[_45482]++
                                                        _83836 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83836] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83836 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45482] + 1
                                                        mem[32] = sha3(_45482, 53)
                                                        stor53[_45482][stor52[_45482] + 1].field_0 = Mask(216, 0, _83536)
                                                        stor53[_45482][stor52[_45482] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45482].length) + mem[64] + _71633 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45482])
                                                    staticcall bandOracleMap[_45482].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45482].length, data=mem[mem[64] + 100 len ceil32(_71633) + ceil32(bandCurrencyKeys[_45482].length) + 32]), ceil32(bandCurrencyKeys[_45482].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81857 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82041 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82041] = mem[_81857]
                                                    mem[_82041 + 32] = mem[_81857 + 32]
                                                    mem[_82041 + 64] = mem[_81857 + 64]
                                                    _83007 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83007] = mem[_82041 + 5 len 27]
                                                    mem[_83007 + 32] = mem[_82041 + 59 len 5]
                                                    if block.timestamp >= mem[_83007 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83841 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45482
                                                        mem[32] = 52
                                                        currentRoundId[_45482]++
                                                        _84457 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84457] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84457 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45482] + 1
                                                        mem[32] = sha3(_45482, 53)
                                                        stor53[_45482][stor52[_45482] + 1].field_0 = Mask(216, 0, _83841)
                                                        stor53[_45482][stor52[_45482] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45378 = mem[64]
                                    mem[mem[64]] = 64
                                    _45481 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var84001 = mem[96]
                                    var84002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59430 = mem[(32 * arg3.length) + 128]
                                    mem[_45378 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45378 + (32 * _45481) + 128 len 32 * _59430] = mem[(32 * arg3.length) + 160 len 32 * _59430]
                                    var91001 = _59430
                                    emit 0x50f45835: mem[mem[64] len _45378 + (32 * _45481) + (32 * _59430) + -mem[64] + 128]
                            else:
                                uint8(stor0.field_0) = 1
                                uint8(stor0.field_8) = 1
                                Mask(248, 0, stor0.field_8) = 0
                                if not arg1:
                                    revert with 0, 'LnAdminUpgradeable: zero address'
                                adminAddress = arg1
                                mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                                emit AdminChanged(0, arg1);
                                if uint8(stor0.field_8):
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45485 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45886 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45886] = 0
                                        mem[_45886 + 32] = 0
                                        _46058 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46058] = 0
                                        mem[_46058 + 32] = 0
                                        _46128 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46128] = 3
                                        mem[_46128 + 32] = 'USD'
                                        mem[0] = _45485
                                        mem[32] = 102
                                        _46130 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45485].length) + 32
                                        mem[_46130] = bandCurrencyKeys[_45485].length
                                        mem[_46130 + 32] = bandCurrencyKeys[_45485].field_0
                                        s = _46130 + 32
                                        t = sha3(sha3(_45485, 102))
                                        while _46130 + bandCurrencyKeys[_45485].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45485
                                        mem[32] = 100
                                        if not bandOracleMap[_45485]:
                                            _59816 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59816] = 0
                                            mem[_59816 + 32] = 0
                                            mem[0] = currentRoundId[_45485]
                                            mem[32] = sha3(_45485, 53)
                                            _60073 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60073] = stor53[_45485][stor52[_45485]].field_0
                                            mem[_60073 + 32] = stor53[_45485][stor52[_45485]].field_216
                                            if block.timestamp >= stor53[_45485][stor52[_45485]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61116 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45485
                                                mem[32] = 52
                                                currentRoundId[_45485]++
                                                _61428 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61428] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61428 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45485] + 1
                                                mem[32] = sha3(_45485, 53)
                                                stor53[_45485][stor52[_45485] + 1].field_0 = Mask(216, 0, _61116)
                                                stor53[_45485][stor52[_45485] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59653 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59653] = 0
                                            mem[_59653 + 32] = 0
                                            mem[_59653 + 64] = 0
                                            _59817 = mem[64]
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45485].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45485].length:
                                                mem[s + mem[64] + 100] = mem[_46130 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45485].length) <= bandCurrencyKeys[_45485].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45485].length) + 96
                                                _71408 = mem[_46128]
                                                mem[ceil32(bandCurrencyKeys[_45485].length) + mem[64] + 100] = mem[_46128]
                                                s = 0
                                                while s < _71408:
                                                    mem[s + ceil32(bandCurrencyKeys[_45485].length) + mem[64] + 132] = mem[_46128 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71408) <= _71408:
                                                    require ext_code.size(bandOracleMap[_45485])
                                                    staticcall bandOracleMap[_45485].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45485].length, data=mem[mem[64] + 100 len ceil32(_71408) + ceil32(bandCurrencyKeys[_45485].length) + 32]), ceil32(bandCurrencyKeys[_45485].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81766 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81950 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81950] = mem[_81766]
                                                    mem[_81950 + 32] = mem[_81766 + 32]
                                                    mem[_81950 + 64] = mem[_81766 + 64]
                                                    _82530 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82530] = mem[_81950 + 5 len 27]
                                                    mem[_82530 + 32] = mem[_81950 + 59 len 5]
                                                    if block.timestamp >= mem[_82530 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83538 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45485
                                                        mem[32] = 52
                                                        currentRoundId[_45485]++
                                                        _83843 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83843] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83843 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45485] + 1
                                                        mem[32] = sha3(_45485, 53)
                                                        stor53[_45485][stor52[_45485] + 1].field_0 = Mask(216, 0, _83538)
                                                        stor53[_45485][stor52[_45485] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45485].length) + mem[64] + _71408 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45485])
                                                    staticcall bandOracleMap[_45485].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45485].length, data=mem[mem[64] + 100 len ceil32(_71408) + ceil32(bandCurrencyKeys[_45485].length) + 32]), ceil32(bandCurrencyKeys[_45485].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81858 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82042 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82042] = mem[_81858]
                                                    mem[_82042 + 32] = mem[_81858 + 32]
                                                    mem[_82042 + 64] = mem[_81858 + 64]
                                                    _83010 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83010] = mem[_82042 + 5 len 27]
                                                    mem[_83010 + 32] = mem[_82042 + 59 len 5]
                                                    if block.timestamp >= mem[_83010 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83848 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45485
                                                        mem[32] = 52
                                                        currentRoundId[_45485]++
                                                        _84463 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84463] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84463 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45485] + 1
                                                        mem[32] = sha3(_45485, 53)
                                                        stor53[_45485][stor52[_45485] + 1].field_0 = Mask(216, 0, _83848)
                                                        stor53[_45485][stor52[_45485] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45485].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45485].length) + 96
                                                _71638 = mem[_46128]
                                                mem[ceil32(bandCurrencyKeys[_45485].length) + mem[64] + 100] = mem[_46128]
                                                s = 0
                                                while s < _71638:
                                                    mem[s + ceil32(bandCurrencyKeys[_45485].length) + mem[64] + 132] = mem[_46128 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71638) <= _71638:
                                                    require ext_code.size(bandOracleMap[_45485])
                                                    staticcall bandOracleMap[_45485].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71638) + ceil32(bandCurrencyKeys[_45485].length) + _59817 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81767 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81951 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81951] = mem[_81767]
                                                    mem[_81951 + 32] = mem[_81767 + 32]
                                                    mem[_81951 + 64] = mem[_81767 + 64]
                                                    _82536 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82536] = mem[_81951 + 5 len 27]
                                                    mem[_82536 + 32] = mem[_81951 + 59 len 5]
                                                    if block.timestamp >= mem[_82536 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83540 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45485
                                                        mem[32] = 52
                                                        currentRoundId[_45485]++
                                                        _83850 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83850] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83850 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45485] + 1
                                                        mem[32] = sha3(_45485, 53)
                                                        stor53[_45485][stor52[_45485] + 1].field_0 = Mask(216, 0, _83540)
                                                        stor53[_45485][stor52[_45485] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45485].length) + _59817 + _71638 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45485])
                                                    staticcall bandOracleMap[_45485].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71638) + ceil32(bandCurrencyKeys[_45485].length) + _59817 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81859 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82043 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82043] = mem[_81859]
                                                    mem[_82043 + 32] = mem[_81859 + 32]
                                                    mem[_82043 + 64] = mem[_81859 + 64]
                                                    _83013 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83013] = mem[_82043 + 5 len 27]
                                                    mem[_83013 + 32] = mem[_82043 + 59 len 5]
                                                    if block.timestamp >= mem[_83013 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83855 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45485
                                                        mem[32] = 52
                                                        currentRoundId[_45485]++
                                                        _84469 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84469] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84469 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45485] + 1
                                                        mem[32] = sha3(_45485, 53)
                                                        stor53[_45485][stor52[_45485] + 1].field_0 = Mask(216, 0, _83855)
                                                        stor53[_45485][stor52[_45485] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45380 = mem[64]
                                    mem[mem[64]] = 64
                                    _45484 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var84001 = mem[96]
                                    var84002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59434 = mem[(32 * arg3.length) + 128]
                                    mem[_45380 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45380 + (32 * _45484) + 128 len 32 * _59434] = mem[(32 * arg3.length) + 160 len 32 * _59434]
                                    var91001 = _59434
                                    emit 0x50f45835: mem[mem[64] len _45380 + (32 * _45484) + (32 * _59434) + -mem[64] + 128]
                                else:
                                    uint8(stor0.field_8) = 0
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45488 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45888 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45888] = 0
                                        mem[_45888 + 32] = 0
                                        _46059 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46059] = 0
                                        mem[_46059 + 32] = 0
                                        _46131 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46131] = 3
                                        mem[_46131 + 32] = 'USD'
                                        mem[0] = _45488
                                        mem[32] = 102
                                        _46133 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45488].length) + 32
                                        mem[_46133] = bandCurrencyKeys[_45488].length
                                        mem[_46133 + 32] = bandCurrencyKeys[_45488].field_0
                                        s = _46133 + 32
                                        t = sha3(sha3(_45488, 102))
                                        while _46133 + bandCurrencyKeys[_45488].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45488
                                        mem[32] = 100
                                        if not bandOracleMap[_45488]:
                                            _59821 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59821] = 0
                                            mem[_59821 + 32] = 0
                                            mem[0] = currentRoundId[_45488]
                                            mem[32] = sha3(_45488, 53)
                                            _60080 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60080] = stor53[_45488][stor52[_45488]].field_0
                                            mem[_60080 + 32] = stor53[_45488][stor52[_45488]].field_216
                                            if block.timestamp >= stor53[_45488][stor52[_45488]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61122 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45488
                                                mem[32] = 52
                                                currentRoundId[_45488]++
                                                _61437 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61437] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61437 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45488] + 1
                                                mem[32] = sha3(_45488, 53)
                                                stor53[_45488][stor52[_45488] + 1].field_0 = Mask(216, 0, _61122)
                                                stor53[_45488][stor52[_45488] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59656 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59656] = 0
                                            mem[_59656 + 32] = 0
                                            mem[_59656 + 64] = 0
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45488].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45488].length:
                                                mem[s + mem[64] + 100] = mem[_46133 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45488].length) <= bandCurrencyKeys[_45488].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45488].length) + 96
                                                _71413 = mem[_46131]
                                                mem[ceil32(bandCurrencyKeys[_45488].length) + mem[64] + 100] = mem[_46131]
                                                s = 0
                                                while s < _71413:
                                                    mem[s + ceil32(bandCurrencyKeys[_45488].length) + mem[64] + 132] = mem[_46131 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71413) <= _71413:
                                                    require ext_code.size(bandOracleMap[_45488])
                                                    staticcall bandOracleMap[_45488].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45488].length, data=mem[mem[64] + 100 len ceil32(_71413) + ceil32(bandCurrencyKeys[_45488].length) + 32]), ceil32(bandCurrencyKeys[_45488].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81768 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81952 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81952] = mem[_81768]
                                                    mem[_81952 + 32] = mem[_81768 + 32]
                                                    mem[_81952 + 64] = mem[_81768 + 64]
                                                    _82542 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82542] = mem[_81952 + 5 len 27]
                                                    mem[_82542 + 32] = mem[_81952 + 59 len 5]
                                                    if block.timestamp >= mem[_82542 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83542 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45488
                                                        mem[32] = 52
                                                        currentRoundId[_45488]++
                                                        _83857 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83857] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83857 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45488] + 1
                                                        mem[32] = sha3(_45488, 53)
                                                        stor53[_45488][stor52[_45488] + 1].field_0 = Mask(216, 0, _83542)
                                                        stor53[_45488][stor52[_45488] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45488].length) + mem[64] + _71413 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45488])
                                                    staticcall bandOracleMap[_45488].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45488].length, data=mem[mem[64] + 100 len ceil32(_71413) + ceil32(bandCurrencyKeys[_45488].length) + 32]), ceil32(bandCurrencyKeys[_45488].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81860 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82044 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82044] = mem[_81860]
                                                    mem[_82044 + 32] = mem[_81860 + 32]
                                                    mem[_82044 + 64] = mem[_81860 + 64]
                                                    _83016 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83016] = mem[_82044 + 5 len 27]
                                                    mem[_83016 + 32] = mem[_82044 + 59 len 5]
                                                    if block.timestamp >= mem[_83016 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83862 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45488
                                                        mem[32] = 52
                                                        currentRoundId[_45488]++
                                                        _84475 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84475] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84475 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45488] + 1
                                                        mem[32] = sha3(_45488, 53)
                                                        stor53[_45488][stor52[_45488] + 1].field_0 = Mask(216, 0, _83862)
                                                        stor53[_45488][stor52[_45488] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45488].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45488].length) + 96
                                                _71643 = mem[_46131]
                                                mem[ceil32(bandCurrencyKeys[_45488].length) + mem[64] + 100] = mem[_46131]
                                                s = 0
                                                while s < _71643:
                                                    mem[s + ceil32(bandCurrencyKeys[_45488].length) + mem[64] + 132] = mem[_46131 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71643) <= _71643:
                                                    require ext_code.size(bandOracleMap[_45488])
                                                    staticcall bandOracleMap[_45488].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45488].length, data=mem[mem[64] + 100 len ceil32(_71643) + ceil32(bandCurrencyKeys[_45488].length) + 32]), ceil32(bandCurrencyKeys[_45488].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81769 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81953 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81953] = mem[_81769]
                                                    mem[_81953 + 32] = mem[_81769 + 32]
                                                    mem[_81953 + 64] = mem[_81769 + 64]
                                                    _82548 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82548] = mem[_81953 + 5 len 27]
                                                    mem[_82548 + 32] = mem[_81953 + 59 len 5]
                                                    if block.timestamp >= mem[_82548 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83544 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45488
                                                        mem[32] = 52
                                                        currentRoundId[_45488]++
                                                        _83864 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83864] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83864 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45488] + 1
                                                        mem[32] = sha3(_45488, 53)
                                                        stor53[_45488][stor52[_45488] + 1].field_0 = Mask(216, 0, _83544)
                                                        stor53[_45488][stor52[_45488] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45488].length) + mem[64] + _71643 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45488])
                                                    staticcall bandOracleMap[_45488].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45488].length, data=mem[mem[64] + 100 len ceil32(_71643) + ceil32(bandCurrencyKeys[_45488].length) + 32]), ceil32(bandCurrencyKeys[_45488].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81861 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82045 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82045] = mem[_81861]
                                                    mem[_82045 + 32] = mem[_81861 + 32]
                                                    mem[_82045 + 64] = mem[_81861 + 64]
                                                    _83019 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83019] = mem[_82045 + 5 len 27]
                                                    mem[_83019 + 32] = mem[_82045 + 59 len 5]
                                                    if block.timestamp >= mem[_83019 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83869 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45488
                                                        mem[32] = 52
                                                        currentRoundId[_45488]++
                                                        _84481 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84481] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84481 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45488] + 1
                                                        mem[32] = sha3(_45488, 53)
                                                        stor53[_45488][stor52[_45488] + 1].field_0 = Mask(216, 0, _83869)
                                                        stor53[_45488][stor52[_45488] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45382 = mem[64]
                                    mem[mem[64]] = 64
                                    _45487 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var85001 = mem[96]
                                    var85002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59438 = mem[(32 * arg3.length) + 128]
                                    mem[_45382 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45382 + (32 * _45487) + 128 len 32 * _59438] = mem[(32 * arg3.length) + 160 len 32 * _59438]
                                    var92001 = _59438
                                    emit 0x50f45835: mem[mem[64] len _45382 + (32 * _45487) + (32 * _59438) + -mem[64] + 128]
                else:
                    if uint8(stor0.field_0):
                        revert with 0, 'Initializable: contract is already initialized'
                    if uint8(stor0.field_8):
                        if not arg1:
                            revert with 0, 'LnAdminUpgradeable: zero address'
                        adminAddress = arg1
                        mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                        emit AdminChanged(0, arg1);
                        if uint8(stor0.field_8):
                            stalePeriod = 12 * 3600
                            if arg3.length != arg4.length:
                                revert with 0, 'array length error.'
                            oracleAddress = arg2
                            require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                            delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                 gas gas_remaining wei
                                args 
                            mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                            if not delegate.return_code:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            currentRoundId['lUSD']++
                            mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                            mem[0] = currentRoundId['lUSD'] + 1
                            mem[32] = sha3('lUSD', 53)
                            stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                            stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                            if arg3.length != arg4.length:
                                revert with 0, 'array length error, not match.'
                            if block.timestamp >= block.timestamp + 600:
                                revert with 0, 'Time error'
                            idx = 0
                            while idx < arg3.length:
                                require idx < mem[96]
                                _45491 = mem[(32 * idx) + 128]
                                require idx < mem[(32 * arg3.length) + 128]
                                if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                    revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                if mem[(32 * idx) + 128] == 'lUSD':
                                    revert with 0, 'LUSD cannot be updated.'
                                _45890 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_45890] = 0
                                mem[_45890 + 32] = 0
                                _46060 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_46060] = 0
                                mem[_46060 + 32] = 0
                                _46134 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_46134] = 3
                                mem[_46134 + 32] = 'USD'
                                mem[0] = _45491
                                mem[32] = 102
                                _46136 = mem[64]
                                mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45491].length) + 32
                                mem[_46136] = bandCurrencyKeys[_45491].length
                                mem[_46136 + 32] = bandCurrencyKeys[_45491].field_0
                                s = _46136 + 32
                                t = sha3(sha3(_45491, 102))
                                while _46136 + bandCurrencyKeys[_45491].length > s:
                                    mem[s + 32] = uint256(stor1[t])
                                    s = s + 32
                                    t = t + 1
                                    continue 
                                mem[0] = _45491
                                mem[32] = 100
                                if not bandOracleMap[_45491]:
                                    _59826 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_59826] = 0
                                    mem[_59826 + 32] = 0
                                    mem[0] = currentRoundId[_45491]
                                    mem[32] = sha3(_45491, 53)
                                    _60087 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_60087] = stor53[_45491][stor52[_45491]].field_0
                                    mem[_60087 + 32] = stor53[_45491][stor52[_45491]].field_216
                                    if block.timestamp >= stor53[_45491][stor52[_45491]].field_216:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _61128 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45491
                                        mem[32] = 52
                                        currentRoundId[_45491]++
                                        _61446 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_61446] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_61446 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45491] + 1
                                        mem[32] = sha3(_45491, 53)
                                        stor53[_45491][stor52[_45491] + 1].field_0 = Mask(216, 0, _61128)
                                        stor53[_45491][stor52[_45491] + 1].field_216 = block.timestamp % 1099511627776
                                else:
                                    _59659 = mem[64]
                                    mem[64] = mem[64] + 96
                                    mem[_59659] = 0
                                    mem[_59659 + 32] = 0
                                    mem[_59659 + 64] = 0
                                    _59827 = mem[64]
                                    mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 64
                                    mem[mem[64] + 68] = bandCurrencyKeys[_45491].length
                                    s = 0
                                    while s < bandCurrencyKeys[_45491].length:
                                        mem[s + mem[64] + 100] = mem[_46136 + s + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(bandCurrencyKeys[_45491].length) <= bandCurrencyKeys[_45491].length:
                                        mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45491].length) + 96
                                        _71418 = mem[_46134]
                                        mem[ceil32(bandCurrencyKeys[_45491].length) + _59827 + 100] = mem[_46134]
                                        s = 0
                                        while s < _71418:
                                            mem[s + ceil32(bandCurrencyKeys[_45491].length) + _59827 + 132] = mem[_46134 + s + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_71418) <= _71418:
                                            require ext_code.size(bandOracleMap[_45491])
                                            staticcall bandOracleMap[_45491].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71418) + ceil32(bandCurrencyKeys[_45491].length) + _59827 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81770 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _81954 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_81954] = mem[_81770]
                                            mem[_81954 + 32] = mem[_81770 + 32]
                                            mem[_81954 + 64] = mem[_81770 + 64]
                                            _82554 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82554] = mem[_81954 + 5 len 27]
                                            mem[_82554 + 32] = mem[_81954 + 59 len 5]
                                            if block.timestamp >= mem[_82554 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83546 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45491
                                                mem[32] = 52
                                                currentRoundId[_45491]++
                                                _83871 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_83871] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_83871 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45491] + 1
                                                mem[32] = sha3(_45491, 53)
                                                stor53[_45491][stor52[_45491] + 1].field_0 = Mask(216, 0, _83546)
                                                stor53[_45491][stor52[_45491] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            mem[ceil32(bandCurrencyKeys[_45491].length) + _59827 + _71418 + 132] = 0
                                            require ext_code.size(bandOracleMap[_45491])
                                            staticcall bandOracleMap[_45491].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71418) + ceil32(bandCurrencyKeys[_45491].length) + _59827 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81862 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _82046 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_82046] = mem[_81862]
                                            mem[_82046 + 32] = mem[_81862 + 32]
                                            mem[_82046 + 64] = mem[_81862 + 64]
                                            _83022 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_83022] = mem[_82046 + 5 len 27]
                                            mem[_83022 + 32] = mem[_82046 + 59 len 5]
                                            if block.timestamp >= mem[_83022 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83876 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45491
                                                mem[32] = 52
                                                currentRoundId[_45491]++
                                                _84487 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84487] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84487 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45491] + 1
                                                mem[32] = sha3(_45491, 53)
                                                stor53[_45491][stor52[_45491] + 1].field_0 = Mask(216, 0, _83876)
                                                stor53[_45491][stor52[_45491] + 1].field_216 = block.timestamp % 1099511627776
                                    else:
                                        mem[mem[64] + bandCurrencyKeys[_45491].length + 100] = 0
                                        mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45491].length) + 96
                                        _71648 = mem[_46134]
                                        mem[ceil32(bandCurrencyKeys[_45491].length) + _59827 + 100] = mem[_46134]
                                        s = 0
                                        while s < _71648:
                                            mem[s + ceil32(bandCurrencyKeys[_45491].length) + _59827 + 132] = mem[_46134 + s + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_71648) <= _71648:
                                            require ext_code.size(bandOracleMap[_45491])
                                            staticcall bandOracleMap[_45491].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71648) + ceil32(bandCurrencyKeys[_45491].length) + _59827 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81771 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _81955 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_81955] = mem[_81771]
                                            mem[_81955 + 32] = mem[_81771 + 32]
                                            mem[_81955 + 64] = mem[_81771 + 64]
                                            _82560 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82560] = mem[_81955 + 5 len 27]
                                            mem[_82560 + 32] = mem[_81955 + 59 len 5]
                                            if block.timestamp >= mem[_82560 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83548 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45491
                                                mem[32] = 52
                                                currentRoundId[_45491]++
                                                _83878 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_83878] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_83878 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45491] + 1
                                                mem[32] = sha3(_45491, 53)
                                                stor53[_45491][stor52[_45491] + 1].field_0 = Mask(216, 0, _83548)
                                                stor53[_45491][stor52[_45491] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            mem[ceil32(bandCurrencyKeys[_45491].length) + _59827 + _71648 + 132] = 0
                                            require ext_code.size(bandOracleMap[_45491])
                                            staticcall bandOracleMap[_45491].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71648) + ceil32(bandCurrencyKeys[_45491].length) + _59827 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81863 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _82047 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_82047] = mem[_81863]
                                            mem[_82047 + 32] = mem[_81863 + 32]
                                            mem[_82047 + 64] = mem[_81863 + 64]
                                            _83025 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_83025] = mem[_82047 + 5 len 27]
                                            mem[_83025 + 32] = mem[_82047 + 59 len 5]
                                            if block.timestamp >= mem[_83025 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83883 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45491
                                                mem[32] = 52
                                                currentRoundId[_45491]++
                                                _84493 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84493] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84493 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45491] + 1
                                                mem[32] = sha3(_45491, 53)
                                                stor53[_45491][stor52[_45491] + 1].field_0 = Mask(216, 0, _83883)
                                                stor53[_45491][stor52[_45491] + 1].field_216 = block.timestamp % 1099511627776
                                idx = idx + 1
                                continue 
                            _45384 = mem[64]
                            mem[mem[64]] = 64
                            _45490 = mem[96]
                            mem[mem[64] + 64] = mem[96]
                            mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                            mem[mem[64] + 32] = (32 * mem[96]) + 96
                            _59442 = mem[(32 * arg3.length) + 128]
                            mem[_45384 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                            mem[_45384 + (32 * _45490) + 128 len 32 * _59442] = mem[(32 * arg3.length) + 160 len 32 * _59442]
                            var87001 = _59442
                            emit 0x50f45835: mem[mem[64] len _45384 + (32 * _45490) + (32 * _59442) + -mem[64] + 128]
                        else:
                            uint8(stor0.field_8) = 0
                            stalePeriod = 12 * 3600
                            if arg3.length != arg4.length:
                                revert with 0, 'array length error.'
                            oracleAddress = arg2
                            require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                            delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                 gas gas_remaining wei
                                args 
                            mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                            if not delegate.return_code:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            currentRoundId['lUSD']++
                            mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                            mem[0] = currentRoundId['lUSD'] + 1
                            mem[32] = sha3('lUSD', 53)
                            stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                            stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                            if arg3.length != arg4.length:
                                revert with 0, 'array length error, not match.'
                            if block.timestamp >= block.timestamp + 600:
                                revert with 0, 'Time error'
                            idx = 0
                            while idx < arg3.length:
                                require idx < mem[96]
                                _45494 = mem[(32 * idx) + 128]
                                require idx < mem[(32 * arg3.length) + 128]
                                if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                    revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                if mem[(32 * idx) + 128] == 'lUSD':
                                    revert with 0, 'LUSD cannot be updated.'
                                _45892 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_45892] = 0
                                mem[_45892 + 32] = 0
                                _46061 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_46061] = 0
                                mem[_46061 + 32] = 0
                                _46137 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_46137] = 3
                                mem[_46137 + 32] = 'USD'
                                mem[0] = _45494
                                mem[32] = 102
                                _46139 = mem[64]
                                mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45494].length) + 32
                                mem[_46139] = bandCurrencyKeys[_45494].length
                                mem[_46139 + 32] = bandCurrencyKeys[_45494].field_0
                                s = _46139 + 32
                                t = sha3(sha3(_45494, 102))
                                while _46139 + bandCurrencyKeys[_45494].length > s:
                                    mem[s + 32] = uint256(stor1[t])
                                    s = s + 32
                                    t = t + 1
                                    continue 
                                mem[0] = _45494
                                mem[32] = 100
                                if not bandOracleMap[_45494]:
                                    _59831 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_59831] = 0
                                    mem[_59831 + 32] = 0
                                    mem[0] = currentRoundId[_45494]
                                    mem[32] = sha3(_45494, 53)
                                    _60094 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_60094] = stor53[_45494][stor52[_45494]].field_0
                                    mem[_60094 + 32] = stor53[_45494][stor52[_45494]].field_216
                                    if block.timestamp >= stor53[_45494][stor52[_45494]].field_216:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _61134 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45494
                                        mem[32] = 52
                                        currentRoundId[_45494]++
                                        _61455 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_61455] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_61455 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45494] + 1
                                        mem[32] = sha3(_45494, 53)
                                        stor53[_45494][stor52[_45494] + 1].field_0 = Mask(216, 0, _61134)
                                        stor53[_45494][stor52[_45494] + 1].field_216 = block.timestamp % 1099511627776
                                else:
                                    _59662 = mem[64]
                                    mem[64] = mem[64] + 96
                                    mem[_59662] = 0
                                    mem[_59662 + 32] = 0
                                    mem[_59662 + 64] = 0
                                    _59832 = mem[64]
                                    mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 64
                                    mem[mem[64] + 68] = bandCurrencyKeys[_45494].length
                                    s = 0
                                    while s < bandCurrencyKeys[_45494].length:
                                        mem[s + mem[64] + 100] = mem[_46139 + s + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(bandCurrencyKeys[_45494].length) <= bandCurrencyKeys[_45494].length:
                                        mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45494].length) + 96
                                        _71423 = mem[_46137]
                                        mem[ceil32(bandCurrencyKeys[_45494].length) + mem[64] + 100] = mem[_46137]
                                        s = 0
                                        while s < _71423:
                                            mem[s + ceil32(bandCurrencyKeys[_45494].length) + mem[64] + 132] = mem[_46137 + s + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_71423) <= _71423:
                                            require ext_code.size(bandOracleMap[_45494])
                                            staticcall bandOracleMap[_45494].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71423) + ceil32(bandCurrencyKeys[_45494].length) + _59832 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81772 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _81956 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_81956] = mem[_81772]
                                            mem[_81956 + 32] = mem[_81772 + 32]
                                            mem[_81956 + 64] = mem[_81772 + 64]
                                            _82566 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82566] = mem[_81956 + 5 len 27]
                                            mem[_82566 + 32] = mem[_81956 + 59 len 5]
                                            if block.timestamp >= mem[_82566 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83550 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45494
                                                mem[32] = 52
                                                currentRoundId[_45494]++
                                                _83885 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_83885] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_83885 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45494] + 1
                                                mem[32] = sha3(_45494, 53)
                                                stor53[_45494][stor52[_45494] + 1].field_0 = Mask(216, 0, _83550)
                                                stor53[_45494][stor52[_45494] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            mem[ceil32(bandCurrencyKeys[_45494].length) + _59832 + _71423 + 132] = 0
                                            require ext_code.size(bandOracleMap[_45494])
                                            staticcall bandOracleMap[_45494].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71423) + ceil32(bandCurrencyKeys[_45494].length) + _59832 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81864 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _82048 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_82048] = mem[_81864]
                                            mem[_82048 + 32] = mem[_81864 + 32]
                                            mem[_82048 + 64] = mem[_81864 + 64]
                                            _83028 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_83028] = mem[_82048 + 5 len 27]
                                            mem[_83028 + 32] = mem[_82048 + 59 len 5]
                                            if block.timestamp >= mem[_83028 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83890 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45494
                                                mem[32] = 52
                                                currentRoundId[_45494]++
                                                _84499 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84499] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84499 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45494] + 1
                                                mem[32] = sha3(_45494, 53)
                                                stor53[_45494][stor52[_45494] + 1].field_0 = Mask(216, 0, _83890)
                                                stor53[_45494][stor52[_45494] + 1].field_216 = block.timestamp % 1099511627776
                                    else:
                                        mem[mem[64] + bandCurrencyKeys[_45494].length + 100] = 0
                                        mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45494].length) + 96
                                        _71653 = mem[_46137]
                                        mem[ceil32(bandCurrencyKeys[_45494].length) + mem[64] + 100] = mem[_46137]
                                        s = 0
                                        while s < _71653:
                                            mem[s + ceil32(bandCurrencyKeys[_45494].length) + mem[64] + 132] = mem[_46137 + s + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_71653) <= _71653:
                                            require ext_code.size(bandOracleMap[_45494])
                                            staticcall bandOracleMap[_45494].getReferenceData(string rg1, string rg2) with:
                                                    gas gas_remaining wei
                                                   args Array(len=bandCurrencyKeys[_45494].length, data=mem[mem[64] + 100 len ceil32(_71653) + ceil32(bandCurrencyKeys[_45494].length) + 32]), ceil32(bandCurrencyKeys[_45494].length) + 96
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81773 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _81957 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_81957] = mem[_81773]
                                            mem[_81957 + 32] = mem[_81773 + 32]
                                            mem[_81957 + 64] = mem[_81773 + 64]
                                            _82572 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82572] = mem[_81957 + 5 len 27]
                                            mem[_82572 + 32] = mem[_81957 + 59 len 5]
                                            if block.timestamp >= mem[_82572 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83552 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45494
                                                mem[32] = 52
                                                currentRoundId[_45494]++
                                                _83892 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_83892] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_83892 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45494] + 1
                                                mem[32] = sha3(_45494, 53)
                                                stor53[_45494][stor52[_45494] + 1].field_0 = Mask(216, 0, _83552)
                                                stor53[_45494][stor52[_45494] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            mem[ceil32(bandCurrencyKeys[_45494].length) + mem[64] + _71653 + 132] = 0
                                            require ext_code.size(bandOracleMap[_45494])
                                            staticcall bandOracleMap[_45494].getReferenceData(string rg1, string rg2) with:
                                                    gas gas_remaining wei
                                                   args Array(len=bandCurrencyKeys[_45494].length, data=mem[mem[64] + 100 len ceil32(_71653) + ceil32(bandCurrencyKeys[_45494].length) + 32]), ceil32(bandCurrencyKeys[_45494].length) + 96
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81865 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _82049 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_82049] = mem[_81865]
                                            mem[_82049 + 32] = mem[_81865 + 32]
                                            mem[_82049 + 64] = mem[_81865 + 64]
                                            _83031 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_83031] = mem[_82049 + 5 len 27]
                                            mem[_83031 + 32] = mem[_82049 + 59 len 5]
                                            if block.timestamp >= mem[_83031 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83897 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45494
                                                mem[32] = 52
                                                currentRoundId[_45494]++
                                                _84505 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84505] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84505 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45494] + 1
                                                mem[32] = sha3(_45494, 53)
                                                stor53[_45494][stor52[_45494] + 1].field_0 = Mask(216, 0, _83897)
                                                stor53[_45494][stor52[_45494] + 1].field_216 = block.timestamp % 1099511627776
                                idx = idx + 1
                                continue 
                            _45386 = mem[64]
                            mem[mem[64]] = 64
                            _45493 = mem[96]
                            mem[mem[64] + 64] = mem[96]
                            mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                            mem[mem[64] + 32] = (32 * mem[96]) + 96
                            _59446 = mem[(32 * arg3.length) + 128]
                            mem[_45386 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                            mem[_45386 + (32 * _45493) + 128 len 32 * _59446] = mem[(32 * arg3.length) + 160 len 32 * _59446]
                            var88001 = _59446
                            emit 0x50f45835: mem[mem[64] len _45386 + (32 * _45493) + (32 * _59446) + -mem[64] + 128]
                    else:
                        uint8(stor0.field_0) = 1
                        uint8(stor0.field_8) = 1
                        Mask(248, 0, stor0.field_8) = 0
                        if not ext_code.size(this.address):
                            if uint8(stor0.field_8):
                                if not arg1:
                                    revert with 0, 'LnAdminUpgradeable: zero address'
                                adminAddress = arg1
                                mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                                emit AdminChanged(0, arg1);
                                if uint8(stor0.field_8):
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45497 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45894 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45894] = 0
                                        mem[_45894 + 32] = 0
                                        _46062 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46062] = 0
                                        mem[_46062 + 32] = 0
                                        _46140 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46140] = 3
                                        mem[_46140 + 32] = 'USD'
                                        mem[0] = _45497
                                        mem[32] = 102
                                        _46142 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45497].length) + 32
                                        mem[_46142] = bandCurrencyKeys[_45497].length
                                        mem[_46142 + 32] = bandCurrencyKeys[_45497].field_0
                                        s = _46142 + 32
                                        t = sha3(sha3(_45497, 102))
                                        while _46142 + bandCurrencyKeys[_45497].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45497
                                        mem[32] = 100
                                        if not bandOracleMap[_45497]:
                                            _59836 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59836] = 0
                                            mem[_59836 + 32] = 0
                                            mem[0] = currentRoundId[_45497]
                                            mem[32] = sha3(_45497, 53)
                                            _60101 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60101] = stor53[_45497][stor52[_45497]].field_0
                                            mem[_60101 + 32] = stor53[_45497][stor52[_45497]].field_216
                                            if block.timestamp >= stor53[_45497][stor52[_45497]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61140 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45497
                                                mem[32] = 52
                                                currentRoundId[_45497]++
                                                _61464 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61464] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61464 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45497] + 1
                                                mem[32] = sha3(_45497, 53)
                                                stor53[_45497][stor52[_45497] + 1].field_0 = Mask(216, 0, _61140)
                                                stor53[_45497][stor52[_45497] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59665 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59665] = 0
                                            mem[_59665 + 32] = 0
                                            mem[_59665 + 64] = 0
                                            _59837 = mem[64]
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45497].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45497].length:
                                                mem[s + mem[64] + 100] = mem[_46142 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45497].length) <= bandCurrencyKeys[_45497].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45497].length) + 96
                                                _71428 = mem[_46140]
                                                mem[ceil32(bandCurrencyKeys[_45497].length) + _59837 + 100] = mem[_46140]
                                                s = 0
                                                while s < _71428:
                                                    mem[s + ceil32(bandCurrencyKeys[_45497].length) + _59837 + 132] = mem[_46140 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71428) <= _71428:
                                                    require ext_code.size(bandOracleMap[_45497])
                                                    staticcall bandOracleMap[_45497].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71428) + ceil32(bandCurrencyKeys[_45497].length) + _59837 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81774 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81958 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81958] = mem[_81774]
                                                    mem[_81958 + 32] = mem[_81774 + 32]
                                                    mem[_81958 + 64] = mem[_81774 + 64]
                                                    _82578 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82578] = mem[_81958 + 5 len 27]
                                                    mem[_82578 + 32] = mem[_81958 + 59 len 5]
                                                    if block.timestamp >= mem[_82578 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83554 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45497
                                                        mem[32] = 52
                                                        currentRoundId[_45497]++
                                                        _83899 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83899] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83899 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45497] + 1
                                                        mem[32] = sha3(_45497, 53)
                                                        stor53[_45497][stor52[_45497] + 1].field_0 = Mask(216, 0, _83554)
                                                        stor53[_45497][stor52[_45497] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45497].length) + _59837 + _71428 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45497])
                                                    staticcall bandOracleMap[_45497].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71428) + ceil32(bandCurrencyKeys[_45497].length) + _59837 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81866 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82050 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82050] = mem[_81866]
                                                    mem[_82050 + 32] = mem[_81866 + 32]
                                                    mem[_82050 + 64] = mem[_81866 + 64]
                                                    _83034 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83034] = mem[_82050 + 5 len 27]
                                                    mem[_83034 + 32] = mem[_82050 + 59 len 5]
                                                    if block.timestamp >= mem[_83034 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83904 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45497
                                                        mem[32] = 52
                                                        currentRoundId[_45497]++
                                                        _84511 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84511] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84511 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45497] + 1
                                                        mem[32] = sha3(_45497, 53)
                                                        stor53[_45497][stor52[_45497] + 1].field_0 = Mask(216, 0, _83904)
                                                        stor53[_45497][stor52[_45497] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45497].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45497].length) + 96
                                                _71658 = mem[_46140]
                                                mem[ceil32(bandCurrencyKeys[_45497].length) + _59837 + 100] = mem[_46140]
                                                s = 0
                                                while s < _71658:
                                                    mem[s + ceil32(bandCurrencyKeys[_45497].length) + _59837 + 132] = mem[_46140 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71658) <= _71658:
                                                    require ext_code.size(bandOracleMap[_45497])
                                                    staticcall bandOracleMap[_45497].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71658) + ceil32(bandCurrencyKeys[_45497].length) + _59837 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81775 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81959 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81959] = mem[_81775]
                                                    mem[_81959 + 32] = mem[_81775 + 32]
                                                    mem[_81959 + 64] = mem[_81775 + 64]
                                                    _82584 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82584] = mem[_81959 + 5 len 27]
                                                    mem[_82584 + 32] = mem[_81959 + 59 len 5]
                                                    if block.timestamp >= mem[_82584 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83556 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45497
                                                        mem[32] = 52
                                                        currentRoundId[_45497]++
                                                        _83906 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83906] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83906 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45497] + 1
                                                        mem[32] = sha3(_45497, 53)
                                                        stor53[_45497][stor52[_45497] + 1].field_0 = Mask(216, 0, _83556)
                                                        stor53[_45497][stor52[_45497] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45497].length) + _59837 + _71658 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45497])
                                                    staticcall bandOracleMap[_45497].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71658) + ceil32(bandCurrencyKeys[_45497].length) + _59837 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81867 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82051 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82051] = mem[_81867]
                                                    mem[_82051 + 32] = mem[_81867 + 32]
                                                    mem[_82051 + 64] = mem[_81867 + 64]
                                                    _83037 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83037] = mem[_82051 + 5 len 27]
                                                    mem[_83037 + 32] = mem[_82051 + 59 len 5]
                                                    if block.timestamp >= mem[_83037 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83911 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45497
                                                        mem[32] = 52
                                                        currentRoundId[_45497]++
                                                        _84517 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84517] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84517 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45497] + 1
                                                        mem[32] = sha3(_45497, 53)
                                                        stor53[_45497][stor52[_45497] + 1].field_0 = Mask(216, 0, _83911)
                                                        stor53[_45497][stor52[_45497] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45388 = mem[64]
                                    mem[mem[64]] = 64
                                    _45496 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59450 = mem[(32 * arg3.length) + 128]
                                    mem[_45388 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45388 + (32 * _45496) + 128 len 32 * _59450] = mem[(32 * arg3.length) + 160 len 32 * _59450]
                                    var90001 = _59450
                                    emit 0x50f45835: mem[mem[64] len _45388 + (32 * _45496) + (32 * _59450) + -mem[64] + 128]
                                else:
                                    uint8(stor0.field_8) = 0
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45500 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45896 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45896] = 0
                                        mem[_45896 + 32] = 0
                                        _46063 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46063] = 0
                                        mem[_46063 + 32] = 0
                                        _46143 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46143] = 3
                                        mem[_46143 + 32] = 'USD'
                                        mem[0] = _45500
                                        mem[32] = 102
                                        _46145 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45500].length) + 32
                                        mem[_46145] = bandCurrencyKeys[_45500].length
                                        mem[_46145 + 32] = bandCurrencyKeys[_45500].field_0
                                        s = _46145 + 32
                                        t = sha3(sha3(_45500, 102))
                                        while _46145 + bandCurrencyKeys[_45500].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45500
                                        mem[32] = 100
                                        if not bandOracleMap[_45500]:
                                            _59841 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59841] = 0
                                            mem[_59841 + 32] = 0
                                            mem[0] = currentRoundId[_45500]
                                            mem[32] = sha3(_45500, 53)
                                            _60108 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60108] = stor53[_45500][stor52[_45500]].field_0
                                            mem[_60108 + 32] = stor53[_45500][stor52[_45500]].field_216
                                            if block.timestamp >= stor53[_45500][stor52[_45500]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61146 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45500
                                                mem[32] = 52
                                                currentRoundId[_45500]++
                                                _61473 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61473] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61473 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45500] + 1
                                                mem[32] = sha3(_45500, 53)
                                                stor53[_45500][stor52[_45500] + 1].field_0 = Mask(216, 0, _61146)
                                                stor53[_45500][stor52[_45500] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59668 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59668] = 0
                                            mem[_59668 + 32] = 0
                                            mem[_59668 + 64] = 0
                                            _59842 = mem[64]
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45500].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45500].length:
                                                mem[s + mem[64] + 100] = mem[_46145 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45500].length) <= bandCurrencyKeys[_45500].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45500].length) + 96
                                                _71433 = mem[_46143]
                                                mem[ceil32(bandCurrencyKeys[_45500].length) + mem[64] + 100] = mem[_46143]
                                                s = 0
                                                while s < _71433:
                                                    mem[s + ceil32(bandCurrencyKeys[_45500].length) + mem[64] + 132] = mem[_46143 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71433) <= _71433:
                                                    require ext_code.size(bandOracleMap[_45500])
                                                    staticcall bandOracleMap[_45500].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45500].length, data=mem[mem[64] + 100 len ceil32(_71433) + ceil32(bandCurrencyKeys[_45500].length) + 32]), ceil32(bandCurrencyKeys[_45500].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81776 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81960 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81960] = mem[_81776]
                                                    mem[_81960 + 32] = mem[_81776 + 32]
                                                    mem[_81960 + 64] = mem[_81776 + 64]
                                                    _82590 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82590] = mem[_81960 + 5 len 27]
                                                    mem[_82590 + 32] = mem[_81960 + 59 len 5]
                                                    if block.timestamp >= mem[_82590 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83558 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45500
                                                        mem[32] = 52
                                                        currentRoundId[_45500]++
                                                        _83913 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83913] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83913 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45500] + 1
                                                        mem[32] = sha3(_45500, 53)
                                                        stor53[_45500][stor52[_45500] + 1].field_0 = Mask(216, 0, _83558)
                                                        stor53[_45500][stor52[_45500] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45500].length) + mem[64] + _71433 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45500])
                                                    staticcall bandOracleMap[_45500].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45500].length, data=mem[mem[64] + 100 len ceil32(_71433) + ceil32(bandCurrencyKeys[_45500].length) + 32]), ceil32(bandCurrencyKeys[_45500].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81868 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82052 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82052] = mem[_81868]
                                                    mem[_82052 + 32] = mem[_81868 + 32]
                                                    mem[_82052 + 64] = mem[_81868 + 64]
                                                    _83040 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83040] = mem[_82052 + 5 len 27]
                                                    mem[_83040 + 32] = mem[_82052 + 59 len 5]
                                                    if block.timestamp >= mem[_83040 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83918 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45500
                                                        mem[32] = 52
                                                        currentRoundId[_45500]++
                                                        _84523 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84523] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84523 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45500] + 1
                                                        mem[32] = sha3(_45500, 53)
                                                        stor53[_45500][stor52[_45500] + 1].field_0 = Mask(216, 0, _83918)
                                                        stor53[_45500][stor52[_45500] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45500].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45500].length) + 96
                                                _71663 = mem[_46143]
                                                mem[ceil32(bandCurrencyKeys[_45500].length) + mem[64] + 100] = mem[_46143]
                                                s = 0
                                                while s < _71663:
                                                    mem[s + ceil32(bandCurrencyKeys[_45500].length) + mem[64] + 132] = mem[_46143 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71663) <= _71663:
                                                    require ext_code.size(bandOracleMap[_45500])
                                                    staticcall bandOracleMap[_45500].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71663) + ceil32(bandCurrencyKeys[_45500].length) + _59842 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81777 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81961 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81961] = mem[_81777]
                                                    mem[_81961 + 32] = mem[_81777 + 32]
                                                    mem[_81961 + 64] = mem[_81777 + 64]
                                                    _82596 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82596] = mem[_81961 + 5 len 27]
                                                    mem[_82596 + 32] = mem[_81961 + 59 len 5]
                                                    if block.timestamp >= mem[_82596 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83560 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45500
                                                        mem[32] = 52
                                                        currentRoundId[_45500]++
                                                        _83920 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83920] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83920 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45500] + 1
                                                        mem[32] = sha3(_45500, 53)
                                                        stor53[_45500][stor52[_45500] + 1].field_0 = Mask(216, 0, _83560)
                                                        stor53[_45500][stor52[_45500] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45500].length) + _59842 + _71663 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45500])
                                                    staticcall bandOracleMap[_45500].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71663) + ceil32(bandCurrencyKeys[_45500].length) + _59842 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81869 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82053 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82053] = mem[_81869]
                                                    mem[_82053 + 32] = mem[_81869 + 32]
                                                    mem[_82053 + 64] = mem[_81869 + 64]
                                                    _83043 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83043] = mem[_82053 + 5 len 27]
                                                    mem[_83043 + 32] = mem[_82053 + 59 len 5]
                                                    if block.timestamp >= mem[_83043 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83925 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45500
                                                        mem[32] = 52
                                                        currentRoundId[_45500]++
                                                        _84529 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84529] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84529 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45500] + 1
                                                        mem[32] = sha3(_45500, 53)
                                                        stor53[_45500][stor52[_45500] + 1].field_0 = Mask(216, 0, _83925)
                                                        stor53[_45500][stor52[_45500] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45390 = mem[64]
                                    mem[mem[64]] = 64
                                    _45499 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var84001 = mem[96]
                                    var84002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59454 = mem[(32 * arg3.length) + 128]
                                    mem[_45390 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45390 + (32 * _45499) + 128 len 32 * _59454] = mem[(32 * arg3.length) + 160 len 32 * _59454]
                                    var91001 = _59454
                                    emit 0x50f45835: mem[mem[64] len _45390 + (32 * _45499) + (32 * _59454) + -mem[64] + 128]
                            else:
                                uint8(stor0.field_0) = 1
                                uint8(stor0.field_8) = 1
                                Mask(248, 0, stor0.field_8) = 0
                                if not arg1:
                                    revert with 0, 'LnAdminUpgradeable: zero address'
                                adminAddress = arg1
                                mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                                emit AdminChanged(0, arg1);
                                if uint8(stor0.field_8):
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45503 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45898 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45898] = 0
                                        mem[_45898 + 32] = 0
                                        _46064 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46064] = 0
                                        mem[_46064 + 32] = 0
                                        _46146 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46146] = 3
                                        mem[_46146 + 32] = 'USD'
                                        mem[0] = _45503
                                        mem[32] = 102
                                        _46148 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45503].length) + 32
                                        mem[_46148] = bandCurrencyKeys[_45503].length
                                        mem[_46148 + 32] = bandCurrencyKeys[_45503].field_0
                                        s = _46148 + 32
                                        t = sha3(sha3(_45503, 102))
                                        while _46148 + bandCurrencyKeys[_45503].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45503
                                        mem[32] = 100
                                        if not bandOracleMap[_45503]:
                                            _59846 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59846] = 0
                                            mem[_59846 + 32] = 0
                                            mem[0] = currentRoundId[_45503]
                                            mem[32] = sha3(_45503, 53)
                                            _60115 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60115] = stor53[_45503][stor52[_45503]].field_0
                                            mem[_60115 + 32] = stor53[_45503][stor52[_45503]].field_216
                                            if block.timestamp >= stor53[_45503][stor52[_45503]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61152 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45503
                                                mem[32] = 52
                                                currentRoundId[_45503]++
                                                _61482 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61482] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61482 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45503] + 1
                                                mem[32] = sha3(_45503, 53)
                                                stor53[_45503][stor52[_45503] + 1].field_0 = Mask(216, 0, _61152)
                                                stor53[_45503][stor52[_45503] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59671 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59671] = 0
                                            mem[_59671 + 32] = 0
                                            mem[_59671 + 64] = 0
                                            _59847 = mem[64]
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45503].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45503].length:
                                                mem[s + mem[64] + 100] = mem[_46148 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45503].length) <= bandCurrencyKeys[_45503].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45503].length) + 96
                                                _71438 = mem[_46146]
                                                mem[ceil32(bandCurrencyKeys[_45503].length) + mem[64] + 100] = mem[_46146]
                                                s = 0
                                                while s < _71438:
                                                    mem[s + ceil32(bandCurrencyKeys[_45503].length) + mem[64] + 132] = mem[_46146 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71438) <= _71438:
                                                    require ext_code.size(bandOracleMap[_45503])
                                                    staticcall bandOracleMap[_45503].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45503].length, data=mem[mem[64] + 100 len ceil32(_71438) + ceil32(bandCurrencyKeys[_45503].length) + 32]), ceil32(bandCurrencyKeys[_45503].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81778 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81962 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81962] = mem[_81778]
                                                    mem[_81962 + 32] = mem[_81778 + 32]
                                                    mem[_81962 + 64] = mem[_81778 + 64]
                                                    _82602 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82602] = mem[_81962 + 5 len 27]
                                                    mem[_82602 + 32] = mem[_81962 + 59 len 5]
                                                    if block.timestamp >= mem[_82602 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83562 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45503
                                                        mem[32] = 52
                                                        currentRoundId[_45503]++
                                                        _83927 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83927] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83927 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45503] + 1
                                                        mem[32] = sha3(_45503, 53)
                                                        stor53[_45503][stor52[_45503] + 1].field_0 = Mask(216, 0, _83562)
                                                        stor53[_45503][stor52[_45503] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45503].length) + mem[64] + _71438 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45503])
                                                    staticcall bandOracleMap[_45503].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45503].length, data=mem[mem[64] + 100 len ceil32(_71438) + ceil32(bandCurrencyKeys[_45503].length) + 32]), ceil32(bandCurrencyKeys[_45503].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81870 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82054 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82054] = mem[_81870]
                                                    mem[_82054 + 32] = mem[_81870 + 32]
                                                    mem[_82054 + 64] = mem[_81870 + 64]
                                                    _83046 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83046] = mem[_82054 + 5 len 27]
                                                    mem[_83046 + 32] = mem[_82054 + 59 len 5]
                                                    if block.timestamp >= mem[_83046 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83932 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45503
                                                        mem[32] = 52
                                                        currentRoundId[_45503]++
                                                        _84535 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84535] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84535 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45503] + 1
                                                        mem[32] = sha3(_45503, 53)
                                                        stor53[_45503][stor52[_45503] + 1].field_0 = Mask(216, 0, _83932)
                                                        stor53[_45503][stor52[_45503] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45503].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45503].length) + 96
                                                _71668 = mem[_46146]
                                                mem[ceil32(bandCurrencyKeys[_45503].length) + _59847 + 100] = mem[_46146]
                                                s = 0
                                                while s < _71668:
                                                    mem[s + ceil32(bandCurrencyKeys[_45503].length) + _59847 + 132] = mem[_46146 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71668) <= _71668:
                                                    require ext_code.size(bandOracleMap[_45503])
                                                    staticcall bandOracleMap[_45503].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71668) + ceil32(bandCurrencyKeys[_45503].length) + _59847 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81779 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81963 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81963] = mem[_81779]
                                                    mem[_81963 + 32] = mem[_81779 + 32]
                                                    mem[_81963 + 64] = mem[_81779 + 64]
                                                    _82608 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82608] = mem[_81963 + 5 len 27]
                                                    mem[_82608 + 32] = mem[_81963 + 59 len 5]
                                                    if block.timestamp >= mem[_82608 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83564 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45503
                                                        mem[32] = 52
                                                        currentRoundId[_45503]++
                                                        _83934 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83934] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83934 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45503] + 1
                                                        mem[32] = sha3(_45503, 53)
                                                        stor53[_45503][stor52[_45503] + 1].field_0 = Mask(216, 0, _83564)
                                                        stor53[_45503][stor52[_45503] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45503].length) + _59847 + _71668 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45503])
                                                    staticcall bandOracleMap[_45503].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71668) + ceil32(bandCurrencyKeys[_45503].length) + _59847 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81871 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82055 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82055] = mem[_81871]
                                                    mem[_82055 + 32] = mem[_81871 + 32]
                                                    mem[_82055 + 64] = mem[_81871 + 64]
                                                    _83049 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83049] = mem[_82055 + 5 len 27]
                                                    mem[_83049 + 32] = mem[_82055 + 59 len 5]
                                                    if block.timestamp >= mem[_83049 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83939 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45503
                                                        mem[32] = 52
                                                        currentRoundId[_45503]++
                                                        _84541 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84541] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84541 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45503] + 1
                                                        mem[32] = sha3(_45503, 53)
                                                        stor53[_45503][stor52[_45503] + 1].field_0 = Mask(216, 0, _83939)
                                                        stor53[_45503][stor52[_45503] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45392 = mem[64]
                                    mem[mem[64]] = 64
                                    _45502 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var84001 = mem[96]
                                    var84002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59458 = mem[(32 * arg3.length) + 128]
                                    mem[_45392 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45392 + (32 * _45502) + 128 len 32 * _59458] = mem[(32 * arg3.length) + 160 len 32 * _59458]
                                    var91001 = _59458
                                    emit 0x50f45835: mem[mem[64] len _45392 + (32 * _45502) + (32 * _59458) + -mem[64] + 128]
                                else:
                                    uint8(stor0.field_8) = 0
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45506 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45900 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45900] = 0
                                        mem[_45900 + 32] = 0
                                        _46065 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46065] = 0
                                        mem[_46065 + 32] = 0
                                        _46149 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46149] = 3
                                        mem[_46149 + 32] = 'USD'
                                        mem[0] = _45506
                                        mem[32] = 102
                                        _46151 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45506].length) + 32
                                        mem[_46151] = bandCurrencyKeys[_45506].length
                                        mem[_46151 + 32] = bandCurrencyKeys[_45506].field_0
                                        s = _46151 + 32
                                        t = sha3(sha3(_45506, 102))
                                        while _46151 + bandCurrencyKeys[_45506].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45506
                                        mem[32] = 100
                                        if not bandOracleMap[_45506]:
                                            _59851 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59851] = 0
                                            mem[_59851 + 32] = 0
                                            mem[0] = currentRoundId[_45506]
                                            mem[32] = sha3(_45506, 53)
                                            _60122 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60122] = stor53[_45506][stor52[_45506]].field_0
                                            mem[_60122 + 32] = stor53[_45506][stor52[_45506]].field_216
                                            if block.timestamp >= stor53[_45506][stor52[_45506]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61158 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45506
                                                mem[32] = 52
                                                currentRoundId[_45506]++
                                                _61491 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61491] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61491 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45506] + 1
                                                mem[32] = sha3(_45506, 53)
                                                stor53[_45506][stor52[_45506] + 1].field_0 = Mask(216, 0, _61158)
                                                stor53[_45506][stor52[_45506] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59674 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59674] = 0
                                            mem[_59674 + 32] = 0
                                            mem[_59674 + 64] = 0
                                            _59852 = mem[64]
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45506].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45506].length:
                                                mem[s + mem[64] + 100] = mem[_46151 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45506].length) <= bandCurrencyKeys[_45506].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45506].length) + 96
                                                _71443 = mem[_46149]
                                                mem[ceil32(bandCurrencyKeys[_45506].length) + mem[64] + 100] = mem[_46149]
                                                s = 0
                                                while s < _71443:
                                                    mem[s + ceil32(bandCurrencyKeys[_45506].length) + mem[64] + 132] = mem[_46149 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71443) <= _71443:
                                                    require ext_code.size(bandOracleMap[_45506])
                                                    staticcall bandOracleMap[_45506].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71443) + ceil32(bandCurrencyKeys[_45506].length) + _59852 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81780 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81964 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81964] = mem[_81780]
                                                    mem[_81964 + 32] = mem[_81780 + 32]
                                                    mem[_81964 + 64] = mem[_81780 + 64]
                                                    _82614 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82614] = mem[_81964 + 5 len 27]
                                                    mem[_82614 + 32] = mem[_81964 + 59 len 5]
                                                    if block.timestamp >= mem[_82614 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83566 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45506
                                                        mem[32] = 52
                                                        currentRoundId[_45506]++
                                                        _83941 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83941] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83941 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45506] + 1
                                                        mem[32] = sha3(_45506, 53)
                                                        stor53[_45506][stor52[_45506] + 1].field_0 = Mask(216, 0, _83566)
                                                        stor53[_45506][stor52[_45506] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45506].length) + _59852 + _71443 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45506])
                                                    staticcall bandOracleMap[_45506].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71443) + ceil32(bandCurrencyKeys[_45506].length) + _59852 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81872 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82056 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82056] = mem[_81872]
                                                    mem[_82056 + 32] = mem[_81872 + 32]
                                                    mem[_82056 + 64] = mem[_81872 + 64]
                                                    _83052 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83052] = mem[_82056 + 5 len 27]
                                                    mem[_83052 + 32] = mem[_82056 + 59 len 5]
                                                    if block.timestamp >= mem[_83052 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83946 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45506
                                                        mem[32] = 52
                                                        currentRoundId[_45506]++
                                                        _84547 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84547] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84547 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45506] + 1
                                                        mem[32] = sha3(_45506, 53)
                                                        stor53[_45506][stor52[_45506] + 1].field_0 = Mask(216, 0, _83946)
                                                        stor53[_45506][stor52[_45506] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45506].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45506].length) + 96
                                                _71673 = mem[_46149]
                                                mem[ceil32(bandCurrencyKeys[_45506].length) + mem[64] + 100] = mem[_46149]
                                                s = 0
                                                while s < _71673:
                                                    mem[s + ceil32(bandCurrencyKeys[_45506].length) + mem[64] + 132] = mem[_46149 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71673) <= _71673:
                                                    require ext_code.size(bandOracleMap[_45506])
                                                    staticcall bandOracleMap[_45506].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45506].length, data=mem[mem[64] + 100 len ceil32(_71673) + ceil32(bandCurrencyKeys[_45506].length) + 32]), ceil32(bandCurrencyKeys[_45506].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81781 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81965 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81965] = mem[_81781]
                                                    mem[_81965 + 32] = mem[_81781 + 32]
                                                    mem[_81965 + 64] = mem[_81781 + 64]
                                                    _82620 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82620] = mem[_81965 + 5 len 27]
                                                    mem[_82620 + 32] = mem[_81965 + 59 len 5]
                                                    if block.timestamp >= mem[_82620 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83568 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45506
                                                        mem[32] = 52
                                                        currentRoundId[_45506]++
                                                        _83948 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83948] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83948 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45506] + 1
                                                        mem[32] = sha3(_45506, 53)
                                                        stor53[_45506][stor52[_45506] + 1].field_0 = Mask(216, 0, _83568)
                                                        stor53[_45506][stor52[_45506] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45506].length) + mem[64] + _71673 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45506])
                                                    staticcall bandOracleMap[_45506].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45506].length, data=mem[mem[64] + 100 len ceil32(_71673) + ceil32(bandCurrencyKeys[_45506].length) + 32]), ceil32(bandCurrencyKeys[_45506].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81873 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82057 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82057] = mem[_81873]
                                                    mem[_82057 + 32] = mem[_81873 + 32]
                                                    mem[_82057 + 64] = mem[_81873 + 64]
                                                    _83055 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83055] = mem[_82057 + 5 len 27]
                                                    mem[_83055 + 32] = mem[_82057 + 59 len 5]
                                                    if block.timestamp >= mem[_83055 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83953 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45506
                                                        mem[32] = 52
                                                        currentRoundId[_45506]++
                                                        _84553 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84553] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84553 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45506] + 1
                                                        mem[32] = sha3(_45506, 53)
                                                        stor53[_45506][stor52[_45506] + 1].field_0 = Mask(216, 0, _83953)
                                                        stor53[_45506][stor52[_45506] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45394 = mem[64]
                                    mem[mem[64]] = 64
                                    _45505 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var85001 = mem[96]
                                    var85002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59462 = mem[(32 * arg3.length) + 128]
                                    mem[_45394 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45394 + (32 * _45505) + 128 len 32 * _59462] = mem[(32 * arg3.length) + 160 len 32 * _59462]
                                    var92001 = _59462
                                    emit 0x50f45835: mem[mem[64] len _45394 + (32 * _45505) + (32 * _59462) + -mem[64] + 128]
                        else:
                            if uint8(stor0.field_0):
                                revert with 0, 'Initializable: contract is already initialized'
                            if uint8(stor0.field_8):
                                if not arg1:
                                    revert with 0, 'LnAdminUpgradeable: zero address'
                                adminAddress = arg1
                                mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                                emit AdminChanged(0, arg1);
                                if uint8(stor0.field_8):
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45509 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45902 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45902] = 0
                                        mem[_45902 + 32] = 0
                                        _46066 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46066] = 0
                                        mem[_46066 + 32] = 0
                                        _46152 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46152] = 3
                                        mem[_46152 + 32] = 'USD'
                                        mem[0] = _45509
                                        mem[32] = 102
                                        _46154 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45509].length) + 32
                                        mem[_46154] = bandCurrencyKeys[_45509].length
                                        mem[_46154 + 32] = bandCurrencyKeys[_45509].field_0
                                        s = _46154 + 32
                                        t = sha3(sha3(_45509, 102))
                                        while _46154 + bandCurrencyKeys[_45509].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45509
                                        mem[32] = 100
                                        if not bandOracleMap[_45509]:
                                            _59856 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59856] = 0
                                            mem[_59856 + 32] = 0
                                            mem[0] = currentRoundId[_45509]
                                            mem[32] = sha3(_45509, 53)
                                            _60129 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60129] = stor53[_45509][stor52[_45509]].field_0
                                            mem[_60129 + 32] = stor53[_45509][stor52[_45509]].field_216
                                            if block.timestamp >= stor53[_45509][stor52[_45509]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61164 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45509
                                                mem[32] = 52
                                                currentRoundId[_45509]++
                                                _61500 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61500] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61500 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45509] + 1
                                                mem[32] = sha3(_45509, 53)
                                                stor53[_45509][stor52[_45509] + 1].field_0 = Mask(216, 0, _61164)
                                                stor53[_45509][stor52[_45509] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59677 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59677] = 0
                                            mem[_59677 + 32] = 0
                                            mem[_59677 + 64] = 0
                                            _59857 = mem[64]
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45509].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45509].length:
                                                mem[s + mem[64] + 100] = mem[_46154 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45509].length) <= bandCurrencyKeys[_45509].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45509].length) + 96
                                                _71448 = mem[_46152]
                                                mem[ceil32(bandCurrencyKeys[_45509].length) + mem[64] + 100] = mem[_46152]
                                                s = 0
                                                while s < _71448:
                                                    mem[s + ceil32(bandCurrencyKeys[_45509].length) + mem[64] + 132] = mem[_46152 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71448) <= _71448:
                                                    require ext_code.size(bandOracleMap[_45509])
                                                    staticcall bandOracleMap[_45509].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45509].length, data=mem[mem[64] + 100 len ceil32(_71448) + ceil32(bandCurrencyKeys[_45509].length) + 32]), ceil32(bandCurrencyKeys[_45509].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81782 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81966 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81966] = mem[_81782]
                                                    mem[_81966 + 32] = mem[_81782 + 32]
                                                    mem[_81966 + 64] = mem[_81782 + 64]
                                                    _82626 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82626] = mem[_81966 + 5 len 27]
                                                    mem[_82626 + 32] = mem[_81966 + 59 len 5]
                                                    if block.timestamp >= mem[_82626 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83570 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45509
                                                        mem[32] = 52
                                                        currentRoundId[_45509]++
                                                        _83955 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83955] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83955 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45509] + 1
                                                        mem[32] = sha3(_45509, 53)
                                                        stor53[_45509][stor52[_45509] + 1].field_0 = Mask(216, 0, _83570)
                                                        stor53[_45509][stor52[_45509] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45509].length) + mem[64] + _71448 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45509])
                                                    staticcall bandOracleMap[_45509].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45509].length, data=mem[mem[64] + 100 len ceil32(_71448) + ceil32(bandCurrencyKeys[_45509].length) + 32]), ceil32(bandCurrencyKeys[_45509].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81874 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82058 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82058] = mem[_81874]
                                                    mem[_82058 + 32] = mem[_81874 + 32]
                                                    mem[_82058 + 64] = mem[_81874 + 64]
                                                    _83058 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83058] = mem[_82058 + 5 len 27]
                                                    mem[_83058 + 32] = mem[_82058 + 59 len 5]
                                                    if block.timestamp >= mem[_83058 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83960 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45509
                                                        mem[32] = 52
                                                        currentRoundId[_45509]++
                                                        _84559 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84559] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84559 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45509] + 1
                                                        mem[32] = sha3(_45509, 53)
                                                        stor53[_45509][stor52[_45509] + 1].field_0 = Mask(216, 0, _83960)
                                                        stor53[_45509][stor52[_45509] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45509].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45509].length) + 96
                                                _71678 = mem[_46152]
                                                mem[ceil32(bandCurrencyKeys[_45509].length) + mem[64] + 100] = mem[_46152]
                                                s = 0
                                                while s < _71678:
                                                    mem[s + ceil32(bandCurrencyKeys[_45509].length) + mem[64] + 132] = mem[_46152 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71678) <= _71678:
                                                    require ext_code.size(bandOracleMap[_45509])
                                                    staticcall bandOracleMap[_45509].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71678) + ceil32(bandCurrencyKeys[_45509].length) + _59857 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81783 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81967 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81967] = mem[_81783]
                                                    mem[_81967 + 32] = mem[_81783 + 32]
                                                    mem[_81967 + 64] = mem[_81783 + 64]
                                                    _82632 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82632] = mem[_81967 + 5 len 27]
                                                    mem[_82632 + 32] = mem[_81967 + 59 len 5]
                                                    if block.timestamp >= mem[_82632 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83572 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45509
                                                        mem[32] = 52
                                                        currentRoundId[_45509]++
                                                        _83962 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83962] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83962 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45509] + 1
                                                        mem[32] = sha3(_45509, 53)
                                                        stor53[_45509][stor52[_45509] + 1].field_0 = Mask(216, 0, _83572)
                                                        stor53[_45509][stor52[_45509] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45509].length) + _59857 + _71678 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45509])
                                                    staticcall bandOracleMap[_45509].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71678) + ceil32(bandCurrencyKeys[_45509].length) + _59857 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81875 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82059 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82059] = mem[_81875]
                                                    mem[_82059 + 32] = mem[_81875 + 32]
                                                    mem[_82059 + 64] = mem[_81875 + 64]
                                                    _83061 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83061] = mem[_82059 + 5 len 27]
                                                    mem[_83061 + 32] = mem[_82059 + 59 len 5]
                                                    if block.timestamp >= mem[_83061 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83967 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45509
                                                        mem[32] = 52
                                                        currentRoundId[_45509]++
                                                        _84565 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84565] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84565 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45509] + 1
                                                        mem[32] = sha3(_45509, 53)
                                                        stor53[_45509][stor52[_45509] + 1].field_0 = Mask(216, 0, _83967)
                                                        stor53[_45509][stor52[_45509] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45396 = mem[64]
                                    mem[mem[64]] = 64
                                    _45508 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var84001 = mem[96]
                                    var84002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59466 = mem[(32 * arg3.length) + 128]
                                    mem[_45396 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45396 + (32 * _45508) + 128 len 32 * _59466] = mem[(32 * arg3.length) + 160 len 32 * _59466]
                                    var91001 = _59466
                                    emit 0x50f45835: mem[mem[64] len _45396 + (32 * _45508) + (32 * _59466) + -mem[64] + 128]
                                else:
                                    uint8(stor0.field_8) = 0
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45512 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45904 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45904] = 0
                                        mem[_45904 + 32] = 0
                                        _46067 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46067] = 0
                                        mem[_46067 + 32] = 0
                                        _46155 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46155] = 3
                                        mem[_46155 + 32] = 'USD'
                                        mem[0] = _45512
                                        mem[32] = 102
                                        _46157 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45512].length) + 32
                                        mem[_46157] = bandCurrencyKeys[_45512].length
                                        mem[_46157 + 32] = bandCurrencyKeys[_45512].field_0
                                        s = _46157 + 32
                                        t = sha3(sha3(_45512, 102))
                                        while _46157 + bandCurrencyKeys[_45512].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45512
                                        mem[32] = 100
                                        if not bandOracleMap[_45512]:
                                            _59861 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59861] = 0
                                            mem[_59861 + 32] = 0
                                            mem[0] = currentRoundId[_45512]
                                            mem[32] = sha3(_45512, 53)
                                            _60136 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60136] = stor53[_45512][stor52[_45512]].field_0
                                            mem[_60136 + 32] = stor53[_45512][stor52[_45512]].field_216
                                            if block.timestamp >= stor53[_45512][stor52[_45512]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61170 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45512
                                                mem[32] = 52
                                                currentRoundId[_45512]++
                                                _61509 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61509] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61509 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45512] + 1
                                                mem[32] = sha3(_45512, 53)
                                                stor53[_45512][stor52[_45512] + 1].field_0 = Mask(216, 0, _61170)
                                                stor53[_45512][stor52[_45512] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59680 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59680] = 0
                                            mem[_59680 + 32] = 0
                                            mem[_59680 + 64] = 0
                                            _59862 = mem[64]
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45512].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45512].length:
                                                mem[s + mem[64] + 100] = mem[_46157 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45512].length) <= bandCurrencyKeys[_45512].length:
                                                mem[_59862 + 36] = ceil32(bandCurrencyKeys[_45512].length) + 96
                                                _71453 = mem[_46155]
                                                mem[ceil32(bandCurrencyKeys[_45512].length) + _59862 + 100] = mem[_46155]
                                                s = 0
                                                while s < _71453:
                                                    mem[s + ceil32(bandCurrencyKeys[_45512].length) + _59862 + 132] = mem[_46155 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71453) <= _71453:
                                                    require ext_code.size(bandOracleMap[_45512])
                                                    staticcall bandOracleMap[_45512].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71453) + ceil32(bandCurrencyKeys[_45512].length) + _59862 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81784 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81968 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81968] = mem[_81784]
                                                    mem[_81968 + 32] = mem[_81784 + 32]
                                                    mem[_81968 + 64] = mem[_81784 + 64]
                                                    _82638 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82638] = mem[_81968 + 5 len 27]
                                                    mem[_82638 + 32] = mem[_81968 + 59 len 5]
                                                    if block.timestamp >= mem[_82638 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83574 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45512
                                                        mem[32] = 52
                                                        currentRoundId[_45512]++
                                                        _83969 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83969] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83969 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45512] + 1
                                                        mem[32] = sha3(_45512, 53)
                                                        stor53[_45512][stor52[_45512] + 1].field_0 = Mask(216, 0, _83574)
                                                        stor53[_45512][stor52[_45512] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45512].length) + _59862 + _71453 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45512])
                                                    staticcall bandOracleMap[_45512].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71453) + ceil32(bandCurrencyKeys[_45512].length) + _59862 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81876 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82060 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82060] = mem[_81876]
                                                    mem[_82060 + 32] = mem[_81876 + 32]
                                                    mem[_82060 + 64] = mem[_81876 + 64]
                                                    _83064 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83064] = mem[_82060 + 5 len 27]
                                                    mem[_83064 + 32] = mem[_82060 + 59 len 5]
                                                    if block.timestamp >= mem[_83064 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83974 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45512
                                                        mem[32] = 52
                                                        currentRoundId[_45512]++
                                                        _84571 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84571] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84571 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45512] + 1
                                                        mem[32] = sha3(_45512, 53)
                                                        stor53[_45512][stor52[_45512] + 1].field_0 = Mask(216, 0, _83974)
                                                        stor53[_45512][stor52[_45512] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[_59862 + bandCurrencyKeys[_45512].length + 100] = 0
                                                mem[_59862 + 36] = ceil32(bandCurrencyKeys[_45512].length) + 96
                                                _71683 = mem[_46155]
                                                mem[ceil32(bandCurrencyKeys[_45512].length) + _59862 + 100] = mem[_46155]
                                                s = 0
                                                while s < _71683:
                                                    mem[s + ceil32(bandCurrencyKeys[_45512].length) + _59862 + 132] = mem[_46155 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71683) <= _71683:
                                                    require ext_code.size(bandOracleMap[_45512])
                                                    staticcall bandOracleMap[_45512].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71683) + ceil32(bandCurrencyKeys[_45512].length) + _59862 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81785 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81969 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81969] = mem[_81785]
                                                    mem[_81969 + 32] = mem[_81785 + 32]
                                                    mem[_81969 + 64] = mem[_81785 + 64]
                                                    _82644 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82644] = mem[_81969 + 5 len 27]
                                                    mem[_82644 + 32] = mem[_81969 + 59 len 5]
                                                    if block.timestamp >= mem[_82644 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83576 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45512
                                                        mem[32] = 52
                                                        currentRoundId[_45512]++
                                                        _83976 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83976] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83976 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45512] + 1
                                                        mem[32] = sha3(_45512, 53)
                                                        stor53[_45512][stor52[_45512] + 1].field_0 = Mask(216, 0, _83576)
                                                        stor53[_45512][stor52[_45512] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45512].length) + _59862 + _71683 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45512])
                                                    staticcall bandOracleMap[_45512].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71683) + ceil32(bandCurrencyKeys[_45512].length) + _59862 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81877 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82061 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82061] = mem[_81877]
                                                    mem[_82061 + 32] = mem[_81877 + 32]
                                                    mem[_82061 + 64] = mem[_81877 + 64]
                                                    _83067 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83067] = mem[_82061 + 5 len 27]
                                                    mem[_83067 + 32] = mem[_82061 + 59 len 5]
                                                    if block.timestamp >= mem[_83067 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83981 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45512
                                                        mem[32] = 52
                                                        currentRoundId[_45512]++
                                                        _84577 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84577] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84577 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45512] + 1
                                                        mem[32] = sha3(_45512, 53)
                                                        stor53[_45512][stor52[_45512] + 1].field_0 = Mask(216, 0, _83981)
                                                        stor53[_45512][stor52[_45512] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45398 = mem[64]
                                    mem[mem[64]] = 64
                                    _45511 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var85001 = mem[96]
                                    var85002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59470 = mem[(32 * arg3.length) + 128]
                                    mem[_45398 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45398 + (32 * _45511) + 128 len 32 * _59470] = mem[(32 * arg3.length) + 160 len 32 * _59470]
                                    var92001 = _59470
                                    emit 0x50f45835: mem[mem[64] len _45398 + (32 * _45511) + (32 * _59470) + -mem[64] + 128]
                            else:
                                uint8(stor0.field_0) = 1
                                uint8(stor0.field_8) = 1
                                Mask(248, 0, stor0.field_8) = 0
                                if not arg1:
                                    revert with 0, 'LnAdminUpgradeable: zero address'
                                adminAddress = arg1
                                mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                                emit AdminChanged(0, arg1);
                                if uint8(stor0.field_8):
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45515 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45906 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45906] = 0
                                        mem[_45906 + 32] = 0
                                        _46068 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46068] = 0
                                        mem[_46068 + 32] = 0
                                        _46158 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46158] = 3
                                        mem[_46158 + 32] = 'USD'
                                        mem[0] = _45515
                                        mem[32] = 102
                                        _46160 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45515].length) + 32
                                        mem[_46160] = bandCurrencyKeys[_45515].length
                                        mem[_46160 + 32] = bandCurrencyKeys[_45515].field_0
                                        s = _46160 + 32
                                        t = sha3(sha3(_45515, 102))
                                        while _46160 + bandCurrencyKeys[_45515].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45515
                                        mem[32] = 100
                                        if not bandOracleMap[_45515]:
                                            _59866 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59866] = 0
                                            mem[_59866 + 32] = 0
                                            mem[0] = currentRoundId[_45515]
                                            mem[32] = sha3(_45515, 53)
                                            _60143 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60143] = stor53[_45515][stor52[_45515]].field_0
                                            mem[_60143 + 32] = stor53[_45515][stor52[_45515]].field_216
                                            if block.timestamp >= stor53[_45515][stor52[_45515]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61176 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45515
                                                mem[32] = 52
                                                currentRoundId[_45515]++
                                                _61518 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61518] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61518 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45515] + 1
                                                mem[32] = sha3(_45515, 53)
                                                stor53[_45515][stor52[_45515] + 1].field_0 = Mask(216, 0, _61176)
                                                stor53[_45515][stor52[_45515] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59683 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59683] = 0
                                            mem[_59683 + 32] = 0
                                            mem[_59683 + 64] = 0
                                            _59867 = mem[64]
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45515].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45515].length:
                                                mem[s + mem[64] + 100] = mem[_46160 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45515].length) <= bandCurrencyKeys[_45515].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45515].length) + 96
                                                _71458 = mem[_46158]
                                                mem[ceil32(bandCurrencyKeys[_45515].length) + mem[64] + 100] = mem[_46158]
                                                s = 0
                                                while s < _71458:
                                                    mem[s + ceil32(bandCurrencyKeys[_45515].length) + mem[64] + 132] = mem[_46158 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71458) <= _71458:
                                                    require ext_code.size(bandOracleMap[_45515])
                                                    staticcall bandOracleMap[_45515].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71458) + ceil32(bandCurrencyKeys[_45515].length) + _59867 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81786 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81970 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81970] = mem[_81786]
                                                    mem[_81970 + 32] = mem[_81786 + 32]
                                                    mem[_81970 + 64] = mem[_81786 + 64]
                                                    _82650 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82650] = mem[_81970 + 5 len 27]
                                                    mem[_82650 + 32] = mem[_81970 + 59 len 5]
                                                    if block.timestamp >= mem[_82650 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83578 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45515
                                                        mem[32] = 52
                                                        currentRoundId[_45515]++
                                                        _83983 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83983] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83983 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45515] + 1
                                                        mem[32] = sha3(_45515, 53)
                                                        stor53[_45515][stor52[_45515] + 1].field_0 = Mask(216, 0, _83578)
                                                        stor53[_45515][stor52[_45515] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45515].length) + _59867 + _71458 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45515])
                                                    staticcall bandOracleMap[_45515].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71458) + ceil32(bandCurrencyKeys[_45515].length) + _59867 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81878 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82062 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82062] = mem[_81878]
                                                    mem[_82062 + 32] = mem[_81878 + 32]
                                                    mem[_82062 + 64] = mem[_81878 + 64]
                                                    _83070 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83070] = mem[_82062 + 5 len 27]
                                                    mem[_83070 + 32] = mem[_82062 + 59 len 5]
                                                    if block.timestamp >= mem[_83070 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83988 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45515
                                                        mem[32] = 52
                                                        currentRoundId[_45515]++
                                                        _84583 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84583] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84583 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45515] + 1
                                                        mem[32] = sha3(_45515, 53)
                                                        stor53[_45515][stor52[_45515] + 1].field_0 = Mask(216, 0, _83988)
                                                        stor53[_45515][stor52[_45515] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45515].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45515].length) + 96
                                                _71688 = mem[_46158]
                                                mem[ceil32(bandCurrencyKeys[_45515].length) + mem[64] + 100] = mem[_46158]
                                                s = 0
                                                while s < _71688:
                                                    mem[s + ceil32(bandCurrencyKeys[_45515].length) + mem[64] + 132] = mem[_46158 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71688) <= _71688:
                                                    require ext_code.size(bandOracleMap[_45515])
                                                    staticcall bandOracleMap[_45515].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71688) + ceil32(bandCurrencyKeys[_45515].length) + _59867 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81787 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81971 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81971] = mem[_81787]
                                                    mem[_81971 + 32] = mem[_81787 + 32]
                                                    mem[_81971 + 64] = mem[_81787 + 64]
                                                    _82656 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82656] = mem[_81971 + 5 len 27]
                                                    mem[_82656 + 32] = mem[_81971 + 59 len 5]
                                                    if block.timestamp >= mem[_82656 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83580 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45515
                                                        mem[32] = 52
                                                        currentRoundId[_45515]++
                                                        _83990 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83990] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83990 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45515] + 1
                                                        mem[32] = sha3(_45515, 53)
                                                        stor53[_45515][stor52[_45515] + 1].field_0 = Mask(216, 0, _83580)
                                                        stor53[_45515][stor52[_45515] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45515].length) + _59867 + _71688 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45515])
                                                    staticcall bandOracleMap[_45515].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71688) + ceil32(bandCurrencyKeys[_45515].length) + _59867 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81879 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82063 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82063] = mem[_81879]
                                                    mem[_82063 + 32] = mem[_81879 + 32]
                                                    mem[_82063 + 64] = mem[_81879 + 64]
                                                    _83073 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83073] = mem[_82063 + 5 len 27]
                                                    mem[_83073 + 32] = mem[_82063 + 59 len 5]
                                                    if block.timestamp >= mem[_83073 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83995 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45515
                                                        mem[32] = 52
                                                        currentRoundId[_45515]++
                                                        _84589 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84589] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84589 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45515] + 1
                                                        mem[32] = sha3(_45515, 53)
                                                        stor53[_45515][stor52[_45515] + 1].field_0 = Mask(216, 0, _83995)
                                                        stor53[_45515][stor52[_45515] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45400 = mem[64]
                                    mem[mem[64]] = 64
                                    _45514 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var85001 = mem[96]
                                    var85002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59474 = mem[(32 * arg3.length) + 128]
                                    mem[_45400 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45400 + (32 * _45514) + 128 len 32 * _59474] = mem[(32 * arg3.length) + 160 len 32 * _59474]
                                    var92001 = _59474
                                    emit 0x50f45835: mem[mem[64] len _45400 + (32 * _45514) + (32 * _59474) + -mem[64] + 128]
                                else:
                                    uint8(stor0.field_8) = 0
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45518 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45908 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45908] = 0
                                        mem[_45908 + 32] = 0
                                        _46069 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46069] = 0
                                        mem[_46069 + 32] = 0
                                        _46161 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46161] = 3
                                        mem[_46161 + 32] = 'USD'
                                        mem[0] = _45518
                                        mem[32] = 102
                                        _46163 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45518].length) + 32
                                        mem[_46163] = bandCurrencyKeys[_45518].length
                                        mem[_46163 + 32] = bandCurrencyKeys[_45518].field_0
                                        s = _46163 + 32
                                        t = sha3(sha3(_45518, 102))
                                        while _46163 + bandCurrencyKeys[_45518].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45518
                                        mem[32] = 100
                                        if not bandOracleMap[_45518]:
                                            _59871 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59871] = 0
                                            mem[_59871 + 32] = 0
                                            mem[0] = currentRoundId[_45518]
                                            mem[32] = sha3(_45518, 53)
                                            _60150 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60150] = stor53[_45518][stor52[_45518]].field_0
                                            mem[_60150 + 32] = stor53[_45518][stor52[_45518]].field_216
                                            if block.timestamp >= stor53[_45518][stor52[_45518]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61182 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45518
                                                mem[32] = 52
                                                currentRoundId[_45518]++
                                                _61527 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61527] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61527 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45518] + 1
                                                mem[32] = sha3(_45518, 53)
                                                stor53[_45518][stor52[_45518] + 1].field_0 = Mask(216, 0, _61182)
                                                stor53[_45518][stor52[_45518] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59686 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59686] = 0
                                            mem[_59686 + 32] = 0
                                            mem[_59686 + 64] = 0
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45518].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45518].length:
                                                mem[s + mem[64] + 100] = mem[_46163 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45518].length) <= bandCurrencyKeys[_45518].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45518].length) + 96
                                                _71463 = mem[_46161]
                                                mem[ceil32(bandCurrencyKeys[_45518].length) + mem[64] + 100] = mem[_46161]
                                                s = 0
                                                while s < _71463:
                                                    mem[s + ceil32(bandCurrencyKeys[_45518].length) + mem[64] + 132] = mem[_46161 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71463) <= _71463:
                                                    require ext_code.size(bandOracleMap[_45518])
                                                    staticcall bandOracleMap[_45518].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45518].length, data=mem[mem[64] + 100 len ceil32(_71463) + ceil32(bandCurrencyKeys[_45518].length) + 32]), ceil32(bandCurrencyKeys[_45518].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81788 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81972 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81972] = mem[_81788]
                                                    mem[_81972 + 32] = mem[_81788 + 32]
                                                    mem[_81972 + 64] = mem[_81788 + 64]
                                                    _82662 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82662] = mem[_81972 + 5 len 27]
                                                    mem[_82662 + 32] = mem[_81972 + 59 len 5]
                                                    if block.timestamp >= mem[_82662 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83582 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45518
                                                        mem[32] = 52
                                                        currentRoundId[_45518]++
                                                        _83997 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_83997] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_83997 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45518] + 1
                                                        mem[32] = sha3(_45518, 53)
                                                        stor53[_45518][stor52[_45518] + 1].field_0 = Mask(216, 0, _83582)
                                                        stor53[_45518][stor52[_45518] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45518].length) + mem[64] + _71463 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45518])
                                                    staticcall bandOracleMap[_45518].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45518].length, data=mem[mem[64] + 100 len ceil32(_71463) + ceil32(bandCurrencyKeys[_45518].length) + 32]), ceil32(bandCurrencyKeys[_45518].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81880 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82064 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82064] = mem[_81880]
                                                    mem[_82064 + 32] = mem[_81880 + 32]
                                                    mem[_82064 + 64] = mem[_81880 + 64]
                                                    _83076 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83076] = mem[_82064 + 5 len 27]
                                                    mem[_83076 + 32] = mem[_82064 + 59 len 5]
                                                    if block.timestamp >= mem[_83076 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84002 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45518
                                                        mem[32] = 52
                                                        currentRoundId[_45518]++
                                                        _84595 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84595] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84595 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45518] + 1
                                                        mem[32] = sha3(_45518, 53)
                                                        stor53[_45518][stor52[_45518] + 1].field_0 = Mask(216, 0, _84002)
                                                        stor53[_45518][stor52[_45518] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45518].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45518].length) + 96
                                                _71693 = mem[_46161]
                                                mem[ceil32(bandCurrencyKeys[_45518].length) + mem[64] + 100] = mem[_46161]
                                                s = 0
                                                while s < _71693:
                                                    mem[s + ceil32(bandCurrencyKeys[_45518].length) + mem[64] + 132] = mem[_46161 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71693) <= _71693:
                                                    require ext_code.size(bandOracleMap[_45518])
                                                    staticcall bandOracleMap[_45518].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45518].length, data=mem[mem[64] + 100 len ceil32(_71693) + ceil32(bandCurrencyKeys[_45518].length) + 32]), ceil32(bandCurrencyKeys[_45518].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81789 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81973 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81973] = mem[_81789]
                                                    mem[_81973 + 32] = mem[_81789 + 32]
                                                    mem[_81973 + 64] = mem[_81789 + 64]
                                                    _82668 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82668] = mem[_81973 + 5 len 27]
                                                    mem[_82668 + 32] = mem[_81973 + 59 len 5]
                                                    if block.timestamp >= mem[_82668 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83584 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45518
                                                        mem[32] = 52
                                                        currentRoundId[_45518]++
                                                        _84004 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84004] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84004 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45518] + 1
                                                        mem[32] = sha3(_45518, 53)
                                                        stor53[_45518][stor52[_45518] + 1].field_0 = Mask(216, 0, _83584)
                                                        stor53[_45518][stor52[_45518] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45518].length) + mem[64] + _71693 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45518])
                                                    staticcall bandOracleMap[_45518].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45518].length, data=mem[mem[64] + 100 len ceil32(_71693) + ceil32(bandCurrencyKeys[_45518].length) + 32]), ceil32(bandCurrencyKeys[_45518].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81881 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82065 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82065] = mem[_81881]
                                                    mem[_82065 + 32] = mem[_81881 + 32]
                                                    mem[_82065 + 64] = mem[_81881 + 64]
                                                    _83079 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83079] = mem[_82065 + 5 len 27]
                                                    mem[_83079 + 32] = mem[_82065 + 59 len 5]
                                                    if block.timestamp >= mem[_83079 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84009 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45518
                                                        mem[32] = 52
                                                        currentRoundId[_45518]++
                                                        _84601 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84601] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84601 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45518] + 1
                                                        mem[32] = sha3(_45518, 53)
                                                        stor53[_45518][stor52[_45518] + 1].field_0 = Mask(216, 0, _84009)
                                                        stor53[_45518][stor52[_45518] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45402 = mem[64]
                                    mem[mem[64]] = 64
                                    _45517 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var86001 = mem[96]
                                    var86002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59478 = mem[(32 * arg3.length) + 128]
                                    mem[_45402 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45402 + (32 * _45517) + 128 len 32 * _59478] = mem[(32 * arg3.length) + 160 len 32 * _59478]
                                    var93001 = _59478
                                    emit 0x50f45835: mem[mem[64] len _45402 + (32 * _45517) + (32 * _59478) + -mem[64] + 128]
        else:
            if uint8(stor0.field_0):
                revert with 0, 'Initializable: contract is already initialized'
            if uint8(stor0.field_8):
                if not arg1:
                    revert with 0, 'LnAdminUpgradeable: zero address'
                adminAddress = arg1
                mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                emit AdminChanged(0, arg1);
                if uint8(stor0.field_8):
                    stalePeriod = 12 * 3600
                    if arg3.length != arg4.length:
                        revert with 0, 'array length error.'
                    oracleAddress = arg2
                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                         gas gas_remaining wei
                        args 
                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                    if not delegate.return_code:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    currentRoundId['lUSD']++
                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                    mem[0] = currentRoundId['lUSD'] + 1
                    mem[32] = sha3('lUSD', 53)
                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                    if arg3.length != arg4.length:
                        revert with 0, 'array length error, not match.'
                    if block.timestamp >= block.timestamp + 600:
                        revert with 0, 'Time error'
                    idx = 0
                    while idx < arg3.length:
                        require idx < mem[96]
                        _45521 = mem[(32 * idx) + 128]
                        require idx < mem[(32 * arg3.length) + 128]
                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                        if mem[(32 * idx) + 128] == 'lUSD':
                            revert with 0, 'LUSD cannot be updated.'
                        _45910 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_45910] = 0
                        mem[_45910 + 32] = 0
                        _46070 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_46070] = 0
                        mem[_46070 + 32] = 0
                        _46164 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_46164] = 3
                        mem[_46164 + 32] = 'USD'
                        mem[0] = _45521
                        mem[32] = 102
                        _46166 = mem[64]
                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45521].length) + 32
                        mem[_46166] = bandCurrencyKeys[_45521].length
                        mem[_46166 + 32] = bandCurrencyKeys[_45521].field_0
                        s = _46166 + 32
                        t = sha3(sha3(_45521, 102))
                        while _46166 + bandCurrencyKeys[_45521].length > s:
                            mem[s + 32] = uint256(stor1[t])
                            s = s + 32
                            t = t + 1
                            continue 
                        mem[0] = _45521
                        mem[32] = 100
                        if not bandOracleMap[_45521]:
                            _59876 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_59876] = 0
                            mem[_59876 + 32] = 0
                            mem[0] = currentRoundId[_45521]
                            mem[32] = sha3(_45521, 53)
                            _60157 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_60157] = stor53[_45521][stor52[_45521]].field_0
                            mem[_60157 + 32] = stor53[_45521][stor52[_45521]].field_216
                            if block.timestamp >= stor53[_45521][stor52[_45521]].field_216:
                                require idx < mem[(32 * arg3.length) + 128]
                                _61188 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                mem[0] = _45521
                                mem[32] = 52
                                currentRoundId[_45521]++
                                _61536 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_61536] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                mem[_61536 + 32] = block.timestamp % 1099511627776
                                mem[0] = currentRoundId[_45521] + 1
                                mem[32] = sha3(_45521, 53)
                                stor53[_45521][stor52[_45521] + 1].field_0 = Mask(216, 0, _61188)
                                stor53[_45521][stor52[_45521] + 1].field_216 = block.timestamp % 1099511627776
                        else:
                            _59689 = mem[64]
                            mem[64] = mem[64] + 96
                            mem[_59689] = 0
                            mem[_59689 + 32] = 0
                            mem[_59689 + 64] = 0
                            _59877 = mem[64]
                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 64
                            mem[mem[64] + 68] = bandCurrencyKeys[_45521].length
                            s = 0
                            while s < bandCurrencyKeys[_45521].length:
                                mem[s + mem[64] + 100] = mem[_46166 + s + 32]
                                s = s + 32
                                continue 
                            if ceil32(bandCurrencyKeys[_45521].length) <= bandCurrencyKeys[_45521].length:
                                mem[_59877 + 36] = ceil32(bandCurrencyKeys[_45521].length) + 96
                                _71468 = mem[_46164]
                                mem[ceil32(bandCurrencyKeys[_45521].length) + _59877 + 100] = mem[_46164]
                                s = 0
                                while s < _71468:
                                    mem[s + ceil32(bandCurrencyKeys[_45521].length) + _59877 + 132] = mem[_46164 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_71468) <= _71468:
                                    require ext_code.size(bandOracleMap[_45521])
                                    staticcall bandOracleMap[_45521].mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len ceil32(_71468) + ceil32(bandCurrencyKeys[_45521].length) + _59877 + -mem[64] + 128]
                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _81790 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 96
                                    _81974 = mem[64]
                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                    mem[64] = mem[64] + 96
                                    mem[_81974] = mem[_81790]
                                    mem[_81974 + 32] = mem[_81790 + 32]
                                    mem[_81974 + 64] = mem[_81790 + 64]
                                    _82674 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_82674] = mem[_81974 + 5 len 27]
                                    mem[_82674 + 32] = mem[_81974 + 59 len 5]
                                    if block.timestamp >= mem[_82674 + 59 len 5]:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _83586 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45521
                                        mem[32] = 52
                                        currentRoundId[_45521]++
                                        _84011 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_84011] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_84011 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45521] + 1
                                        mem[32] = sha3(_45521, 53)
                                        stor53[_45521][stor52[_45521] + 1].field_0 = Mask(216, 0, _83586)
                                        stor53[_45521][stor52[_45521] + 1].field_216 = block.timestamp % 1099511627776
                                else:
                                    mem[ceil32(bandCurrencyKeys[_45521].length) + _59877 + _71468 + 132] = 0
                                    require ext_code.size(bandOracleMap[_45521])
                                    staticcall bandOracleMap[_45521].mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len ceil32(_71468) + ceil32(bandCurrencyKeys[_45521].length) + _59877 + -mem[64] + 128]
                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _81882 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 96
                                    _82066 = mem[64]
                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                    mem[64] = mem[64] + 96
                                    mem[_82066] = mem[_81882]
                                    mem[_82066 + 32] = mem[_81882 + 32]
                                    mem[_82066 + 64] = mem[_81882 + 64]
                                    _83082 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_83082] = mem[_82066 + 5 len 27]
                                    mem[_83082 + 32] = mem[_82066 + 59 len 5]
                                    if block.timestamp >= mem[_83082 + 59 len 5]:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _84016 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45521
                                        mem[32] = 52
                                        currentRoundId[_45521]++
                                        _84607 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_84607] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_84607 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45521] + 1
                                        mem[32] = sha3(_45521, 53)
                                        stor53[_45521][stor52[_45521] + 1].field_0 = Mask(216, 0, _84016)
                                        stor53[_45521][stor52[_45521] + 1].field_216 = block.timestamp % 1099511627776
                            else:
                                mem[_59877 + bandCurrencyKeys[_45521].length + 100] = 0
                                mem[_59877 + 36] = ceil32(bandCurrencyKeys[_45521].length) + 96
                                _71698 = mem[_46164]
                                mem[ceil32(bandCurrencyKeys[_45521].length) + _59877 + 100] = mem[_46164]
                                s = 0
                                while s < _71698:
                                    mem[s + ceil32(bandCurrencyKeys[_45521].length) + _59877 + 132] = mem[_46164 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_71698) <= _71698:
                                    require ext_code.size(bandOracleMap[_45521])
                                    staticcall bandOracleMap[_45521].mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len ceil32(_71698) + ceil32(bandCurrencyKeys[_45521].length) + _59877 + -mem[64] + 128]
                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _81791 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 96
                                    _81975 = mem[64]
                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                    mem[64] = mem[64] + 96
                                    mem[_81975] = mem[_81791]
                                    mem[_81975 + 32] = mem[_81791 + 32]
                                    mem[_81975 + 64] = mem[_81791 + 64]
                                    _82680 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_82680] = mem[_81975 + 5 len 27]
                                    mem[_82680 + 32] = mem[_81975 + 59 len 5]
                                    if block.timestamp >= mem[_82680 + 59 len 5]:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _83588 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45521
                                        mem[32] = 52
                                        currentRoundId[_45521]++
                                        _84018 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_84018] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_84018 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45521] + 1
                                        mem[32] = sha3(_45521, 53)
                                        stor53[_45521][stor52[_45521] + 1].field_0 = Mask(216, 0, _83588)
                                        stor53[_45521][stor52[_45521] + 1].field_216 = block.timestamp % 1099511627776
                                else:
                                    mem[ceil32(bandCurrencyKeys[_45521].length) + _59877 + _71698 + 132] = 0
                                    require ext_code.size(bandOracleMap[_45521])
                                    staticcall bandOracleMap[_45521].mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len ceil32(_71698) + ceil32(bandCurrencyKeys[_45521].length) + _59877 + -mem[64] + 128]
                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _81883 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 96
                                    _82067 = mem[64]
                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                    mem[64] = mem[64] + 96
                                    mem[_82067] = mem[_81883]
                                    mem[_82067 + 32] = mem[_81883 + 32]
                                    mem[_82067 + 64] = mem[_81883 + 64]
                                    _83085 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_83085] = mem[_82067 + 5 len 27]
                                    mem[_83085 + 32] = mem[_82067 + 59 len 5]
                                    if block.timestamp >= mem[_83085 + 59 len 5]:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _84023 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45521
                                        mem[32] = 52
                                        currentRoundId[_45521]++
                                        _84613 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_84613] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_84613 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45521] + 1
                                        mem[32] = sha3(_45521, 53)
                                        stor53[_45521][stor52[_45521] + 1].field_0 = Mask(216, 0, _84023)
                                        stor53[_45521][stor52[_45521] + 1].field_216 = block.timestamp % 1099511627776
                        idx = idx + 1
                        continue 
                    _45404 = mem[64]
                    mem[mem[64]] = 64
                    _45520 = mem[96]
                    mem[mem[64] + 64] = mem[96]
                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                    _59482 = mem[(32 * arg3.length) + 128]
                    mem[_45404 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                    mem[_45404 + (32 * _45520) + 128 len 32 * _59482] = mem[(32 * arg3.length) + 160 len 32 * _59482]
                    var84001 = _59482
                    emit 0x50f45835: mem[mem[64] len _45404 + (32 * _45520) + (32 * _59482) + -mem[64] + 128]
                else:
                    uint8(stor0.field_8) = 0
                    stalePeriod = 12 * 3600
                    if arg3.length != arg4.length:
                        revert with 0, 'array length error.'
                    oracleAddress = arg2
                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                         gas gas_remaining wei
                        args 
                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                    if not delegate.return_code:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    currentRoundId['lUSD']++
                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                    mem[0] = currentRoundId['lUSD'] + 1
                    mem[32] = sha3('lUSD', 53)
                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                    if arg3.length != arg4.length:
                        revert with 0, 'array length error, not match.'
                    if block.timestamp >= block.timestamp + 600:
                        revert with 0, 'Time error'
                    idx = 0
                    while idx < arg3.length:
                        require idx < mem[96]
                        _45524 = mem[(32 * idx) + 128]
                        require idx < mem[(32 * arg3.length) + 128]
                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                        if mem[(32 * idx) + 128] == 'lUSD':
                            revert with 0, 'LUSD cannot be updated.'
                        _45912 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_45912] = 0
                        mem[_45912 + 32] = 0
                        _46071 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_46071] = 0
                        mem[_46071 + 32] = 0
                        _46167 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_46167] = 3
                        mem[_46167 + 32] = 'USD'
                        mem[0] = _45524
                        mem[32] = 102
                        _46169 = mem[64]
                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45524].length) + 32
                        mem[_46169] = bandCurrencyKeys[_45524].length
                        mem[_46169 + 32] = bandCurrencyKeys[_45524].field_0
                        s = _46169 + 32
                        t = sha3(sha3(_45524, 102))
                        while _46169 + bandCurrencyKeys[_45524].length > s:
                            mem[s + 32] = uint256(stor1[t])
                            s = s + 32
                            t = t + 1
                            continue 
                        mem[0] = _45524
                        mem[32] = 100
                        if not bandOracleMap[_45524]:
                            _59881 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_59881] = 0
                            mem[_59881 + 32] = 0
                            mem[0] = currentRoundId[_45524]
                            mem[32] = sha3(_45524, 53)
                            _60164 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_60164] = stor53[_45524][stor52[_45524]].field_0
                            mem[_60164 + 32] = stor53[_45524][stor52[_45524]].field_216
                            if block.timestamp >= stor53[_45524][stor52[_45524]].field_216:
                                require idx < mem[(32 * arg3.length) + 128]
                                _61194 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                mem[0] = _45524
                                mem[32] = 52
                                currentRoundId[_45524]++
                                _61545 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_61545] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                mem[_61545 + 32] = block.timestamp % 1099511627776
                                mem[0] = currentRoundId[_45524] + 1
                                mem[32] = sha3(_45524, 53)
                                stor53[_45524][stor52[_45524] + 1].field_0 = Mask(216, 0, _61194)
                                stor53[_45524][stor52[_45524] + 1].field_216 = block.timestamp % 1099511627776
                        else:
                            _59692 = mem[64]
                            mem[64] = mem[64] + 96
                            mem[_59692] = 0
                            mem[_59692 + 32] = 0
                            mem[_59692 + 64] = 0
                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 64
                            mem[mem[64] + 68] = bandCurrencyKeys[_45524].length
                            s = 0
                            while s < bandCurrencyKeys[_45524].length:
                                mem[s + mem[64] + 100] = mem[_46169 + s + 32]
                                s = s + 32
                                continue 
                            if ceil32(bandCurrencyKeys[_45524].length) <= bandCurrencyKeys[_45524].length:
                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45524].length) + 96
                                _71473 = mem[_46167]
                                mem[ceil32(bandCurrencyKeys[_45524].length) + mem[64] + 100] = mem[_46167]
                                s = 0
                                while s < _71473:
                                    mem[s + ceil32(bandCurrencyKeys[_45524].length) + mem[64] + 132] = mem[_46167 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_71473) <= _71473:
                                    require ext_code.size(bandOracleMap[_45524])
                                    staticcall bandOracleMap[_45524].getReferenceData(string rg1, string rg2) with:
                                            gas gas_remaining wei
                                           args Array(len=bandCurrencyKeys[_45524].length, data=mem[mem[64] + 100 len ceil32(_71473) + ceil32(bandCurrencyKeys[_45524].length) + 32]), ceil32(bandCurrencyKeys[_45524].length) + 96
                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _81792 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 96
                                    _81976 = mem[64]
                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                    mem[64] = mem[64] + 96
                                    mem[_81976] = mem[_81792]
                                    mem[_81976 + 32] = mem[_81792 + 32]
                                    mem[_81976 + 64] = mem[_81792 + 64]
                                    _82686 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_82686] = mem[_81976 + 5 len 27]
                                    mem[_82686 + 32] = mem[_81976 + 59 len 5]
                                    if block.timestamp >= mem[_82686 + 59 len 5]:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _83590 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45524
                                        mem[32] = 52
                                        currentRoundId[_45524]++
                                        _84025 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_84025] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_84025 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45524] + 1
                                        mem[32] = sha3(_45524, 53)
                                        stor53[_45524][stor52[_45524] + 1].field_0 = Mask(216, 0, _83590)
                                        stor53[_45524][stor52[_45524] + 1].field_216 = block.timestamp % 1099511627776
                                else:
                                    mem[ceil32(bandCurrencyKeys[_45524].length) + mem[64] + _71473 + 132] = 0
                                    require ext_code.size(bandOracleMap[_45524])
                                    staticcall bandOracleMap[_45524].getReferenceData(string rg1, string rg2) with:
                                            gas gas_remaining wei
                                           args Array(len=bandCurrencyKeys[_45524].length, data=mem[mem[64] + 100 len ceil32(_71473) + ceil32(bandCurrencyKeys[_45524].length) + 32]), ceil32(bandCurrencyKeys[_45524].length) + 96
                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _81884 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 96
                                    _82068 = mem[64]
                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                    mem[64] = mem[64] + 96
                                    mem[_82068] = mem[_81884]
                                    mem[_82068 + 32] = mem[_81884 + 32]
                                    mem[_82068 + 64] = mem[_81884 + 64]
                                    _83088 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_83088] = mem[_82068 + 5 len 27]
                                    mem[_83088 + 32] = mem[_82068 + 59 len 5]
                                    if block.timestamp >= mem[_83088 + 59 len 5]:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _84030 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45524
                                        mem[32] = 52
                                        currentRoundId[_45524]++
                                        _84619 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_84619] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_84619 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45524] + 1
                                        mem[32] = sha3(_45524, 53)
                                        stor53[_45524][stor52[_45524] + 1].field_0 = Mask(216, 0, _84030)
                                        stor53[_45524][stor52[_45524] + 1].field_216 = block.timestamp % 1099511627776
                            else:
                                mem[mem[64] + bandCurrencyKeys[_45524].length + 100] = 0
                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45524].length) + 96
                                _71703 = mem[_46167]
                                mem[ceil32(bandCurrencyKeys[_45524].length) + mem[64] + 100] = mem[_46167]
                                s = 0
                                while s < _71703:
                                    mem[s + ceil32(bandCurrencyKeys[_45524].length) + mem[64] + 132] = mem[_46167 + s + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(_71703) <= _71703:
                                    require ext_code.size(bandOracleMap[_45524])
                                    staticcall bandOracleMap[_45524].getReferenceData(string rg1, string rg2) with:
                                            gas gas_remaining wei
                                           args Array(len=bandCurrencyKeys[_45524].length, data=mem[mem[64] + 100 len ceil32(_71703) + ceil32(bandCurrencyKeys[_45524].length) + 32]), ceil32(bandCurrencyKeys[_45524].length) + 96
                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _81793 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 96
                                    _81977 = mem[64]
                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                    mem[64] = mem[64] + 96
                                    mem[_81977] = mem[_81793]
                                    mem[_81977 + 32] = mem[_81793 + 32]
                                    mem[_81977 + 64] = mem[_81793 + 64]
                                    _82692 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_82692] = mem[_81977 + 5 len 27]
                                    mem[_82692 + 32] = mem[_81977 + 59 len 5]
                                    if block.timestamp >= mem[_82692 + 59 len 5]:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _83592 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45524
                                        mem[32] = 52
                                        currentRoundId[_45524]++
                                        _84032 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_84032] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_84032 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45524] + 1
                                        mem[32] = sha3(_45524, 53)
                                        stor53[_45524][stor52[_45524] + 1].field_0 = Mask(216, 0, _83592)
                                        stor53[_45524][stor52[_45524] + 1].field_216 = block.timestamp % 1099511627776
                                else:
                                    mem[ceil32(bandCurrencyKeys[_45524].length) + mem[64] + _71703 + 132] = 0
                                    require ext_code.size(bandOracleMap[_45524])
                                    staticcall bandOracleMap[_45524].getReferenceData(string rg1, string rg2) with:
                                            gas gas_remaining wei
                                           args Array(len=bandCurrencyKeys[_45524].length, data=mem[mem[64] + 100 len ceil32(_71703) + ceil32(bandCurrencyKeys[_45524].length) + 32]), ceil32(bandCurrencyKeys[_45524].length) + 96
                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _81885 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 96
                                    _82069 = mem[64]
                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                    mem[64] = mem[64] + 96
                                    mem[_82069] = mem[_81885]
                                    mem[_82069 + 32] = mem[_81885 + 32]
                                    mem[_82069 + 64] = mem[_81885 + 64]
                                    _83091 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_83091] = mem[_82069 + 5 len 27]
                                    mem[_83091 + 32] = mem[_82069 + 59 len 5]
                                    if block.timestamp >= mem[_83091 + 59 len 5]:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _84037 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45524
                                        mem[32] = 52
                                        currentRoundId[_45524]++
                                        _84625 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_84625] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_84625 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45524] + 1
                                        mem[32] = sha3(_45524, 53)
                                        stor53[_45524][stor52[_45524] + 1].field_0 = Mask(216, 0, _84037)
                                        stor53[_45524][stor52[_45524] + 1].field_216 = block.timestamp % 1099511627776
                        idx = idx + 1
                        continue 
                    _45406 = mem[64]
                    mem[mem[64]] = 64
                    _45523 = mem[96]
                    mem[mem[64] + 64] = mem[96]
                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                    _59486 = mem[(32 * arg3.length) + 128]
                    mem[_45406 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                    mem[_45406 + (32 * _45523) + 128 len 32 * _59486] = mem[(32 * arg3.length) + 160 len 32 * _59486]
                    var85001 = _59486
                    emit 0x50f45835: mem[mem[64] len _45406 + (32 * _45523) + (32 * _59486) + -mem[64] + 128]
            else:
                uint8(stor0.field_0) = 1
                uint8(stor0.field_8) = 1
                Mask(248, 0, stor0.field_8) = 0
                if not ext_code.size(this.address):
                    if uint8(stor0.field_8):
                        if not arg1:
                            revert with 0, 'LnAdminUpgradeable: zero address'
                        adminAddress = arg1
                        mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                        emit AdminChanged(0, arg1);
                        if uint8(stor0.field_8):
                            stalePeriod = 12 * 3600
                            if arg3.length != arg4.length:
                                revert with 0, 'array length error.'
                            oracleAddress = arg2
                            require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                            delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                 gas gas_remaining wei
                                args 
                            mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                            if not delegate.return_code:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            currentRoundId['lUSD']++
                            mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                            mem[0] = currentRoundId['lUSD'] + 1
                            mem[32] = sha3('lUSD', 53)
                            stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                            stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                            if arg3.length != arg4.length:
                                revert with 0, 'array length error, not match.'
                            if block.timestamp >= block.timestamp + 600:
                                revert with 0, 'Time error'
                            idx = 0
                            while idx < arg3.length:
                                require idx < mem[96]
                                _45527 = mem[(32 * idx) + 128]
                                require idx < mem[(32 * arg3.length) + 128]
                                if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                    revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                if mem[(32 * idx) + 128] == 'lUSD':
                                    revert with 0, 'LUSD cannot be updated.'
                                _45914 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_45914] = 0
                                mem[_45914 + 32] = 0
                                _46072 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_46072] = 0
                                mem[_46072 + 32] = 0
                                _46170 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_46170] = 3
                                mem[_46170 + 32] = 'USD'
                                mem[0] = _45527
                                mem[32] = 102
                                _46172 = mem[64]
                                mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45527].length) + 32
                                mem[_46172] = bandCurrencyKeys[_45527].length
                                mem[_46172 + 32] = bandCurrencyKeys[_45527].field_0
                                s = _46172 + 32
                                t = sha3(sha3(_45527, 102))
                                while _46172 + bandCurrencyKeys[_45527].length > s:
                                    mem[s + 32] = uint256(stor1[t])
                                    s = s + 32
                                    t = t + 1
                                    continue 
                                mem[0] = _45527
                                mem[32] = 100
                                if not bandOracleMap[_45527]:
                                    _59886 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_59886] = 0
                                    mem[_59886 + 32] = 0
                                    mem[0] = currentRoundId[_45527]
                                    mem[32] = sha3(_45527, 53)
                                    _60171 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_60171] = stor53[_45527][stor52[_45527]].field_0
                                    mem[_60171 + 32] = stor53[_45527][stor52[_45527]].field_216
                                    if block.timestamp >= stor53[_45527][stor52[_45527]].field_216:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _61200 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45527
                                        mem[32] = 52
                                        currentRoundId[_45527]++
                                        _61554 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_61554] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_61554 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45527] + 1
                                        mem[32] = sha3(_45527, 53)
                                        stor53[_45527][stor52[_45527] + 1].field_0 = Mask(216, 0, _61200)
                                        stor53[_45527][stor52[_45527] + 1].field_216 = block.timestamp % 1099511627776
                                else:
                                    _59695 = mem[64]
                                    mem[64] = mem[64] + 96
                                    mem[_59695] = 0
                                    mem[_59695 + 32] = 0
                                    mem[_59695 + 64] = 0
                                    _59887 = mem[64]
                                    mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 64
                                    mem[mem[64] + 68] = bandCurrencyKeys[_45527].length
                                    s = 0
                                    while s < bandCurrencyKeys[_45527].length:
                                        mem[s + mem[64] + 100] = mem[_46172 + s + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(bandCurrencyKeys[_45527].length) <= bandCurrencyKeys[_45527].length:
                                        mem[_59887 + 36] = ceil32(bandCurrencyKeys[_45527].length) + 96
                                        _71478 = mem[_46170]
                                        mem[ceil32(bandCurrencyKeys[_45527].length) + _59887 + 100] = mem[_46170]
                                        s = 0
                                        while s < _71478:
                                            mem[s + ceil32(bandCurrencyKeys[_45527].length) + _59887 + 132] = mem[_46170 + s + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_71478) <= _71478:
                                            require ext_code.size(bandOracleMap[_45527])
                                            staticcall bandOracleMap[_45527].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71478) + ceil32(bandCurrencyKeys[_45527].length) + _59887 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81794 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _81978 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_81978] = mem[_81794]
                                            mem[_81978 + 32] = mem[_81794 + 32]
                                            mem[_81978 + 64] = mem[_81794 + 64]
                                            _82698 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82698] = mem[_81978 + 5 len 27]
                                            mem[_82698 + 32] = mem[_81978 + 59 len 5]
                                            if block.timestamp >= mem[_82698 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83594 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45527
                                                mem[32] = 52
                                                currentRoundId[_45527]++
                                                _84039 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84039] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84039 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45527] + 1
                                                mem[32] = sha3(_45527, 53)
                                                stor53[_45527][stor52[_45527] + 1].field_0 = Mask(216, 0, _83594)
                                                stor53[_45527][stor52[_45527] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            mem[ceil32(bandCurrencyKeys[_45527].length) + _59887 + _71478 + 132] = 0
                                            require ext_code.size(bandOracleMap[_45527])
                                            staticcall bandOracleMap[_45527].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71478) + ceil32(bandCurrencyKeys[_45527].length) + _59887 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81886 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _82070 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_82070] = mem[_81886]
                                            mem[_82070 + 32] = mem[_81886 + 32]
                                            mem[_82070 + 64] = mem[_81886 + 64]
                                            _83094 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_83094] = mem[_82070 + 5 len 27]
                                            mem[_83094 + 32] = mem[_82070 + 59 len 5]
                                            if block.timestamp >= mem[_83094 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _84044 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45527
                                                mem[32] = 52
                                                currentRoundId[_45527]++
                                                _84631 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84631] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84631 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45527] + 1
                                                mem[32] = sha3(_45527, 53)
                                                stor53[_45527][stor52[_45527] + 1].field_0 = Mask(216, 0, _84044)
                                                stor53[_45527][stor52[_45527] + 1].field_216 = block.timestamp % 1099511627776
                                    else:
                                        mem[_59887 + bandCurrencyKeys[_45527].length + 100] = 0
                                        mem[_59887 + 36] = ceil32(bandCurrencyKeys[_45527].length) + 96
                                        _71708 = mem[_46170]
                                        mem[ceil32(bandCurrencyKeys[_45527].length) + _59887 + 100] = mem[_46170]
                                        s = 0
                                        while s < _71708:
                                            mem[s + ceil32(bandCurrencyKeys[_45527].length) + _59887 + 132] = mem[_46170 + s + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_71708) <= _71708:
                                            require ext_code.size(bandOracleMap[_45527])
                                            staticcall bandOracleMap[_45527].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71708) + ceil32(bandCurrencyKeys[_45527].length) + _59887 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81795 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _81979 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_81979] = mem[_81795]
                                            mem[_81979 + 32] = mem[_81795 + 32]
                                            mem[_81979 + 64] = mem[_81795 + 64]
                                            _82704 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82704] = mem[_81979 + 5 len 27]
                                            mem[_82704 + 32] = mem[_81979 + 59 len 5]
                                            if block.timestamp >= mem[_82704 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83596 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45527
                                                mem[32] = 52
                                                currentRoundId[_45527]++
                                                _84046 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84046] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84046 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45527] + 1
                                                mem[32] = sha3(_45527, 53)
                                                stor53[_45527][stor52[_45527] + 1].field_0 = Mask(216, 0, _83596)
                                                stor53[_45527][stor52[_45527] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            mem[ceil32(bandCurrencyKeys[_45527].length) + _59887 + _71708 + 132] = 0
                                            require ext_code.size(bandOracleMap[_45527])
                                            staticcall bandOracleMap[_45527].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71708) + ceil32(bandCurrencyKeys[_45527].length) + _59887 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81887 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _82071 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_82071] = mem[_81887]
                                            mem[_82071 + 32] = mem[_81887 + 32]
                                            mem[_82071 + 64] = mem[_81887 + 64]
                                            _83097 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_83097] = mem[_82071 + 5 len 27]
                                            mem[_83097 + 32] = mem[_82071 + 59 len 5]
                                            if block.timestamp >= mem[_83097 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _84051 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45527
                                                mem[32] = 52
                                                currentRoundId[_45527]++
                                                _84637 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84637] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84637 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45527] + 1
                                                mem[32] = sha3(_45527, 53)
                                                stor53[_45527][stor52[_45527] + 1].field_0 = Mask(216, 0, _84051)
                                                stor53[_45527][stor52[_45527] + 1].field_216 = block.timestamp % 1099511627776
                                idx = idx + 1
                                continue 
                            _45408 = mem[64]
                            mem[mem[64]] = 64
                            _45526 = mem[96]
                            mem[mem[64] + 64] = mem[96]
                            mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                            mem[mem[64] + 32] = (32 * mem[96]) + 96
                            _59490 = mem[(32 * arg3.length) + 128]
                            mem[_45408 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                            mem[_45408 + (32 * _45526) + 128 len 32 * _59490] = mem[(32 * arg3.length) + 160 len 32 * _59490]
                            var87001 = _59490
                            emit 0x50f45835: mem[mem[64] len _45408 + (32 * _45526) + (32 * _59490) + -mem[64] + 128]
                        else:
                            uint8(stor0.field_8) = 0
                            stalePeriod = 12 * 3600
                            if arg3.length != arg4.length:
                                revert with 0, 'array length error.'
                            oracleAddress = arg2
                            require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                            delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                 gas gas_remaining wei
                                args 
                            mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                            if not delegate.return_code:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            currentRoundId['lUSD']++
                            mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                            mem[0] = currentRoundId['lUSD'] + 1
                            mem[32] = sha3('lUSD', 53)
                            stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                            stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                            if arg3.length != arg4.length:
                                revert with 0, 'array length error, not match.'
                            if block.timestamp >= block.timestamp + 600:
                                revert with 0, 'Time error'
                            idx = 0
                            while idx < arg3.length:
                                require idx < mem[96]
                                _45530 = mem[(32 * idx) + 128]
                                require idx < mem[(32 * arg3.length) + 128]
                                if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                    revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                if mem[(32 * idx) + 128] == 'lUSD':
                                    revert with 0, 'LUSD cannot be updated.'
                                _45916 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_45916] = 0
                                mem[_45916 + 32] = 0
                                _46073 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_46073] = 0
                                mem[_46073 + 32] = 0
                                _46173 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_46173] = 3
                                mem[_46173 + 32] = 'USD'
                                mem[0] = _45530
                                mem[32] = 102
                                _46175 = mem[64]
                                mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45530].length) + 32
                                mem[_46175] = bandCurrencyKeys[_45530].length
                                mem[_46175 + 32] = bandCurrencyKeys[_45530].field_0
                                s = _46175 + 32
                                t = sha3(sha3(_45530, 102))
                                while _46175 + bandCurrencyKeys[_45530].length > s:
                                    mem[s + 32] = uint256(stor1[t])
                                    s = s + 32
                                    t = t + 1
                                    continue 
                                mem[0] = _45530
                                mem[32] = 100
                                if not bandOracleMap[_45530]:
                                    _59891 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_59891] = 0
                                    mem[_59891 + 32] = 0
                                    mem[0] = currentRoundId[_45530]
                                    mem[32] = sha3(_45530, 53)
                                    _60178 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_60178] = stor53[_45530][stor52[_45530]].field_0
                                    mem[_60178 + 32] = stor53[_45530][stor52[_45530]].field_216
                                    if block.timestamp >= stor53[_45530][stor52[_45530]].field_216:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _61206 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45530
                                        mem[32] = 52
                                        currentRoundId[_45530]++
                                        _61563 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_61563] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_61563 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45530] + 1
                                        mem[32] = sha3(_45530, 53)
                                        stor53[_45530][stor52[_45530] + 1].field_0 = Mask(216, 0, _61206)
                                        stor53[_45530][stor52[_45530] + 1].field_216 = block.timestamp % 1099511627776
                                else:
                                    _59698 = mem[64]
                                    mem[64] = mem[64] + 96
                                    mem[_59698] = 0
                                    mem[_59698 + 32] = 0
                                    mem[_59698 + 64] = 0
                                    _59892 = mem[64]
                                    mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 64
                                    mem[mem[64] + 68] = bandCurrencyKeys[_45530].length
                                    s = 0
                                    while s < bandCurrencyKeys[_45530].length:
                                        mem[s + mem[64] + 100] = mem[_46175 + s + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(bandCurrencyKeys[_45530].length) <= bandCurrencyKeys[_45530].length:
                                        mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45530].length) + 96
                                        _71483 = mem[_46173]
                                        mem[ceil32(bandCurrencyKeys[_45530].length) + mem[64] + 100] = mem[_46173]
                                        s = 0
                                        while s < _71483:
                                            mem[s + ceil32(bandCurrencyKeys[_45530].length) + mem[64] + 132] = mem[_46173 + s + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_71483) <= _71483:
                                            require ext_code.size(bandOracleMap[_45530])
                                            staticcall bandOracleMap[_45530].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71483) + ceil32(bandCurrencyKeys[_45530].length) + _59892 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81796 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _81980 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_81980] = mem[_81796]
                                            mem[_81980 + 32] = mem[_81796 + 32]
                                            mem[_81980 + 64] = mem[_81796 + 64]
                                            _82710 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82710] = mem[_81980 + 5 len 27]
                                            mem[_82710 + 32] = mem[_81980 + 59 len 5]
                                            if block.timestamp >= mem[_82710 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83598 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45530
                                                mem[32] = 52
                                                currentRoundId[_45530]++
                                                _84053 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84053] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84053 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45530] + 1
                                                mem[32] = sha3(_45530, 53)
                                                stor53[_45530][stor52[_45530] + 1].field_0 = Mask(216, 0, _83598)
                                                stor53[_45530][stor52[_45530] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            mem[ceil32(bandCurrencyKeys[_45530].length) + _59892 + _71483 + 132] = 0
                                            require ext_code.size(bandOracleMap[_45530])
                                            staticcall bandOracleMap[_45530].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71483) + ceil32(bandCurrencyKeys[_45530].length) + _59892 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81888 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _82072 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_82072] = mem[_81888]
                                            mem[_82072 + 32] = mem[_81888 + 32]
                                            mem[_82072 + 64] = mem[_81888 + 64]
                                            _83100 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_83100] = mem[_82072 + 5 len 27]
                                            mem[_83100 + 32] = mem[_82072 + 59 len 5]
                                            if block.timestamp >= mem[_83100 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _84058 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45530
                                                mem[32] = 52
                                                currentRoundId[_45530]++
                                                _84643 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84643] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84643 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45530] + 1
                                                mem[32] = sha3(_45530, 53)
                                                stor53[_45530][stor52[_45530] + 1].field_0 = Mask(216, 0, _84058)
                                                stor53[_45530][stor52[_45530] + 1].field_216 = block.timestamp % 1099511627776
                                    else:
                                        mem[mem[64] + bandCurrencyKeys[_45530].length + 100] = 0
                                        mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45530].length) + 96
                                        _71713 = mem[_46173]
                                        mem[ceil32(bandCurrencyKeys[_45530].length) + mem[64] + 100] = mem[_46173]
                                        s = 0
                                        while s < _71713:
                                            mem[s + ceil32(bandCurrencyKeys[_45530].length) + mem[64] + 132] = mem[_46173 + s + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_71713) <= _71713:
                                            require ext_code.size(bandOracleMap[_45530])
                                            staticcall bandOracleMap[_45530].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71713) + ceil32(bandCurrencyKeys[_45530].length) + _59892 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81797 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _81981 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_81981] = mem[_81797]
                                            mem[_81981 + 32] = mem[_81797 + 32]
                                            mem[_81981 + 64] = mem[_81797 + 64]
                                            _82716 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82716] = mem[_81981 + 5 len 27]
                                            mem[_82716 + 32] = mem[_81981 + 59 len 5]
                                            if block.timestamp >= mem[_82716 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83600 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45530
                                                mem[32] = 52
                                                currentRoundId[_45530]++
                                                _84060 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84060] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84060 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45530] + 1
                                                mem[32] = sha3(_45530, 53)
                                                stor53[_45530][stor52[_45530] + 1].field_0 = Mask(216, 0, _83600)
                                                stor53[_45530][stor52[_45530] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            mem[ceil32(bandCurrencyKeys[_45530].length) + _59892 + _71713 + 132] = 0
                                            require ext_code.size(bandOracleMap[_45530])
                                            staticcall bandOracleMap[_45530].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71713) + ceil32(bandCurrencyKeys[_45530].length) + _59892 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81889 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _82073 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_82073] = mem[_81889]
                                            mem[_82073 + 32] = mem[_81889 + 32]
                                            mem[_82073 + 64] = mem[_81889 + 64]
                                            _83103 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_83103] = mem[_82073 + 5 len 27]
                                            mem[_83103 + 32] = mem[_82073 + 59 len 5]
                                            if block.timestamp >= mem[_83103 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _84065 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45530
                                                mem[32] = 52
                                                currentRoundId[_45530]++
                                                _84649 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84649] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84649 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45530] + 1
                                                mem[32] = sha3(_45530, 53)
                                                stor53[_45530][stor52[_45530] + 1].field_0 = Mask(216, 0, _84065)
                                                stor53[_45530][stor52[_45530] + 1].field_216 = block.timestamp % 1099511627776
                                idx = idx + 1
                                continue 
                            _45410 = mem[64]
                            mem[mem[64]] = 64
                            _45529 = mem[96]
                            mem[mem[64] + 64] = mem[96]
                            mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                            mem[mem[64] + 32] = (32 * mem[96]) + 96
                            _59494 = mem[(32 * arg3.length) + 128]
                            mem[_45410 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                            mem[_45410 + (32 * _45529) + 128 len 32 * _59494] = mem[(32 * arg3.length) + 160 len 32 * _59494]
                            var88001 = _59494
                            emit 0x50f45835: mem[mem[64] len _45410 + (32 * _45529) + (32 * _59494) + -mem[64] + 128]
                    else:
                        uint8(stor0.field_0) = 1
                        uint8(stor0.field_8) = 1
                        Mask(248, 0, stor0.field_8) = 0
                        if not ext_code.size(this.address):
                            if uint8(stor0.field_8):
                                if not arg1:
                                    revert with 0, 'LnAdminUpgradeable: zero address'
                                adminAddress = arg1
                                mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                                emit AdminChanged(0, arg1);
                                if uint8(stor0.field_8):
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45533 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45918 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45918] = 0
                                        mem[_45918 + 32] = 0
                                        _46074 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46074] = 0
                                        mem[_46074 + 32] = 0
                                        _46176 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46176] = 3
                                        mem[_46176 + 32] = 'USD'
                                        mem[0] = _45533
                                        mem[32] = 102
                                        _46178 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45533].length) + 32
                                        mem[_46178] = bandCurrencyKeys[_45533].length
                                        mem[_46178 + 32] = bandCurrencyKeys[_45533].field_0
                                        s = _46178 + 32
                                        t = sha3(sha3(_45533, 102))
                                        while _46178 + bandCurrencyKeys[_45533].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45533
                                        mem[32] = 100
                                        if not bandOracleMap[_45533]:
                                            _59896 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59896] = 0
                                            mem[_59896 + 32] = 0
                                            mem[0] = currentRoundId[_45533]
                                            mem[32] = sha3(_45533, 53)
                                            _60185 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60185] = stor53[_45533][stor52[_45533]].field_0
                                            mem[_60185 + 32] = stor53[_45533][stor52[_45533]].field_216
                                            if block.timestamp >= stor53[_45533][stor52[_45533]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61212 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45533
                                                mem[32] = 52
                                                currentRoundId[_45533]++
                                                _61572 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61572] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61572 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45533] + 1
                                                mem[32] = sha3(_45533, 53)
                                                stor53[_45533][stor52[_45533] + 1].field_0 = Mask(216, 0, _61212)
                                                stor53[_45533][stor52[_45533] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59701 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59701] = 0
                                            mem[_59701 + 32] = 0
                                            mem[_59701 + 64] = 0
                                            _59897 = mem[64]
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45533].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45533].length:
                                                mem[s + mem[64] + 100] = mem[_46178 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45533].length) <= bandCurrencyKeys[_45533].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45533].length) + 96
                                                _71488 = mem[_46176]
                                                mem[ceil32(bandCurrencyKeys[_45533].length) + mem[64] + 100] = mem[_46176]
                                                s = 0
                                                while s < _71488:
                                                    mem[s + ceil32(bandCurrencyKeys[_45533].length) + mem[64] + 132] = mem[_46176 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71488) <= _71488:
                                                    require ext_code.size(bandOracleMap[_45533])
                                                    staticcall bandOracleMap[_45533].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45533].length, data=mem[mem[64] + 100 len ceil32(_71488) + ceil32(bandCurrencyKeys[_45533].length) + 32]), ceil32(bandCurrencyKeys[_45533].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81798 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81982 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81982] = mem[_81798]
                                                    mem[_81982 + 32] = mem[_81798 + 32]
                                                    mem[_81982 + 64] = mem[_81798 + 64]
                                                    _82722 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82722] = mem[_81982 + 5 len 27]
                                                    mem[_82722 + 32] = mem[_81982 + 59 len 5]
                                                    if block.timestamp >= mem[_82722 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83602 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45533
                                                        mem[32] = 52
                                                        currentRoundId[_45533]++
                                                        _84067 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84067] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84067 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45533] + 1
                                                        mem[32] = sha3(_45533, 53)
                                                        stor53[_45533][stor52[_45533] + 1].field_0 = Mask(216, 0, _83602)
                                                        stor53[_45533][stor52[_45533] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45533].length) + mem[64] + _71488 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45533])
                                                    staticcall bandOracleMap[_45533].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45533].length, data=mem[mem[64] + 100 len ceil32(_71488) + ceil32(bandCurrencyKeys[_45533].length) + 32]), ceil32(bandCurrencyKeys[_45533].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81890 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82074 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82074] = mem[_81890]
                                                    mem[_82074 + 32] = mem[_81890 + 32]
                                                    mem[_82074 + 64] = mem[_81890 + 64]
                                                    _83106 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83106] = mem[_82074 + 5 len 27]
                                                    mem[_83106 + 32] = mem[_82074 + 59 len 5]
                                                    if block.timestamp >= mem[_83106 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84072 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45533
                                                        mem[32] = 52
                                                        currentRoundId[_45533]++
                                                        _84655 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84655] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84655 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45533] + 1
                                                        mem[32] = sha3(_45533, 53)
                                                        stor53[_45533][stor52[_45533] + 1].field_0 = Mask(216, 0, _84072)
                                                        stor53[_45533][stor52[_45533] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45533].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45533].length) + 96
                                                _71718 = mem[_46176]
                                                mem[ceil32(bandCurrencyKeys[_45533].length) + mem[64] + 100] = mem[_46176]
                                                s = 0
                                                while s < _71718:
                                                    mem[s + ceil32(bandCurrencyKeys[_45533].length) + mem[64] + 132] = mem[_46176 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71718) <= _71718:
                                                    require ext_code.size(bandOracleMap[_45533])
                                                    staticcall bandOracleMap[_45533].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71718) + ceil32(bandCurrencyKeys[_45533].length) + _59897 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81799 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81983 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81983] = mem[_81799]
                                                    mem[_81983 + 32] = mem[_81799 + 32]
                                                    mem[_81983 + 64] = mem[_81799 + 64]
                                                    _82728 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82728] = mem[_81983 + 5 len 27]
                                                    mem[_82728 + 32] = mem[_81983 + 59 len 5]
                                                    if block.timestamp >= mem[_82728 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83604 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45533
                                                        mem[32] = 52
                                                        currentRoundId[_45533]++
                                                        _84074 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84074] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84074 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45533] + 1
                                                        mem[32] = sha3(_45533, 53)
                                                        stor53[_45533][stor52[_45533] + 1].field_0 = Mask(216, 0, _83604)
                                                        stor53[_45533][stor52[_45533] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45533].length) + _59897 + _71718 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45533])
                                                    staticcall bandOracleMap[_45533].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71718) + ceil32(bandCurrencyKeys[_45533].length) + _59897 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81891 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82075 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82075] = mem[_81891]
                                                    mem[_82075 + 32] = mem[_81891 + 32]
                                                    mem[_82075 + 64] = mem[_81891 + 64]
                                                    _83109 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83109] = mem[_82075 + 5 len 27]
                                                    mem[_83109 + 32] = mem[_82075 + 59 len 5]
                                                    if block.timestamp >= mem[_83109 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84079 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45533
                                                        mem[32] = 52
                                                        currentRoundId[_45533]++
                                                        _84661 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84661] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84661 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45533] + 1
                                                        mem[32] = sha3(_45533, 53)
                                                        stor53[_45533][stor52[_45533] + 1].field_0 = Mask(216, 0, _84079)
                                                        stor53[_45533][stor52[_45533] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45412 = mem[64]
                                    mem[mem[64]] = 64
                                    _45532 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59498 = mem[(32 * arg3.length) + 128]
                                    mem[_45412 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45412 + (32 * _45532) + 128 len 32 * _59498] = mem[(32 * arg3.length) + 160 len 32 * _59498]
                                    var90001 = _59498
                                    emit 0x50f45835: mem[mem[64] len _45412 + (32 * _45532) + (32 * _59498) + -mem[64] + 128]
                                else:
                                    uint8(stor0.field_8) = 0
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45536 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45920 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45920] = 0
                                        mem[_45920 + 32] = 0
                                        _46075 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46075] = 0
                                        mem[_46075 + 32] = 0
                                        _46179 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46179] = 3
                                        mem[_46179 + 32] = 'USD'
                                        mem[0] = _45536
                                        mem[32] = 102
                                        _46181 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45536].length) + 32
                                        mem[_46181] = bandCurrencyKeys[_45536].length
                                        mem[_46181 + 32] = bandCurrencyKeys[_45536].field_0
                                        s = _46181 + 32
                                        t = sha3(sha3(_45536, 102))
                                        while _46181 + bandCurrencyKeys[_45536].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45536
                                        mem[32] = 100
                                        if not bandOracleMap[_45536]:
                                            _59901 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59901] = 0
                                            mem[_59901 + 32] = 0
                                            mem[0] = currentRoundId[_45536]
                                            mem[32] = sha3(_45536, 53)
                                            _60192 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60192] = stor53[_45536][stor52[_45536]].field_0
                                            mem[_60192 + 32] = stor53[_45536][stor52[_45536]].field_216
                                            if block.timestamp >= stor53[_45536][stor52[_45536]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61218 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45536
                                                mem[32] = 52
                                                currentRoundId[_45536]++
                                                _61581 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61581] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61581 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45536] + 1
                                                mem[32] = sha3(_45536, 53)
                                                stor53[_45536][stor52[_45536] + 1].field_0 = Mask(216, 0, _61218)
                                                stor53[_45536][stor52[_45536] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59704 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59704] = 0
                                            mem[_59704 + 32] = 0
                                            mem[_59704 + 64] = 0
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45536].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45536].length:
                                                mem[s + mem[64] + 100] = mem[_46181 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45536].length) <= bandCurrencyKeys[_45536].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45536].length) + 96
                                                _71493 = mem[_46179]
                                                mem[ceil32(bandCurrencyKeys[_45536].length) + mem[64] + 100] = mem[_46179]
                                                s = 0
                                                while s < _71493:
                                                    mem[s + ceil32(bandCurrencyKeys[_45536].length) + mem[64] + 132] = mem[_46179 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71493) <= _71493:
                                                    require ext_code.size(bandOracleMap[_45536])
                                                    staticcall bandOracleMap[_45536].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45536].length, data=mem[mem[64] + 100 len ceil32(_71493) + ceil32(bandCurrencyKeys[_45536].length) + 32]), ceil32(bandCurrencyKeys[_45536].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81800 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81984 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81984] = mem[_81800]
                                                    mem[_81984 + 32] = mem[_81800 + 32]
                                                    mem[_81984 + 64] = mem[_81800 + 64]
                                                    _82734 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82734] = mem[_81984 + 5 len 27]
                                                    mem[_82734 + 32] = mem[_81984 + 59 len 5]
                                                    if block.timestamp >= mem[_82734 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83606 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45536
                                                        mem[32] = 52
                                                        currentRoundId[_45536]++
                                                        _84081 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84081] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84081 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45536] + 1
                                                        mem[32] = sha3(_45536, 53)
                                                        stor53[_45536][stor52[_45536] + 1].field_0 = Mask(216, 0, _83606)
                                                        stor53[_45536][stor52[_45536] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45536].length) + mem[64] + _71493 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45536])
                                                    staticcall bandOracleMap[_45536].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45536].length, data=mem[mem[64] + 100 len ceil32(_71493) + ceil32(bandCurrencyKeys[_45536].length) + 32]), ceil32(bandCurrencyKeys[_45536].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81892 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82076 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82076] = mem[_81892]
                                                    mem[_82076 + 32] = mem[_81892 + 32]
                                                    mem[_82076 + 64] = mem[_81892 + 64]
                                                    _83112 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83112] = mem[_82076 + 5 len 27]
                                                    mem[_83112 + 32] = mem[_82076 + 59 len 5]
                                                    if block.timestamp >= mem[_83112 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84086 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45536
                                                        mem[32] = 52
                                                        currentRoundId[_45536]++
                                                        _84667 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84667] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84667 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45536] + 1
                                                        mem[32] = sha3(_45536, 53)
                                                        stor53[_45536][stor52[_45536] + 1].field_0 = Mask(216, 0, _84086)
                                                        stor53[_45536][stor52[_45536] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45536].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45536].length) + 96
                                                _71723 = mem[_46179]
                                                mem[ceil32(bandCurrencyKeys[_45536].length) + mem[64] + 100] = mem[_46179]
                                                s = 0
                                                while s < _71723:
                                                    mem[s + ceil32(bandCurrencyKeys[_45536].length) + mem[64] + 132] = mem[_46179 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71723) <= _71723:
                                                    require ext_code.size(bandOracleMap[_45536])
                                                    staticcall bandOracleMap[_45536].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45536].length, data=mem[mem[64] + 100 len ceil32(_71723) + ceil32(bandCurrencyKeys[_45536].length) + 32]), ceil32(bandCurrencyKeys[_45536].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81801 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81985 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81985] = mem[_81801]
                                                    mem[_81985 + 32] = mem[_81801 + 32]
                                                    mem[_81985 + 64] = mem[_81801 + 64]
                                                    _82740 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82740] = mem[_81985 + 5 len 27]
                                                    mem[_82740 + 32] = mem[_81985 + 59 len 5]
                                                    if block.timestamp >= mem[_82740 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83608 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45536
                                                        mem[32] = 52
                                                        currentRoundId[_45536]++
                                                        _84088 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84088] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84088 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45536] + 1
                                                        mem[32] = sha3(_45536, 53)
                                                        stor53[_45536][stor52[_45536] + 1].field_0 = Mask(216, 0, _83608)
                                                        stor53[_45536][stor52[_45536] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45536].length) + mem[64] + _71723 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45536])
                                                    staticcall bandOracleMap[_45536].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45536].length, data=mem[mem[64] + 100 len ceil32(_71723) + ceil32(bandCurrencyKeys[_45536].length) + 32]), ceil32(bandCurrencyKeys[_45536].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81893 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82077 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82077] = mem[_81893]
                                                    mem[_82077 + 32] = mem[_81893 + 32]
                                                    mem[_82077 + 64] = mem[_81893 + 64]
                                                    _83115 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83115] = mem[_82077 + 5 len 27]
                                                    mem[_83115 + 32] = mem[_82077 + 59 len 5]
                                                    if block.timestamp >= mem[_83115 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84093 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45536
                                                        mem[32] = 52
                                                        currentRoundId[_45536]++
                                                        _84673 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84673] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84673 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45536] + 1
                                                        mem[32] = sha3(_45536, 53)
                                                        stor53[_45536][stor52[_45536] + 1].field_0 = Mask(216, 0, _84093)
                                                        stor53[_45536][stor52[_45536] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45414 = mem[64]
                                    mem[mem[64]] = 64
                                    _45535 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var84001 = mem[96]
                                    var84002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59502 = mem[(32 * arg3.length) + 128]
                                    mem[_45414 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45414 + (32 * _45535) + 128 len 32 * _59502] = mem[(32 * arg3.length) + 160 len 32 * _59502]
                                    var91001 = _59502
                                    emit 0x50f45835: mem[mem[64] len _45414 + (32 * _45535) + (32 * _59502) + -mem[64] + 128]
                            else:
                                uint8(stor0.field_0) = 1
                                uint8(stor0.field_8) = 1
                                Mask(248, 0, stor0.field_8) = 0
                                if not arg1:
                                    revert with 0, 'LnAdminUpgradeable: zero address'
                                adminAddress = arg1
                                mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                                emit AdminChanged(0, arg1);
                                if uint8(stor0.field_8):
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45539 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45922 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45922] = 0
                                        mem[_45922 + 32] = 0
                                        _46076 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46076] = 0
                                        mem[_46076 + 32] = 0
                                        _46182 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46182] = 3
                                        mem[_46182 + 32] = 'USD'
                                        mem[0] = _45539
                                        mem[32] = 102
                                        _46184 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45539].length) + 32
                                        mem[_46184] = bandCurrencyKeys[_45539].length
                                        mem[_46184 + 32] = bandCurrencyKeys[_45539].field_0
                                        s = _46184 + 32
                                        t = sha3(sha3(_45539, 102))
                                        while _46184 + bandCurrencyKeys[_45539].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45539
                                        mem[32] = 100
                                        if not bandOracleMap[_45539]:
                                            _59906 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59906] = 0
                                            mem[_59906 + 32] = 0
                                            mem[0] = currentRoundId[_45539]
                                            mem[32] = sha3(_45539, 53)
                                            _60199 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60199] = stor53[_45539][stor52[_45539]].field_0
                                            mem[_60199 + 32] = stor53[_45539][stor52[_45539]].field_216
                                            if block.timestamp >= stor53[_45539][stor52[_45539]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61224 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45539
                                                mem[32] = 52
                                                currentRoundId[_45539]++
                                                _61590 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61590] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61590 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45539] + 1
                                                mem[32] = sha3(_45539, 53)
                                                stor53[_45539][stor52[_45539] + 1].field_0 = Mask(216, 0, _61224)
                                                stor53[_45539][stor52[_45539] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59707 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59707] = 0
                                            mem[_59707 + 32] = 0
                                            mem[_59707 + 64] = 0
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45539].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45539].length:
                                                mem[s + mem[64] + 100] = mem[_46184 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45539].length) <= bandCurrencyKeys[_45539].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45539].length) + 96
                                                _71498 = mem[_46182]
                                                mem[ceil32(bandCurrencyKeys[_45539].length) + mem[64] + 100] = mem[_46182]
                                                s = 0
                                                while s < _71498:
                                                    mem[s + ceil32(bandCurrencyKeys[_45539].length) + mem[64] + 132] = mem[_46182 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71498) <= _71498:
                                                    require ext_code.size(bandOracleMap[_45539])
                                                    staticcall bandOracleMap[_45539].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45539].length, data=mem[mem[64] + 100 len ceil32(_71498) + ceil32(bandCurrencyKeys[_45539].length) + 32]), ceil32(bandCurrencyKeys[_45539].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81802 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81986 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81986] = mem[_81802]
                                                    mem[_81986 + 32] = mem[_81802 + 32]
                                                    mem[_81986 + 64] = mem[_81802 + 64]
                                                    _82746 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82746] = mem[_81986 + 5 len 27]
                                                    mem[_82746 + 32] = mem[_81986 + 59 len 5]
                                                    if block.timestamp >= mem[_82746 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83610 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45539
                                                        mem[32] = 52
                                                        currentRoundId[_45539]++
                                                        _84095 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84095] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84095 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45539] + 1
                                                        mem[32] = sha3(_45539, 53)
                                                        stor53[_45539][stor52[_45539] + 1].field_0 = Mask(216, 0, _83610)
                                                        stor53[_45539][stor52[_45539] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45539].length) + mem[64] + _71498 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45539])
                                                    staticcall bandOracleMap[_45539].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45539].length, data=mem[mem[64] + 100 len ceil32(_71498) + ceil32(bandCurrencyKeys[_45539].length) + 32]), ceil32(bandCurrencyKeys[_45539].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81894 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82078 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82078] = mem[_81894]
                                                    mem[_82078 + 32] = mem[_81894 + 32]
                                                    mem[_82078 + 64] = mem[_81894 + 64]
                                                    _83118 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83118] = mem[_82078 + 5 len 27]
                                                    mem[_83118 + 32] = mem[_82078 + 59 len 5]
                                                    if block.timestamp >= mem[_83118 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84100 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45539
                                                        mem[32] = 52
                                                        currentRoundId[_45539]++
                                                        _84679 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84679] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84679 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45539] + 1
                                                        mem[32] = sha3(_45539, 53)
                                                        stor53[_45539][stor52[_45539] + 1].field_0 = Mask(216, 0, _84100)
                                                        stor53[_45539][stor52[_45539] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45539].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45539].length) + 96
                                                _71728 = mem[_46182]
                                                mem[ceil32(bandCurrencyKeys[_45539].length) + mem[64] + 100] = mem[_46182]
                                                s = 0
                                                while s < _71728:
                                                    mem[s + ceil32(bandCurrencyKeys[_45539].length) + mem[64] + 132] = mem[_46182 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71728) <= _71728:
                                                    require ext_code.size(bandOracleMap[_45539])
                                                    staticcall bandOracleMap[_45539].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45539].length, data=mem[mem[64] + 100 len ceil32(_71728) + ceil32(bandCurrencyKeys[_45539].length) + 32]), ceil32(bandCurrencyKeys[_45539].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81803 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81987 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81987] = mem[_81803]
                                                    mem[_81987 + 32] = mem[_81803 + 32]
                                                    mem[_81987 + 64] = mem[_81803 + 64]
                                                    _82752 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82752] = mem[_81987 + 5 len 27]
                                                    mem[_82752 + 32] = mem[_81987 + 59 len 5]
                                                    if block.timestamp >= mem[_82752 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83612 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45539
                                                        mem[32] = 52
                                                        currentRoundId[_45539]++
                                                        _84102 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84102] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84102 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45539] + 1
                                                        mem[32] = sha3(_45539, 53)
                                                        stor53[_45539][stor52[_45539] + 1].field_0 = Mask(216, 0, _83612)
                                                        stor53[_45539][stor52[_45539] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45539].length) + mem[64] + _71728 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45539])
                                                    staticcall bandOracleMap[_45539].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45539].length, data=mem[mem[64] + 100 len ceil32(_71728) + ceil32(bandCurrencyKeys[_45539].length) + 32]), ceil32(bandCurrencyKeys[_45539].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81895 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82079 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82079] = mem[_81895]
                                                    mem[_82079 + 32] = mem[_81895 + 32]
                                                    mem[_82079 + 64] = mem[_81895 + 64]
                                                    _83121 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83121] = mem[_82079 + 5 len 27]
                                                    mem[_83121 + 32] = mem[_82079 + 59 len 5]
                                                    if block.timestamp >= mem[_83121 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84107 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45539
                                                        mem[32] = 52
                                                        currentRoundId[_45539]++
                                                        _84685 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84685] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84685 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45539] + 1
                                                        mem[32] = sha3(_45539, 53)
                                                        stor53[_45539][stor52[_45539] + 1].field_0 = Mask(216, 0, _84107)
                                                        stor53[_45539][stor52[_45539] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45416 = mem[64]
                                    mem[mem[64]] = 64
                                    _45538 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var84001 = mem[96]
                                    var84002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59506 = mem[(32 * arg3.length) + 128]
                                    mem[_45416 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45416 + (32 * _45538) + 128 len 32 * _59506] = mem[(32 * arg3.length) + 160 len 32 * _59506]
                                    var91001 = _59506
                                    emit 0x50f45835: mem[mem[64] len _45416 + (32 * _45538) + (32 * _59506) + -mem[64] + 128]
                                else:
                                    uint8(stor0.field_8) = 0
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45542 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45924 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45924] = 0
                                        mem[_45924 + 32] = 0
                                        _46077 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46077] = 0
                                        mem[_46077 + 32] = 0
                                        _46185 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46185] = 3
                                        mem[_46185 + 32] = 'USD'
                                        mem[0] = _45542
                                        mem[32] = 102
                                        _46187 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45542].length) + 32
                                        mem[_46187] = bandCurrencyKeys[_45542].length
                                        mem[_46187 + 32] = bandCurrencyKeys[_45542].field_0
                                        s = _46187 + 32
                                        t = sha3(sha3(_45542, 102))
                                        while _46187 + bandCurrencyKeys[_45542].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45542
                                        mem[32] = 100
                                        if not bandOracleMap[_45542]:
                                            _59911 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59911] = 0
                                            mem[_59911 + 32] = 0
                                            mem[0] = currentRoundId[_45542]
                                            mem[32] = sha3(_45542, 53)
                                            _60206 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60206] = stor53[_45542][stor52[_45542]].field_0
                                            mem[_60206 + 32] = stor53[_45542][stor52[_45542]].field_216
                                            if block.timestamp >= stor53[_45542][stor52[_45542]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61230 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45542
                                                mem[32] = 52
                                                currentRoundId[_45542]++
                                                _61599 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61599] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61599 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45542] + 1
                                                mem[32] = sha3(_45542, 53)
                                                stor53[_45542][stor52[_45542] + 1].field_0 = Mask(216, 0, _61230)
                                                stor53[_45542][stor52[_45542] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59710 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59710] = 0
                                            mem[_59710 + 32] = 0
                                            mem[_59710 + 64] = 0
                                            _59912 = mem[64]
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45542].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45542].length:
                                                mem[s + mem[64] + 100] = mem[_46187 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45542].length) <= bandCurrencyKeys[_45542].length:
                                                mem[_59912 + 36] = ceil32(bandCurrencyKeys[_45542].length) + 96
                                                _71503 = mem[_46185]
                                                mem[ceil32(bandCurrencyKeys[_45542].length) + _59912 + 100] = mem[_46185]
                                                s = 0
                                                while s < _71503:
                                                    mem[s + ceil32(bandCurrencyKeys[_45542].length) + _59912 + 132] = mem[_46185 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71503) <= _71503:
                                                    require ext_code.size(bandOracleMap[_45542])
                                                    staticcall bandOracleMap[_45542].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71503) + ceil32(bandCurrencyKeys[_45542].length) + _59912 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81804 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81988 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81988] = mem[_81804]
                                                    mem[_81988 + 32] = mem[_81804 + 32]
                                                    mem[_81988 + 64] = mem[_81804 + 64]
                                                    _82758 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82758] = mem[_81988 + 5 len 27]
                                                    mem[_82758 + 32] = mem[_81988 + 59 len 5]
                                                    if block.timestamp >= mem[_82758 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83614 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45542
                                                        mem[32] = 52
                                                        currentRoundId[_45542]++
                                                        _84109 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84109] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84109 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45542] + 1
                                                        mem[32] = sha3(_45542, 53)
                                                        stor53[_45542][stor52[_45542] + 1].field_0 = Mask(216, 0, _83614)
                                                        stor53[_45542][stor52[_45542] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45542].length) + _59912 + _71503 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45542])
                                                    staticcall bandOracleMap[_45542].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71503) + ceil32(bandCurrencyKeys[_45542].length) + _59912 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81896 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82080 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82080] = mem[_81896]
                                                    mem[_82080 + 32] = mem[_81896 + 32]
                                                    mem[_82080 + 64] = mem[_81896 + 64]
                                                    _83124 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83124] = mem[_82080 + 5 len 27]
                                                    mem[_83124 + 32] = mem[_82080 + 59 len 5]
                                                    if block.timestamp >= mem[_83124 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84114 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45542
                                                        mem[32] = 52
                                                        currentRoundId[_45542]++
                                                        _84691 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84691] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84691 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45542] + 1
                                                        mem[32] = sha3(_45542, 53)
                                                        stor53[_45542][stor52[_45542] + 1].field_0 = Mask(216, 0, _84114)
                                                        stor53[_45542][stor52[_45542] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[_59912 + bandCurrencyKeys[_45542].length + 100] = 0
                                                mem[_59912 + 36] = ceil32(bandCurrencyKeys[_45542].length) + 96
                                                _71733 = mem[_46185]
                                                mem[ceil32(bandCurrencyKeys[_45542].length) + _59912 + 100] = mem[_46185]
                                                s = 0
                                                while s < _71733:
                                                    mem[s + ceil32(bandCurrencyKeys[_45542].length) + _59912 + 132] = mem[_46185 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71733) <= _71733:
                                                    require ext_code.size(bandOracleMap[_45542])
                                                    staticcall bandOracleMap[_45542].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71733) + ceil32(bandCurrencyKeys[_45542].length) + _59912 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81805 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81989 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81989] = mem[_81805]
                                                    mem[_81989 + 32] = mem[_81805 + 32]
                                                    mem[_81989 + 64] = mem[_81805 + 64]
                                                    _82764 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82764] = mem[_81989 + 5 len 27]
                                                    mem[_82764 + 32] = mem[_81989 + 59 len 5]
                                                    if block.timestamp >= mem[_82764 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83616 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45542
                                                        mem[32] = 52
                                                        currentRoundId[_45542]++
                                                        _84116 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84116] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84116 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45542] + 1
                                                        mem[32] = sha3(_45542, 53)
                                                        stor53[_45542][stor52[_45542] + 1].field_0 = Mask(216, 0, _83616)
                                                        stor53[_45542][stor52[_45542] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45542].length) + _59912 + _71733 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45542])
                                                    staticcall bandOracleMap[_45542].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71733) + ceil32(bandCurrencyKeys[_45542].length) + _59912 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81897 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82081 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82081] = mem[_81897]
                                                    mem[_82081 + 32] = mem[_81897 + 32]
                                                    mem[_82081 + 64] = mem[_81897 + 64]
                                                    _83127 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83127] = mem[_82081 + 5 len 27]
                                                    mem[_83127 + 32] = mem[_82081 + 59 len 5]
                                                    if block.timestamp >= mem[_83127 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84121 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45542
                                                        mem[32] = 52
                                                        currentRoundId[_45542]++
                                                        _84697 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84697] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84697 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45542] + 1
                                                        mem[32] = sha3(_45542, 53)
                                                        stor53[_45542][stor52[_45542] + 1].field_0 = Mask(216, 0, _84121)
                                                        stor53[_45542][stor52[_45542] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45418 = mem[64]
                                    mem[mem[64]] = 64
                                    _45541 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var85001 = mem[96]
                                    var85002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59510 = mem[(32 * arg3.length) + 128]
                                    mem[_45418 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45418 + (32 * _45541) + 128 len 32 * _59510] = mem[(32 * arg3.length) + 160 len 32 * _59510]
                                    var92001 = _59510
                                    emit 0x50f45835: mem[mem[64] len _45418 + (32 * _45541) + (32 * _59510) + -mem[64] + 128]
                        else:
                            if uint8(stor0.field_0):
                                revert with 0, 'Initializable: contract is already initialized'
                            if uint8(stor0.field_8):
                                if not arg1:
                                    revert with 0, 'LnAdminUpgradeable: zero address'
                                adminAddress = arg1
                                mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                                emit AdminChanged(0, arg1);
                                if uint8(stor0.field_8):
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45545 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45926 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45926] = 0
                                        mem[_45926 + 32] = 0
                                        _46078 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46078] = 0
                                        mem[_46078 + 32] = 0
                                        _46188 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46188] = 3
                                        mem[_46188 + 32] = 'USD'
                                        mem[0] = _45545
                                        mem[32] = 102
                                        _46190 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45545].length) + 32
                                        mem[_46190] = bandCurrencyKeys[_45545].length
                                        mem[_46190 + 32] = bandCurrencyKeys[_45545].field_0
                                        s = _46190 + 32
                                        t = sha3(sha3(_45545, 102))
                                        while _46190 + bandCurrencyKeys[_45545].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45545
                                        mem[32] = 100
                                        if not bandOracleMap[_45545]:
                                            _59916 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59916] = 0
                                            mem[_59916 + 32] = 0
                                            mem[0] = currentRoundId[_45545]
                                            mem[32] = sha3(_45545, 53)
                                            _60213 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60213] = stor53[_45545][stor52[_45545]].field_0
                                            mem[_60213 + 32] = stor53[_45545][stor52[_45545]].field_216
                                            if block.timestamp >= stor53[_45545][stor52[_45545]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61236 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45545
                                                mem[32] = 52
                                                currentRoundId[_45545]++
                                                _61608 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61608] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61608 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45545] + 1
                                                mem[32] = sha3(_45545, 53)
                                                stor53[_45545][stor52[_45545] + 1].field_0 = Mask(216, 0, _61236)
                                                stor53[_45545][stor52[_45545] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59713 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59713] = 0
                                            mem[_59713 + 32] = 0
                                            mem[_59713 + 64] = 0
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45545].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45545].length:
                                                mem[s + mem[64] + 100] = mem[_46190 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45545].length) <= bandCurrencyKeys[_45545].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45545].length) + 96
                                                _71508 = mem[_46188]
                                                mem[ceil32(bandCurrencyKeys[_45545].length) + mem[64] + 100] = mem[_46188]
                                                s = 0
                                                while s < _71508:
                                                    mem[s + ceil32(bandCurrencyKeys[_45545].length) + mem[64] + 132] = mem[_46188 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71508) <= _71508:
                                                    require ext_code.size(bandOracleMap[_45545])
                                                    staticcall bandOracleMap[_45545].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45545].length, data=mem[mem[64] + 100 len ceil32(_71508) + ceil32(bandCurrencyKeys[_45545].length) + 32]), ceil32(bandCurrencyKeys[_45545].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81806 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81990 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81990] = mem[_81806]
                                                    mem[_81990 + 32] = mem[_81806 + 32]
                                                    mem[_81990 + 64] = mem[_81806 + 64]
                                                    _82770 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82770] = mem[_81990 + 5 len 27]
                                                    mem[_82770 + 32] = mem[_81990 + 59 len 5]
                                                    if block.timestamp >= mem[_82770 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83618 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45545
                                                        mem[32] = 52
                                                        currentRoundId[_45545]++
                                                        _84123 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84123] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84123 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45545] + 1
                                                        mem[32] = sha3(_45545, 53)
                                                        stor53[_45545][stor52[_45545] + 1].field_0 = Mask(216, 0, _83618)
                                                        stor53[_45545][stor52[_45545] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45545].length) + mem[64] + _71508 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45545])
                                                    staticcall bandOracleMap[_45545].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45545].length, data=mem[mem[64] + 100 len ceil32(_71508) + ceil32(bandCurrencyKeys[_45545].length) + 32]), ceil32(bandCurrencyKeys[_45545].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81898 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82082 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82082] = mem[_81898]
                                                    mem[_82082 + 32] = mem[_81898 + 32]
                                                    mem[_82082 + 64] = mem[_81898 + 64]
                                                    _83130 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83130] = mem[_82082 + 5 len 27]
                                                    mem[_83130 + 32] = mem[_82082 + 59 len 5]
                                                    if block.timestamp >= mem[_83130 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84128 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45545
                                                        mem[32] = 52
                                                        currentRoundId[_45545]++
                                                        _84703 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84703] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84703 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45545] + 1
                                                        mem[32] = sha3(_45545, 53)
                                                        stor53[_45545][stor52[_45545] + 1].field_0 = Mask(216, 0, _84128)
                                                        stor53[_45545][stor52[_45545] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45545].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45545].length) + 96
                                                _71738 = mem[_46188]
                                                mem[ceil32(bandCurrencyKeys[_45545].length) + mem[64] + 100] = mem[_46188]
                                                s = 0
                                                while s < _71738:
                                                    mem[s + ceil32(bandCurrencyKeys[_45545].length) + mem[64] + 132] = mem[_46188 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71738) <= _71738:
                                                    require ext_code.size(bandOracleMap[_45545])
                                                    staticcall bandOracleMap[_45545].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45545].length, data=mem[mem[64] + 100 len ceil32(_71738) + ceil32(bandCurrencyKeys[_45545].length) + 32]), ceil32(bandCurrencyKeys[_45545].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81807 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81991 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81991] = mem[_81807]
                                                    mem[_81991 + 32] = mem[_81807 + 32]
                                                    mem[_81991 + 64] = mem[_81807 + 64]
                                                    _82776 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82776] = mem[_81991 + 5 len 27]
                                                    mem[_82776 + 32] = mem[_81991 + 59 len 5]
                                                    if block.timestamp >= mem[_82776 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83620 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45545
                                                        mem[32] = 52
                                                        currentRoundId[_45545]++
                                                        _84130 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84130] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84130 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45545] + 1
                                                        mem[32] = sha3(_45545, 53)
                                                        stor53[_45545][stor52[_45545] + 1].field_0 = Mask(216, 0, _83620)
                                                        stor53[_45545][stor52[_45545] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45545].length) + mem[64] + _71738 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45545])
                                                    staticcall bandOracleMap[_45545].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45545].length, data=mem[mem[64] + 100 len ceil32(_71738) + ceil32(bandCurrencyKeys[_45545].length) + 32]), ceil32(bandCurrencyKeys[_45545].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81899 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82083 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82083] = mem[_81899]
                                                    mem[_82083 + 32] = mem[_81899 + 32]
                                                    mem[_82083 + 64] = mem[_81899 + 64]
                                                    _83133 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83133] = mem[_82083 + 5 len 27]
                                                    mem[_83133 + 32] = mem[_82083 + 59 len 5]
                                                    if block.timestamp >= mem[_83133 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84135 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45545
                                                        mem[32] = 52
                                                        currentRoundId[_45545]++
                                                        _84709 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84709] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84709 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45545] + 1
                                                        mem[32] = sha3(_45545, 53)
                                                        stor53[_45545][stor52[_45545] + 1].field_0 = Mask(216, 0, _84135)
                                                        stor53[_45545][stor52[_45545] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45420 = mem[64]
                                    mem[mem[64]] = 64
                                    _45544 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var84001 = mem[96]
                                    var84002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59514 = mem[(32 * arg3.length) + 128]
                                    mem[_45420 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45420 + (32 * _45544) + 128 len 32 * _59514] = mem[(32 * arg3.length) + 160 len 32 * _59514]
                                    var91001 = _59514
                                    emit 0x50f45835: mem[mem[64] len _45420 + (32 * _45544) + (32 * _59514) + -mem[64] + 128]
                                else:
                                    uint8(stor0.field_8) = 0
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45548 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45928 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45928] = 0
                                        mem[_45928 + 32] = 0
                                        _46079 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46079] = 0
                                        mem[_46079 + 32] = 0
                                        _46191 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46191] = 3
                                        mem[_46191 + 32] = 'USD'
                                        mem[0] = _45548
                                        mem[32] = 102
                                        _46193 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45548].length) + 32
                                        mem[_46193] = bandCurrencyKeys[_45548].length
                                        mem[_46193 + 32] = bandCurrencyKeys[_45548].field_0
                                        s = _46193 + 32
                                        t = sha3(sha3(_45548, 102))
                                        while _46193 + bandCurrencyKeys[_45548].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45548
                                        mem[32] = 100
                                        if not bandOracleMap[_45548]:
                                            _59921 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59921] = 0
                                            mem[_59921 + 32] = 0
                                            mem[0] = currentRoundId[_45548]
                                            mem[32] = sha3(_45548, 53)
                                            _60220 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60220] = stor53[_45548][stor52[_45548]].field_0
                                            mem[_60220 + 32] = stor53[_45548][stor52[_45548]].field_216
                                            if block.timestamp >= stor53[_45548][stor52[_45548]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61242 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45548
                                                mem[32] = 52
                                                currentRoundId[_45548]++
                                                _61617 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61617] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61617 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45548] + 1
                                                mem[32] = sha3(_45548, 53)
                                                stor53[_45548][stor52[_45548] + 1].field_0 = Mask(216, 0, _61242)
                                                stor53[_45548][stor52[_45548] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59716 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59716] = 0
                                            mem[_59716 + 32] = 0
                                            mem[_59716 + 64] = 0
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45548].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45548].length:
                                                mem[s + mem[64] + 100] = mem[_46193 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45548].length) <= bandCurrencyKeys[_45548].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45548].length) + 96
                                                _71513 = mem[_46191]
                                                mem[ceil32(bandCurrencyKeys[_45548].length) + mem[64] + 100] = mem[_46191]
                                                s = 0
                                                while s < _71513:
                                                    mem[s + ceil32(bandCurrencyKeys[_45548].length) + mem[64] + 132] = mem[_46191 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71513) <= _71513:
                                                    require ext_code.size(bandOracleMap[_45548])
                                                    staticcall bandOracleMap[_45548].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45548].length, data=mem[mem[64] + 100 len ceil32(_71513) + ceil32(bandCurrencyKeys[_45548].length) + 32]), ceil32(bandCurrencyKeys[_45548].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81808 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81992 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81992] = mem[_81808]
                                                    mem[_81992 + 32] = mem[_81808 + 32]
                                                    mem[_81992 + 64] = mem[_81808 + 64]
                                                    _82782 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82782] = mem[_81992 + 5 len 27]
                                                    mem[_82782 + 32] = mem[_81992 + 59 len 5]
                                                    if block.timestamp >= mem[_82782 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83622 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45548
                                                        mem[32] = 52
                                                        currentRoundId[_45548]++
                                                        _84137 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84137] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84137 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45548] + 1
                                                        mem[32] = sha3(_45548, 53)
                                                        stor53[_45548][stor52[_45548] + 1].field_0 = Mask(216, 0, _83622)
                                                        stor53[_45548][stor52[_45548] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45548].length) + mem[64] + _71513 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45548])
                                                    staticcall bandOracleMap[_45548].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45548].length, data=mem[mem[64] + 100 len ceil32(_71513) + ceil32(bandCurrencyKeys[_45548].length) + 32]), ceil32(bandCurrencyKeys[_45548].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81900 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82084 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82084] = mem[_81900]
                                                    mem[_82084 + 32] = mem[_81900 + 32]
                                                    mem[_82084 + 64] = mem[_81900 + 64]
                                                    _83136 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83136] = mem[_82084 + 5 len 27]
                                                    mem[_83136 + 32] = mem[_82084 + 59 len 5]
                                                    if block.timestamp >= mem[_83136 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84142 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45548
                                                        mem[32] = 52
                                                        currentRoundId[_45548]++
                                                        _84715 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84715] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84715 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45548] + 1
                                                        mem[32] = sha3(_45548, 53)
                                                        stor53[_45548][stor52[_45548] + 1].field_0 = Mask(216, 0, _84142)
                                                        stor53[_45548][stor52[_45548] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45548].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45548].length) + 96
                                                _71743 = mem[_46191]
                                                mem[ceil32(bandCurrencyKeys[_45548].length) + mem[64] + 100] = mem[_46191]
                                                s = 0
                                                while s < _71743:
                                                    mem[s + ceil32(bandCurrencyKeys[_45548].length) + mem[64] + 132] = mem[_46191 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71743) <= _71743:
                                                    require ext_code.size(bandOracleMap[_45548])
                                                    staticcall bandOracleMap[_45548].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45548].length, data=mem[mem[64] + 100 len ceil32(_71743) + ceil32(bandCurrencyKeys[_45548].length) + 32]), ceil32(bandCurrencyKeys[_45548].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81809 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81993 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81993] = mem[_81809]
                                                    mem[_81993 + 32] = mem[_81809 + 32]
                                                    mem[_81993 + 64] = mem[_81809 + 64]
                                                    _82788 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82788] = mem[_81993 + 5 len 27]
                                                    mem[_82788 + 32] = mem[_81993 + 59 len 5]
                                                    if block.timestamp >= mem[_82788 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83624 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45548
                                                        mem[32] = 52
                                                        currentRoundId[_45548]++
                                                        _84144 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84144] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84144 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45548] + 1
                                                        mem[32] = sha3(_45548, 53)
                                                        stor53[_45548][stor52[_45548] + 1].field_0 = Mask(216, 0, _83624)
                                                        stor53[_45548][stor52[_45548] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45548].length) + mem[64] + _71743 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45548])
                                                    staticcall bandOracleMap[_45548].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45548].length, data=mem[mem[64] + 100 len ceil32(_71743) + ceil32(bandCurrencyKeys[_45548].length) + 32]), ceil32(bandCurrencyKeys[_45548].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81901 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82085 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82085] = mem[_81901]
                                                    mem[_82085 + 32] = mem[_81901 + 32]
                                                    mem[_82085 + 64] = mem[_81901 + 64]
                                                    _83139 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83139] = mem[_82085 + 5 len 27]
                                                    mem[_83139 + 32] = mem[_82085 + 59 len 5]
                                                    if block.timestamp >= mem[_83139 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84149 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45548
                                                        mem[32] = 52
                                                        currentRoundId[_45548]++
                                                        _84721 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84721] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84721 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45548] + 1
                                                        mem[32] = sha3(_45548, 53)
                                                        stor53[_45548][stor52[_45548] + 1].field_0 = Mask(216, 0, _84149)
                                                        stor53[_45548][stor52[_45548] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45422 = mem[64]
                                    mem[mem[64]] = 64
                                    _45547 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var85001 = mem[96]
                                    var85002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59518 = mem[(32 * arg3.length) + 128]
                                    mem[_45422 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45422 + (32 * _45547) + 128 len 32 * _59518] = mem[(32 * arg3.length) + 160 len 32 * _59518]
                                    var92001 = _59518
                                    emit 0x50f45835: mem[mem[64] len _45422 + (32 * _45547) + (32 * _59518) + -mem[64] + 128]
                            else:
                                uint8(stor0.field_0) = 1
                                uint8(stor0.field_8) = 1
                                Mask(248, 0, stor0.field_8) = 0
                                if not arg1:
                                    revert with 0, 'LnAdminUpgradeable: zero address'
                                adminAddress = arg1
                                mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                                emit AdminChanged(0, arg1);
                                if uint8(stor0.field_8):
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45551 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45930 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45930] = 0
                                        mem[_45930 + 32] = 0
                                        _46080 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46080] = 0
                                        mem[_46080 + 32] = 0
                                        _46194 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46194] = 3
                                        mem[_46194 + 32] = 'USD'
                                        mem[0] = _45551
                                        mem[32] = 102
                                        _46196 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45551].length) + 32
                                        mem[_46196] = bandCurrencyKeys[_45551].length
                                        mem[_46196 + 32] = bandCurrencyKeys[_45551].field_0
                                        s = _46196 + 32
                                        t = sha3(sha3(_45551, 102))
                                        while _46196 + bandCurrencyKeys[_45551].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45551
                                        mem[32] = 100
                                        if not bandOracleMap[_45551]:
                                            _59926 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59926] = 0
                                            mem[_59926 + 32] = 0
                                            mem[0] = currentRoundId[_45551]
                                            mem[32] = sha3(_45551, 53)
                                            _60227 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60227] = stor53[_45551][stor52[_45551]].field_0
                                            mem[_60227 + 32] = stor53[_45551][stor52[_45551]].field_216
                                            if block.timestamp >= stor53[_45551][stor52[_45551]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61248 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45551
                                                mem[32] = 52
                                                currentRoundId[_45551]++
                                                _61626 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61626] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61626 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45551] + 1
                                                mem[32] = sha3(_45551, 53)
                                                stor53[_45551][stor52[_45551] + 1].field_0 = Mask(216, 0, _61248)
                                                stor53[_45551][stor52[_45551] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59719 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59719] = 0
                                            mem[_59719 + 32] = 0
                                            mem[_59719 + 64] = 0
                                            _59927 = mem[64]
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45551].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45551].length:
                                                mem[s + mem[64] + 100] = mem[_46196 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45551].length) <= bandCurrencyKeys[_45551].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45551].length) + 96
                                                _71518 = mem[_46194]
                                                mem[ceil32(bandCurrencyKeys[_45551].length) + mem[64] + 100] = mem[_46194]
                                                s = 0
                                                while s < _71518:
                                                    mem[s + ceil32(bandCurrencyKeys[_45551].length) + mem[64] + 132] = mem[_46194 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71518) <= _71518:
                                                    require ext_code.size(bandOracleMap[_45551])
                                                    staticcall bandOracleMap[_45551].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71518) + ceil32(bandCurrencyKeys[_45551].length) + _59927 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81810 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81994 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81994] = mem[_81810]
                                                    mem[_81994 + 32] = mem[_81810 + 32]
                                                    mem[_81994 + 64] = mem[_81810 + 64]
                                                    _82794 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82794] = mem[_81994 + 5 len 27]
                                                    mem[_82794 + 32] = mem[_81994 + 59 len 5]
                                                    if block.timestamp >= mem[_82794 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83626 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45551
                                                        mem[32] = 52
                                                        currentRoundId[_45551]++
                                                        _84151 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84151] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84151 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45551] + 1
                                                        mem[32] = sha3(_45551, 53)
                                                        stor53[_45551][stor52[_45551] + 1].field_0 = Mask(216, 0, _83626)
                                                        stor53[_45551][stor52[_45551] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45551].length) + _59927 + _71518 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45551])
                                                    staticcall bandOracleMap[_45551].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71518) + ceil32(bandCurrencyKeys[_45551].length) + _59927 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81902 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82086 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82086] = mem[_81902]
                                                    mem[_82086 + 32] = mem[_81902 + 32]
                                                    mem[_82086 + 64] = mem[_81902 + 64]
                                                    _83142 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83142] = mem[_82086 + 5 len 27]
                                                    mem[_83142 + 32] = mem[_82086 + 59 len 5]
                                                    if block.timestamp >= mem[_83142 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84156 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45551
                                                        mem[32] = 52
                                                        currentRoundId[_45551]++
                                                        _84727 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84727] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84727 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45551] + 1
                                                        mem[32] = sha3(_45551, 53)
                                                        stor53[_45551][stor52[_45551] + 1].field_0 = Mask(216, 0, _84156)
                                                        stor53[_45551][stor52[_45551] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45551].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45551].length) + 96
                                                _71748 = mem[_46194]
                                                mem[ceil32(bandCurrencyKeys[_45551].length) + mem[64] + 100] = mem[_46194]
                                                s = 0
                                                while s < _71748:
                                                    mem[s + ceil32(bandCurrencyKeys[_45551].length) + mem[64] + 132] = mem[_46194 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71748) <= _71748:
                                                    require ext_code.size(bandOracleMap[_45551])
                                                    staticcall bandOracleMap[_45551].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45551].length, data=mem[mem[64] + 100 len ceil32(_71748) + ceil32(bandCurrencyKeys[_45551].length) + 32]), ceil32(bandCurrencyKeys[_45551].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81811 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81995 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81995] = mem[_81811]
                                                    mem[_81995 + 32] = mem[_81811 + 32]
                                                    mem[_81995 + 64] = mem[_81811 + 64]
                                                    _82800 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82800] = mem[_81995 + 5 len 27]
                                                    mem[_82800 + 32] = mem[_81995 + 59 len 5]
                                                    if block.timestamp >= mem[_82800 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83628 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45551
                                                        mem[32] = 52
                                                        currentRoundId[_45551]++
                                                        _84158 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84158] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84158 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45551] + 1
                                                        mem[32] = sha3(_45551, 53)
                                                        stor53[_45551][stor52[_45551] + 1].field_0 = Mask(216, 0, _83628)
                                                        stor53[_45551][stor52[_45551] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45551].length) + mem[64] + _71748 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45551])
                                                    staticcall bandOracleMap[_45551].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45551].length, data=mem[mem[64] + 100 len ceil32(_71748) + ceil32(bandCurrencyKeys[_45551].length) + 32]), ceil32(bandCurrencyKeys[_45551].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81903 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82087 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82087] = mem[_81903]
                                                    mem[_82087 + 32] = mem[_81903 + 32]
                                                    mem[_82087 + 64] = mem[_81903 + 64]
                                                    _83145 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83145] = mem[_82087 + 5 len 27]
                                                    mem[_83145 + 32] = mem[_82087 + 59 len 5]
                                                    if block.timestamp >= mem[_83145 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84163 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45551
                                                        mem[32] = 52
                                                        currentRoundId[_45551]++
                                                        _84733 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84733] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84733 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45551] + 1
                                                        mem[32] = sha3(_45551, 53)
                                                        stor53[_45551][stor52[_45551] + 1].field_0 = Mask(216, 0, _84163)
                                                        stor53[_45551][stor52[_45551] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45424 = mem[64]
                                    mem[mem[64]] = 64
                                    _45550 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var85001 = mem[96]
                                    var85002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59522 = mem[(32 * arg3.length) + 128]
                                    mem[_45424 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45424 + (32 * _45550) + 128 len 32 * _59522] = mem[(32 * arg3.length) + 160 len 32 * _59522]
                                    var92001 = _59522
                                    emit 0x50f45835: mem[mem[64] len _45424 + (32 * _45550) + (32 * _59522) + -mem[64] + 128]
                                else:
                                    uint8(stor0.field_8) = 0
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45554 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45932 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45932] = 0
                                        mem[_45932 + 32] = 0
                                        _46081 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46081] = 0
                                        mem[_46081 + 32] = 0
                                        _46197 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46197] = 3
                                        mem[_46197 + 32] = 'USD'
                                        mem[0] = _45554
                                        mem[32] = 102
                                        _46199 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45554].length) + 32
                                        mem[_46199] = bandCurrencyKeys[_45554].length
                                        mem[_46199 + 32] = bandCurrencyKeys[_45554].field_0
                                        s = _46199 + 32
                                        t = sha3(sha3(_45554, 102))
                                        while _46199 + bandCurrencyKeys[_45554].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45554
                                        mem[32] = 100
                                        if not bandOracleMap[_45554]:
                                            _59931 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59931] = 0
                                            mem[_59931 + 32] = 0
                                            mem[0] = currentRoundId[_45554]
                                            mem[32] = sha3(_45554, 53)
                                            _60234 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60234] = stor53[_45554][stor52[_45554]].field_0
                                            mem[_60234 + 32] = stor53[_45554][stor52[_45554]].field_216
                                            if block.timestamp >= stor53[_45554][stor52[_45554]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61254 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45554
                                                mem[32] = 52
                                                currentRoundId[_45554]++
                                                _61635 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61635] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61635 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45554] + 1
                                                mem[32] = sha3(_45554, 53)
                                                stor53[_45554][stor52[_45554] + 1].field_0 = Mask(216, 0, _61254)
                                                stor53[_45554][stor52[_45554] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59722 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59722] = 0
                                            mem[_59722 + 32] = 0
                                            mem[_59722 + 64] = 0
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45554].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45554].length:
                                                mem[s + mem[64] + 100] = mem[_46199 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45554].length) <= bandCurrencyKeys[_45554].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45554].length) + 96
                                                _71523 = mem[_46197]
                                                mem[ceil32(bandCurrencyKeys[_45554].length) + mem[64] + 100] = mem[_46197]
                                                s = 0
                                                while s < _71523:
                                                    mem[s + ceil32(bandCurrencyKeys[_45554].length) + mem[64] + 132] = mem[_46197 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71523) <= _71523:
                                                    require ext_code.size(bandOracleMap[_45554])
                                                    staticcall bandOracleMap[_45554].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45554].length, data=mem[mem[64] + 100 len ceil32(_71523) + ceil32(bandCurrencyKeys[_45554].length) + 32]), ceil32(bandCurrencyKeys[_45554].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81812 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81996 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81996] = mem[_81812]
                                                    mem[_81996 + 32] = mem[_81812 + 32]
                                                    mem[_81996 + 64] = mem[_81812 + 64]
                                                    _82806 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82806] = mem[_81996 + 5 len 27]
                                                    mem[_82806 + 32] = mem[_81996 + 59 len 5]
                                                    if block.timestamp >= mem[_82806 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83630 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45554
                                                        mem[32] = 52
                                                        currentRoundId[_45554]++
                                                        _84165 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84165] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84165 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45554] + 1
                                                        mem[32] = sha3(_45554, 53)
                                                        stor53[_45554][stor52[_45554] + 1].field_0 = Mask(216, 0, _83630)
                                                        stor53[_45554][stor52[_45554] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45554].length) + mem[64] + _71523 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45554])
                                                    staticcall bandOracleMap[_45554].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45554].length, data=mem[mem[64] + 100 len ceil32(_71523) + ceil32(bandCurrencyKeys[_45554].length) + 32]), ceil32(bandCurrencyKeys[_45554].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81904 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82088 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82088] = mem[_81904]
                                                    mem[_82088 + 32] = mem[_81904 + 32]
                                                    mem[_82088 + 64] = mem[_81904 + 64]
                                                    _83148 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83148] = mem[_82088 + 5 len 27]
                                                    mem[_83148 + 32] = mem[_82088 + 59 len 5]
                                                    if block.timestamp >= mem[_83148 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84170 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45554
                                                        mem[32] = 52
                                                        currentRoundId[_45554]++
                                                        _84739 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84739] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84739 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45554] + 1
                                                        mem[32] = sha3(_45554, 53)
                                                        stor53[_45554][stor52[_45554] + 1].field_0 = Mask(216, 0, _84170)
                                                        stor53[_45554][stor52[_45554] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45554].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45554].length) + 96
                                                _71753 = mem[_46197]
                                                mem[ceil32(bandCurrencyKeys[_45554].length) + mem[64] + 100] = mem[_46197]
                                                s = 0
                                                while s < _71753:
                                                    mem[s + ceil32(bandCurrencyKeys[_45554].length) + mem[64] + 132] = mem[_46197 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71753) <= _71753:
                                                    require ext_code.size(bandOracleMap[_45554])
                                                    staticcall bandOracleMap[_45554].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45554].length, data=mem[mem[64] + 100 len ceil32(_71753) + ceil32(bandCurrencyKeys[_45554].length) + 32]), ceil32(bandCurrencyKeys[_45554].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81813 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _81997 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_81997] = mem[_81813]
                                                    mem[_81997 + 32] = mem[_81813 + 32]
                                                    mem[_81997 + 64] = mem[_81813 + 64]
                                                    _82812 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82812] = mem[_81997 + 5 len 27]
                                                    mem[_82812 + 32] = mem[_81997 + 59 len 5]
                                                    if block.timestamp >= mem[_82812 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83632 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45554
                                                        mem[32] = 52
                                                        currentRoundId[_45554]++
                                                        _84172 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84172] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84172 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45554] + 1
                                                        mem[32] = sha3(_45554, 53)
                                                        stor53[_45554][stor52[_45554] + 1].field_0 = Mask(216, 0, _83632)
                                                        stor53[_45554][stor52[_45554] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45554].length) + mem[64] + _71753 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45554])
                                                    staticcall bandOracleMap[_45554].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45554].length, data=mem[mem[64] + 100 len ceil32(_71753) + ceil32(bandCurrencyKeys[_45554].length) + 32]), ceil32(bandCurrencyKeys[_45554].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81905 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82089 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82089] = mem[_81905]
                                                    mem[_82089 + 32] = mem[_81905 + 32]
                                                    mem[_82089 + 64] = mem[_81905 + 64]
                                                    _83151 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83151] = mem[_82089 + 5 len 27]
                                                    mem[_83151 + 32] = mem[_82089 + 59 len 5]
                                                    if block.timestamp >= mem[_83151 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84177 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45554
                                                        mem[32] = 52
                                                        currentRoundId[_45554]++
                                                        _84745 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84745] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84745 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45554] + 1
                                                        mem[32] = sha3(_45554, 53)
                                                        stor53[_45554][stor52[_45554] + 1].field_0 = Mask(216, 0, _84177)
                                                        stor53[_45554][stor52[_45554] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45426 = mem[64]
                                    mem[mem[64]] = 64
                                    _45553 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var86001 = mem[96]
                                    var86002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59526 = mem[(32 * arg3.length) + 128]
                                    mem[_45426 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45426 + (32 * _45553) + 128 len 32 * _59526] = mem[(32 * arg3.length) + 160 len 32 * _59526]
                                    var93001 = _59526
                                    emit 0x50f45835: mem[mem[64] len _45426 + (32 * _45553) + (32 * _59526) + -mem[64] + 128]
                else:
                    if uint8(stor0.field_0):
                        revert with 0, 'Initializable: contract is already initialized'
                    if uint8(stor0.field_8):
                        if not arg1:
                            revert with 0, 'LnAdminUpgradeable: zero address'
                        adminAddress = arg1
                        mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                        emit AdminChanged(0, arg1);
                        if uint8(stor0.field_8):
                            stalePeriod = 12 * 3600
                            if arg3.length != arg4.length:
                                revert with 0, 'array length error.'
                            oracleAddress = arg2
                            require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                            delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                 gas gas_remaining wei
                                args 
                            mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                            if not delegate.return_code:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            currentRoundId['lUSD']++
                            mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                            mem[0] = currentRoundId['lUSD'] + 1
                            mem[32] = sha3('lUSD', 53)
                            stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                            stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                            if arg3.length != arg4.length:
                                revert with 0, 'array length error, not match.'
                            if block.timestamp >= block.timestamp + 600:
                                revert with 0, 'Time error'
                            idx = 0
                            while idx < arg3.length:
                                require idx < mem[96]
                                _45557 = mem[(32 * idx) + 128]
                                require idx < mem[(32 * arg3.length) + 128]
                                if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                    revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                if mem[(32 * idx) + 128] == 'lUSD':
                                    revert with 0, 'LUSD cannot be updated.'
                                _45934 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_45934] = 0
                                mem[_45934 + 32] = 0
                                _46082 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_46082] = 0
                                mem[_46082 + 32] = 0
                                _46200 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_46200] = 3
                                mem[_46200 + 32] = 'USD'
                                mem[0] = _45557
                                mem[32] = 102
                                _46202 = mem[64]
                                mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45557].length) + 32
                                mem[_46202] = bandCurrencyKeys[_45557].length
                                mem[_46202 + 32] = bandCurrencyKeys[_45557].field_0
                                s = _46202 + 32
                                t = sha3(sha3(_45557, 102))
                                while _46202 + bandCurrencyKeys[_45557].length > s:
                                    mem[s + 32] = uint256(stor1[t])
                                    s = s + 32
                                    t = t + 1
                                    continue 
                                mem[0] = _45557
                                mem[32] = 100
                                if not bandOracleMap[_45557]:
                                    _59936 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_59936] = 0
                                    mem[_59936 + 32] = 0
                                    mem[0] = currentRoundId[_45557]
                                    mem[32] = sha3(_45557, 53)
                                    _60241 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_60241] = stor53[_45557][stor52[_45557]].field_0
                                    mem[_60241 + 32] = stor53[_45557][stor52[_45557]].field_216
                                    if block.timestamp >= stor53[_45557][stor52[_45557]].field_216:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _61260 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45557
                                        mem[32] = 52
                                        currentRoundId[_45557]++
                                        _61644 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_61644] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_61644 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45557] + 1
                                        mem[32] = sha3(_45557, 53)
                                        stor53[_45557][stor52[_45557] + 1].field_0 = Mask(216, 0, _61260)
                                        stor53[_45557][stor52[_45557] + 1].field_216 = block.timestamp % 1099511627776
                                else:
                                    _59725 = mem[64]
                                    mem[64] = mem[64] + 96
                                    mem[_59725] = 0
                                    mem[_59725 + 32] = 0
                                    mem[_59725 + 64] = 0
                                    _59937 = mem[64]
                                    mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 64
                                    mem[mem[64] + 68] = bandCurrencyKeys[_45557].length
                                    s = 0
                                    while s < bandCurrencyKeys[_45557].length:
                                        mem[s + mem[64] + 100] = mem[_46202 + s + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(bandCurrencyKeys[_45557].length) <= bandCurrencyKeys[_45557].length:
                                        mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45557].length) + 96
                                        _71528 = mem[_46200]
                                        mem[ceil32(bandCurrencyKeys[_45557].length) + _59937 + 100] = mem[_46200]
                                        s = 0
                                        while s < _71528:
                                            mem[s + ceil32(bandCurrencyKeys[_45557].length) + _59937 + 132] = mem[_46200 + s + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_71528) <= _71528:
                                            require ext_code.size(bandOracleMap[_45557])
                                            staticcall bandOracleMap[_45557].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71528) + ceil32(bandCurrencyKeys[_45557].length) + _59937 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81814 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _81998 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_81998] = mem[_81814]
                                            mem[_81998 + 32] = mem[_81814 + 32]
                                            mem[_81998 + 64] = mem[_81814 + 64]
                                            _82818 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82818] = mem[_81998 + 5 len 27]
                                            mem[_82818 + 32] = mem[_81998 + 59 len 5]
                                            if block.timestamp >= mem[_82818 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83634 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45557
                                                mem[32] = 52
                                                currentRoundId[_45557]++
                                                _84179 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84179] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84179 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45557] + 1
                                                mem[32] = sha3(_45557, 53)
                                                stor53[_45557][stor52[_45557] + 1].field_0 = Mask(216, 0, _83634)
                                                stor53[_45557][stor52[_45557] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            mem[ceil32(bandCurrencyKeys[_45557].length) + _59937 + _71528 + 132] = 0
                                            require ext_code.size(bandOracleMap[_45557])
                                            staticcall bandOracleMap[_45557].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71528) + ceil32(bandCurrencyKeys[_45557].length) + _59937 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81906 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _82090 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_82090] = mem[_81906]
                                            mem[_82090 + 32] = mem[_81906 + 32]
                                            mem[_82090 + 64] = mem[_81906 + 64]
                                            _83154 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_83154] = mem[_82090 + 5 len 27]
                                            mem[_83154 + 32] = mem[_82090 + 59 len 5]
                                            if block.timestamp >= mem[_83154 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _84184 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45557
                                                mem[32] = 52
                                                currentRoundId[_45557]++
                                                _84751 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84751] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84751 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45557] + 1
                                                mem[32] = sha3(_45557, 53)
                                                stor53[_45557][stor52[_45557] + 1].field_0 = Mask(216, 0, _84184)
                                                stor53[_45557][stor52[_45557] + 1].field_216 = block.timestamp % 1099511627776
                                    else:
                                        mem[mem[64] + bandCurrencyKeys[_45557].length + 100] = 0
                                        mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45557].length) + 96
                                        _71758 = mem[_46200]
                                        mem[ceil32(bandCurrencyKeys[_45557].length) + _59937 + 100] = mem[_46200]
                                        s = 0
                                        while s < _71758:
                                            mem[s + ceil32(bandCurrencyKeys[_45557].length) + _59937 + 132] = mem[_46200 + s + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_71758) <= _71758:
                                            require ext_code.size(bandOracleMap[_45557])
                                            staticcall bandOracleMap[_45557].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71758) + ceil32(bandCurrencyKeys[_45557].length) + _59937 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81815 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _81999 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_81999] = mem[_81815]
                                            mem[_81999 + 32] = mem[_81815 + 32]
                                            mem[_81999 + 64] = mem[_81815 + 64]
                                            _82824 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82824] = mem[_81999 + 5 len 27]
                                            mem[_82824 + 32] = mem[_81999 + 59 len 5]
                                            if block.timestamp >= mem[_82824 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83636 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45557
                                                mem[32] = 52
                                                currentRoundId[_45557]++
                                                _84186 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84186] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84186 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45557] + 1
                                                mem[32] = sha3(_45557, 53)
                                                stor53[_45557][stor52[_45557] + 1].field_0 = Mask(216, 0, _83636)
                                                stor53[_45557][stor52[_45557] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            mem[ceil32(bandCurrencyKeys[_45557].length) + _59937 + _71758 + 132] = 0
                                            require ext_code.size(bandOracleMap[_45557])
                                            staticcall bandOracleMap[_45557].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71758) + ceil32(bandCurrencyKeys[_45557].length) + _59937 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81907 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _82091 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_82091] = mem[_81907]
                                            mem[_82091 + 32] = mem[_81907 + 32]
                                            mem[_82091 + 64] = mem[_81907 + 64]
                                            _83157 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_83157] = mem[_82091 + 5 len 27]
                                            mem[_83157 + 32] = mem[_82091 + 59 len 5]
                                            if block.timestamp >= mem[_83157 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _84191 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45557
                                                mem[32] = 52
                                                currentRoundId[_45557]++
                                                _84757 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84757] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84757 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45557] + 1
                                                mem[32] = sha3(_45557, 53)
                                                stor53[_45557][stor52[_45557] + 1].field_0 = Mask(216, 0, _84191)
                                                stor53[_45557][stor52[_45557] + 1].field_216 = block.timestamp % 1099511627776
                                idx = idx + 1
                                continue 
                            _45428 = mem[64]
                            mem[mem[64]] = 64
                            _45556 = mem[96]
                            mem[mem[64] + 64] = mem[96]
                            mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                            mem[mem[64] + 32] = (32 * mem[96]) + 96
                            _59530 = mem[(32 * arg3.length) + 128]
                            mem[_45428 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                            mem[_45428 + (32 * _45556) + 128 len 32 * _59530] = mem[(32 * arg3.length) + 160 len 32 * _59530]
                            var88001 = _59530
                            emit 0x50f45835: mem[mem[64] len _45428 + (32 * _45556) + (32 * _59530) + -mem[64] + 128]
                        else:
                            uint8(stor0.field_8) = 0
                            stalePeriod = 12 * 3600
                            if arg3.length != arg4.length:
                                revert with 0, 'array length error.'
                            oracleAddress = arg2
                            require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                            delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                 gas gas_remaining wei
                                args 
                            mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                            if not delegate.return_code:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            currentRoundId['lUSD']++
                            mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                            mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                            mem[0] = currentRoundId['lUSD'] + 1
                            mem[32] = sha3('lUSD', 53)
                            stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                            stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                            if arg3.length != arg4.length:
                                revert with 0, 'array length error, not match.'
                            if block.timestamp >= block.timestamp + 600:
                                revert with 0, 'Time error'
                            idx = 0
                            while idx < arg3.length:
                                require idx < mem[96]
                                _45560 = mem[(32 * idx) + 128]
                                require idx < mem[(32 * arg3.length) + 128]
                                if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                    revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                if mem[(32 * idx) + 128] == 'lUSD':
                                    revert with 0, 'LUSD cannot be updated.'
                                _45936 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_45936] = 0
                                mem[_45936 + 32] = 0
                                _46083 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_46083] = 0
                                mem[_46083 + 32] = 0
                                _46203 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_46203] = 3
                                mem[_46203 + 32] = 'USD'
                                mem[0] = _45560
                                mem[32] = 102
                                _46205 = mem[64]
                                mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45560].length) + 32
                                mem[_46205] = bandCurrencyKeys[_45560].length
                                mem[_46205 + 32] = bandCurrencyKeys[_45560].field_0
                                s = _46205 + 32
                                t = sha3(sha3(_45560, 102))
                                while _46205 + bandCurrencyKeys[_45560].length > s:
                                    mem[s + 32] = uint256(stor1[t])
                                    s = s + 32
                                    t = t + 1
                                    continue 
                                mem[0] = _45560
                                mem[32] = 100
                                if not bandOracleMap[_45560]:
                                    _59941 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_59941] = 0
                                    mem[_59941 + 32] = 0
                                    mem[0] = currentRoundId[_45560]
                                    mem[32] = sha3(_45560, 53)
                                    _60248 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_60248] = stor53[_45560][stor52[_45560]].field_0
                                    mem[_60248 + 32] = stor53[_45560][stor52[_45560]].field_216
                                    if block.timestamp >= stor53[_45560][stor52[_45560]].field_216:
                                        require idx < mem[(32 * arg3.length) + 128]
                                        _61266 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                        mem[0] = _45560
                                        mem[32] = 52
                                        currentRoundId[_45560]++
                                        _61653 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_61653] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                        mem[_61653 + 32] = block.timestamp % 1099511627776
                                        mem[0] = currentRoundId[_45560] + 1
                                        mem[32] = sha3(_45560, 53)
                                        stor53[_45560][stor52[_45560] + 1].field_0 = Mask(216, 0, _61266)
                                        stor53[_45560][stor52[_45560] + 1].field_216 = block.timestamp % 1099511627776
                                else:
                                    _59728 = mem[64]
                                    mem[64] = mem[64] + 96
                                    mem[_59728] = 0
                                    mem[_59728 + 32] = 0
                                    mem[_59728 + 64] = 0
                                    _59942 = mem[64]
                                    mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 64
                                    mem[mem[64] + 68] = bandCurrencyKeys[_45560].length
                                    s = 0
                                    while s < bandCurrencyKeys[_45560].length:
                                        mem[s + mem[64] + 100] = mem[_46205 + s + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(bandCurrencyKeys[_45560].length) <= bandCurrencyKeys[_45560].length:
                                        mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45560].length) + 96
                                        _71533 = mem[_46203]
                                        mem[ceil32(bandCurrencyKeys[_45560].length) + _59942 + 100] = mem[_46203]
                                        s = 0
                                        while s < _71533:
                                            mem[s + ceil32(bandCurrencyKeys[_45560].length) + _59942 + 132] = mem[_46203 + s + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_71533) <= _71533:
                                            require ext_code.size(bandOracleMap[_45560])
                                            staticcall bandOracleMap[_45560].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71533) + ceil32(bandCurrencyKeys[_45560].length) + _59942 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81816 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _82000 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_82000] = mem[_81816]
                                            mem[_82000 + 32] = mem[_81816 + 32]
                                            mem[_82000 + 64] = mem[_81816 + 64]
                                            _82830 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82830] = mem[_82000 + 5 len 27]
                                            mem[_82830 + 32] = mem[_82000 + 59 len 5]
                                            if block.timestamp >= mem[_82830 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83638 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45560
                                                mem[32] = 52
                                                currentRoundId[_45560]++
                                                _84193 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84193] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84193 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45560] + 1
                                                mem[32] = sha3(_45560, 53)
                                                stor53[_45560][stor52[_45560] + 1].field_0 = Mask(216, 0, _83638)
                                                stor53[_45560][stor52[_45560] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            mem[ceil32(bandCurrencyKeys[_45560].length) + _59942 + _71533 + 132] = 0
                                            require ext_code.size(bandOracleMap[_45560])
                                            staticcall bandOracleMap[_45560].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71533) + ceil32(bandCurrencyKeys[_45560].length) + _59942 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81908 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _82092 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_82092] = mem[_81908]
                                            mem[_82092 + 32] = mem[_81908 + 32]
                                            mem[_82092 + 64] = mem[_81908 + 64]
                                            _83160 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_83160] = mem[_82092 + 5 len 27]
                                            mem[_83160 + 32] = mem[_82092 + 59 len 5]
                                            if block.timestamp >= mem[_83160 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _84198 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45560
                                                mem[32] = 52
                                                currentRoundId[_45560]++
                                                _84763 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84763] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84763 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45560] + 1
                                                mem[32] = sha3(_45560, 53)
                                                stor53[_45560][stor52[_45560] + 1].field_0 = Mask(216, 0, _84198)
                                                stor53[_45560][stor52[_45560] + 1].field_216 = block.timestamp % 1099511627776
                                    else:
                                        mem[mem[64] + bandCurrencyKeys[_45560].length + 100] = 0
                                        mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45560].length) + 96
                                        _71763 = mem[_46203]
                                        mem[ceil32(bandCurrencyKeys[_45560].length) + _59942 + 100] = mem[_46203]
                                        s = 0
                                        while s < _71763:
                                            mem[s + ceil32(bandCurrencyKeys[_45560].length) + _59942 + 132] = mem[_46203 + s + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(_71763) <= _71763:
                                            require ext_code.size(bandOracleMap[_45560])
                                            staticcall bandOracleMap[_45560].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71763) + ceil32(bandCurrencyKeys[_45560].length) + _59942 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81817 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _82001 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_82001] = mem[_81817]
                                            mem[_82001 + 32] = mem[_81817 + 32]
                                            mem[_82001 + 64] = mem[_81817 + 64]
                                            _82836 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_82836] = mem[_82001 + 5 len 27]
                                            mem[_82836 + 32] = mem[_82001 + 59 len 5]
                                            if block.timestamp >= mem[_82836 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _83640 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45560
                                                mem[32] = 52
                                                currentRoundId[_45560]++
                                                _84200 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84200] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84200 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45560] + 1
                                                mem[32] = sha3(_45560, 53)
                                                stor53[_45560][stor52[_45560] + 1].field_0 = Mask(216, 0, _83640)
                                                stor53[_45560][stor52[_45560] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            mem[ceil32(bandCurrencyKeys[_45560].length) + _59942 + _71763 + 132] = 0
                                            require ext_code.size(bandOracleMap[_45560])
                                            staticcall bandOracleMap[_45560].mem[mem[64] len 4] with:
                                                    gas gas_remaining wei
                                                   args mem[mem[64] + 4 len ceil32(_71763) + ceil32(bandCurrencyKeys[_45560].length) + _59942 + -mem[64] + 128]
                                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _81909 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 96
                                            _82093 = mem[64]
                                            require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                            mem[64] = mem[64] + 96
                                            mem[_82093] = mem[_81909]
                                            mem[_82093 + 32] = mem[_81909 + 32]
                                            mem[_82093 + 64] = mem[_81909 + 64]
                                            _83163 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_83163] = mem[_82093 + 5 len 27]
                                            mem[_83163 + 32] = mem[_82093 + 59 len 5]
                                            if block.timestamp >= mem[_83163 + 59 len 5]:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _84205 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45560
                                                mem[32] = 52
                                                currentRoundId[_45560]++
                                                _84769 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_84769] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_84769 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45560] + 1
                                                mem[32] = sha3(_45560, 53)
                                                stor53[_45560][stor52[_45560] + 1].field_0 = Mask(216, 0, _84205)
                                                stor53[_45560][stor52[_45560] + 1].field_216 = block.timestamp % 1099511627776
                                idx = idx + 1
                                continue 
                            _45430 = mem[64]
                            mem[mem[64]] = 64
                            _45559 = mem[96]
                            mem[mem[64] + 64] = mem[96]
                            mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                            mem[mem[64] + 32] = (32 * mem[96]) + 96
                            _59534 = mem[(32 * arg3.length) + 128]
                            mem[_45430 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                            mem[_45430 + (32 * _45559) + 128 len 32 * _59534] = mem[(32 * arg3.length) + 160 len 32 * _59534]
                            var89001 = _59534
                            emit 0x50f45835: mem[mem[64] len _45430 + (32 * _45559) + (32 * _59534) + -mem[64] + 128]
                    else:
                        uint8(stor0.field_0) = 1
                        uint8(stor0.field_8) = 1
                        Mask(248, 0, stor0.field_8) = 0
                        if not ext_code.size(this.address):
                            if uint8(stor0.field_8):
                                if not arg1:
                                    revert with 0, 'LnAdminUpgradeable: zero address'
                                adminAddress = arg1
                                mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                                emit AdminChanged(0, arg1);
                                if uint8(stor0.field_8):
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45563 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45938 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45938] = 0
                                        mem[_45938 + 32] = 0
                                        _46084 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46084] = 0
                                        mem[_46084 + 32] = 0
                                        _46206 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46206] = 3
                                        mem[_46206 + 32] = 'USD'
                                        mem[0] = _45563
                                        mem[32] = 102
                                        _46208 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45563].length) + 32
                                        mem[_46208] = bandCurrencyKeys[_45563].length
                                        mem[_46208 + 32] = bandCurrencyKeys[_45563].field_0
                                        s = _46208 + 32
                                        t = sha3(sha3(_45563, 102))
                                        while _46208 + bandCurrencyKeys[_45563].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45563
                                        mem[32] = 100
                                        if not bandOracleMap[_45563]:
                                            _59946 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59946] = 0
                                            mem[_59946 + 32] = 0
                                            mem[0] = currentRoundId[_45563]
                                            mem[32] = sha3(_45563, 53)
                                            _60255 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60255] = stor53[_45563][stor52[_45563]].field_0
                                            mem[_60255 + 32] = stor53[_45563][stor52[_45563]].field_216
                                            if block.timestamp >= stor53[_45563][stor52[_45563]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61272 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45563
                                                mem[32] = 52
                                                currentRoundId[_45563]++
                                                _61662 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61662] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61662 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45563] + 1
                                                mem[32] = sha3(_45563, 53)
                                                stor53[_45563][stor52[_45563] + 1].field_0 = Mask(216, 0, _61272)
                                                stor53[_45563][stor52[_45563] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59731 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59731] = 0
                                            mem[_59731 + 32] = 0
                                            mem[_59731 + 64] = 0
                                            _59947 = mem[64]
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45563].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45563].length:
                                                mem[s + mem[64] + 100] = mem[_46208 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45563].length) <= bandCurrencyKeys[_45563].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45563].length) + 96
                                                _71538 = mem[_46206]
                                                mem[ceil32(bandCurrencyKeys[_45563].length) + _59947 + 100] = mem[_46206]
                                                s = 0
                                                while s < _71538:
                                                    mem[s + ceil32(bandCurrencyKeys[_45563].length) + _59947 + 132] = mem[_46206 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71538) <= _71538:
                                                    require ext_code.size(bandOracleMap[_45563])
                                                    staticcall bandOracleMap[_45563].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71538) + ceil32(bandCurrencyKeys[_45563].length) + _59947 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81818 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82002 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82002] = mem[_81818]
                                                    mem[_82002 + 32] = mem[_81818 + 32]
                                                    mem[_82002 + 64] = mem[_81818 + 64]
                                                    _82842 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82842] = mem[_82002 + 5 len 27]
                                                    mem[_82842 + 32] = mem[_82002 + 59 len 5]
                                                    if block.timestamp >= mem[_82842 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83642 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45563
                                                        mem[32] = 52
                                                        currentRoundId[_45563]++
                                                        _84207 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84207] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84207 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45563] + 1
                                                        mem[32] = sha3(_45563, 53)
                                                        stor53[_45563][stor52[_45563] + 1].field_0 = Mask(216, 0, _83642)
                                                        stor53[_45563][stor52[_45563] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45563].length) + _59947 + _71538 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45563])
                                                    staticcall bandOracleMap[_45563].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71538) + ceil32(bandCurrencyKeys[_45563].length) + _59947 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81910 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82094 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82094] = mem[_81910]
                                                    mem[_82094 + 32] = mem[_81910 + 32]
                                                    mem[_82094 + 64] = mem[_81910 + 64]
                                                    _83166 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83166] = mem[_82094 + 5 len 27]
                                                    mem[_83166 + 32] = mem[_82094 + 59 len 5]
                                                    if block.timestamp >= mem[_83166 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84212 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45563
                                                        mem[32] = 52
                                                        currentRoundId[_45563]++
                                                        _84775 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84775] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84775 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45563] + 1
                                                        mem[32] = sha3(_45563, 53)
                                                        stor53[_45563][stor52[_45563] + 1].field_0 = Mask(216, 0, _84212)
                                                        stor53[_45563][stor52[_45563] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45563].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45563].length) + 96
                                                _71768 = mem[_46206]
                                                mem[ceil32(bandCurrencyKeys[_45563].length) + _59947 + 100] = mem[_46206]
                                                s = 0
                                                while s < _71768:
                                                    mem[s + ceil32(bandCurrencyKeys[_45563].length) + _59947 + 132] = mem[_46206 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71768) <= _71768:
                                                    require ext_code.size(bandOracleMap[_45563])
                                                    staticcall bandOracleMap[_45563].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71768) + ceil32(bandCurrencyKeys[_45563].length) + _59947 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81819 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82003 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82003] = mem[_81819]
                                                    mem[_82003 + 32] = mem[_81819 + 32]
                                                    mem[_82003 + 64] = mem[_81819 + 64]
                                                    _82848 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82848] = mem[_82003 + 5 len 27]
                                                    mem[_82848 + 32] = mem[_82003 + 59 len 5]
                                                    if block.timestamp >= mem[_82848 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83644 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45563
                                                        mem[32] = 52
                                                        currentRoundId[_45563]++
                                                        _84214 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84214] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84214 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45563] + 1
                                                        mem[32] = sha3(_45563, 53)
                                                        stor53[_45563][stor52[_45563] + 1].field_0 = Mask(216, 0, _83644)
                                                        stor53[_45563][stor52[_45563] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45563].length) + _59947 + _71768 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45563])
                                                    staticcall bandOracleMap[_45563].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71768) + ceil32(bandCurrencyKeys[_45563].length) + _59947 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81911 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82095 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82095] = mem[_81911]
                                                    mem[_82095 + 32] = mem[_81911 + 32]
                                                    mem[_82095 + 64] = mem[_81911 + 64]
                                                    _83169 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83169] = mem[_82095 + 5 len 27]
                                                    mem[_83169 + 32] = mem[_82095 + 59 len 5]
                                                    if block.timestamp >= mem[_83169 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84219 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45563
                                                        mem[32] = 52
                                                        currentRoundId[_45563]++
                                                        _84781 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84781] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84781 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45563] + 1
                                                        mem[32] = sha3(_45563, 53)
                                                        stor53[_45563][stor52[_45563] + 1].field_0 = Mask(216, 0, _84219)
                                                        stor53[_45563][stor52[_45563] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45432 = mem[64]
                                    mem[mem[64]] = 64
                                    _45562 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var84001 = mem[96]
                                    var84002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59538 = mem[(32 * arg3.length) + 128]
                                    mem[_45432 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45432 + (32 * _45562) + 128 len 32 * _59538] = mem[(32 * arg3.length) + 160 len 32 * _59538]
                                    var91001 = _59538
                                    emit 0x50f45835: mem[mem[64] len _45432 + (32 * _45562) + (32 * _59538) + -mem[64] + 128]
                                else:
                                    uint8(stor0.field_8) = 0
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45566 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45940 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45940] = 0
                                        mem[_45940 + 32] = 0
                                        _46085 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46085] = 0
                                        mem[_46085 + 32] = 0
                                        _46209 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46209] = 3
                                        mem[_46209 + 32] = 'USD'
                                        mem[0] = _45566
                                        mem[32] = 102
                                        _46211 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45566].length) + 32
                                        mem[_46211] = bandCurrencyKeys[_45566].length
                                        mem[_46211 + 32] = bandCurrencyKeys[_45566].field_0
                                        s = _46211 + 32
                                        t = sha3(sha3(_45566, 102))
                                        while _46211 + bandCurrencyKeys[_45566].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45566
                                        mem[32] = 100
                                        if not bandOracleMap[_45566]:
                                            _59951 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59951] = 0
                                            mem[_59951 + 32] = 0
                                            mem[0] = currentRoundId[_45566]
                                            mem[32] = sha3(_45566, 53)
                                            _60262 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60262] = stor53[_45566][stor52[_45566]].field_0
                                            mem[_60262 + 32] = stor53[_45566][stor52[_45566]].field_216
                                            if block.timestamp >= stor53[_45566][stor52[_45566]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61278 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45566
                                                mem[32] = 52
                                                currentRoundId[_45566]++
                                                _61671 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61671] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61671 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45566] + 1
                                                mem[32] = sha3(_45566, 53)
                                                stor53[_45566][stor52[_45566] + 1].field_0 = Mask(216, 0, _61278)
                                                stor53[_45566][stor52[_45566] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59734 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59734] = 0
                                            mem[_59734 + 32] = 0
                                            mem[_59734 + 64] = 0
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45566].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45566].length:
                                                mem[s + mem[64] + 100] = mem[_46211 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45566].length) <= bandCurrencyKeys[_45566].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45566].length) + 96
                                                _71543 = mem[_46209]
                                                mem[ceil32(bandCurrencyKeys[_45566].length) + mem[64] + 100] = mem[_46209]
                                                s = 0
                                                while s < _71543:
                                                    mem[s + ceil32(bandCurrencyKeys[_45566].length) + mem[64] + 132] = mem[_46209 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71543) <= _71543:
                                                    require ext_code.size(bandOracleMap[_45566])
                                                    staticcall bandOracleMap[_45566].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45566].length, data=mem[mem[64] + 100 len ceil32(_71543) + ceil32(bandCurrencyKeys[_45566].length) + 32]), ceil32(bandCurrencyKeys[_45566].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81820 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82004 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82004] = mem[_81820]
                                                    mem[_82004 + 32] = mem[_81820 + 32]
                                                    mem[_82004 + 64] = mem[_81820 + 64]
                                                    _82854 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82854] = mem[_82004 + 5 len 27]
                                                    mem[_82854 + 32] = mem[_82004 + 59 len 5]
                                                    if block.timestamp >= mem[_82854 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83646 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45566
                                                        mem[32] = 52
                                                        currentRoundId[_45566]++
                                                        _84221 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84221] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84221 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45566] + 1
                                                        mem[32] = sha3(_45566, 53)
                                                        stor53[_45566][stor52[_45566] + 1].field_0 = Mask(216, 0, _83646)
                                                        stor53[_45566][stor52[_45566] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45566].length) + mem[64] + _71543 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45566])
                                                    staticcall bandOracleMap[_45566].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45566].length, data=mem[mem[64] + 100 len ceil32(_71543) + ceil32(bandCurrencyKeys[_45566].length) + 32]), ceil32(bandCurrencyKeys[_45566].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81912 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82096 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82096] = mem[_81912]
                                                    mem[_82096 + 32] = mem[_81912 + 32]
                                                    mem[_82096 + 64] = mem[_81912 + 64]
                                                    _83172 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83172] = mem[_82096 + 5 len 27]
                                                    mem[_83172 + 32] = mem[_82096 + 59 len 5]
                                                    if block.timestamp >= mem[_83172 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84226 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45566
                                                        mem[32] = 52
                                                        currentRoundId[_45566]++
                                                        _84787 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84787] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84787 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45566] + 1
                                                        mem[32] = sha3(_45566, 53)
                                                        stor53[_45566][stor52[_45566] + 1].field_0 = Mask(216, 0, _84226)
                                                        stor53[_45566][stor52[_45566] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45566].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45566].length) + 96
                                                _71773 = mem[_46209]
                                                mem[ceil32(bandCurrencyKeys[_45566].length) + mem[64] + 100] = mem[_46209]
                                                s = 0
                                                while s < _71773:
                                                    mem[s + ceil32(bandCurrencyKeys[_45566].length) + mem[64] + 132] = mem[_46209 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71773) <= _71773:
                                                    require ext_code.size(bandOracleMap[_45566])
                                                    staticcall bandOracleMap[_45566].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45566].length, data=mem[mem[64] + 100 len ceil32(_71773) + ceil32(bandCurrencyKeys[_45566].length) + 32]), ceil32(bandCurrencyKeys[_45566].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81821 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82005 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82005] = mem[_81821]
                                                    mem[_82005 + 32] = mem[_81821 + 32]
                                                    mem[_82005 + 64] = mem[_81821 + 64]
                                                    _82860 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82860] = mem[_82005 + 5 len 27]
                                                    mem[_82860 + 32] = mem[_82005 + 59 len 5]
                                                    if block.timestamp >= mem[_82860 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83648 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45566
                                                        mem[32] = 52
                                                        currentRoundId[_45566]++
                                                        _84228 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84228] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84228 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45566] + 1
                                                        mem[32] = sha3(_45566, 53)
                                                        stor53[_45566][stor52[_45566] + 1].field_0 = Mask(216, 0, _83648)
                                                        stor53[_45566][stor52[_45566] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45566].length) + mem[64] + _71773 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45566])
                                                    staticcall bandOracleMap[_45566].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45566].length, data=mem[mem[64] + 100 len ceil32(_71773) + ceil32(bandCurrencyKeys[_45566].length) + 32]), ceil32(bandCurrencyKeys[_45566].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81913 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82097 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82097] = mem[_81913]
                                                    mem[_82097 + 32] = mem[_81913 + 32]
                                                    mem[_82097 + 64] = mem[_81913 + 64]
                                                    _83175 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83175] = mem[_82097 + 5 len 27]
                                                    mem[_83175 + 32] = mem[_82097 + 59 len 5]
                                                    if block.timestamp >= mem[_83175 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84233 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45566
                                                        mem[32] = 52
                                                        currentRoundId[_45566]++
                                                        _84793 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84793] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84793 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45566] + 1
                                                        mem[32] = sha3(_45566, 53)
                                                        stor53[_45566][stor52[_45566] + 1].field_0 = Mask(216, 0, _84233)
                                                        stor53[_45566][stor52[_45566] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45434 = mem[64]
                                    mem[mem[64]] = 64
                                    _45565 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var85001 = mem[96]
                                    var85002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59542 = mem[(32 * arg3.length) + 128]
                                    mem[_45434 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45434 + (32 * _45565) + 128 len 32 * _59542] = mem[(32 * arg3.length) + 160 len 32 * _59542]
                                    var92001 = _59542
                                    emit 0x50f45835: mem[mem[64] len _45434 + (32 * _45565) + (32 * _59542) + -mem[64] + 128]
                            else:
                                uint8(stor0.field_0) = 1
                                uint8(stor0.field_8) = 1
                                Mask(248, 0, stor0.field_8) = 0
                                if not arg1:
                                    revert with 0, 'LnAdminUpgradeable: zero address'
                                adminAddress = arg1
                                mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                                emit AdminChanged(0, arg1);
                                if uint8(stor0.field_8):
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45569 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45942 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45942] = 0
                                        mem[_45942 + 32] = 0
                                        _46086 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46086] = 0
                                        mem[_46086 + 32] = 0
                                        _46212 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46212] = 3
                                        mem[_46212 + 32] = 'USD'
                                        mem[0] = _45569
                                        mem[32] = 102
                                        _46214 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45569].length) + 32
                                        mem[_46214] = bandCurrencyKeys[_45569].length
                                        mem[_46214 + 32] = bandCurrencyKeys[_45569].field_0
                                        s = _46214 + 32
                                        t = sha3(sha3(_45569, 102))
                                        while _46214 + bandCurrencyKeys[_45569].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45569
                                        mem[32] = 100
                                        if not bandOracleMap[_45569]:
                                            _59956 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59956] = 0
                                            mem[_59956 + 32] = 0
                                            mem[0] = currentRoundId[_45569]
                                            mem[32] = sha3(_45569, 53)
                                            _60269 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60269] = stor53[_45569][stor52[_45569]].field_0
                                            mem[_60269 + 32] = stor53[_45569][stor52[_45569]].field_216
                                            if block.timestamp >= stor53[_45569][stor52[_45569]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61284 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45569
                                                mem[32] = 52
                                                currentRoundId[_45569]++
                                                _61680 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61680] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61680 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45569] + 1
                                                mem[32] = sha3(_45569, 53)
                                                stor53[_45569][stor52[_45569] + 1].field_0 = Mask(216, 0, _61284)
                                                stor53[_45569][stor52[_45569] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59737 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59737] = 0
                                            mem[_59737 + 32] = 0
                                            mem[_59737 + 64] = 0
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45569].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45569].length:
                                                mem[s + mem[64] + 100] = mem[_46214 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45569].length) <= bandCurrencyKeys[_45569].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45569].length) + 96
                                                _71548 = mem[_46212]
                                                mem[ceil32(bandCurrencyKeys[_45569].length) + mem[64] + 100] = mem[_46212]
                                                s = 0
                                                while s < _71548:
                                                    mem[s + ceil32(bandCurrencyKeys[_45569].length) + mem[64] + 132] = mem[_46212 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71548) <= _71548:
                                                    require ext_code.size(bandOracleMap[_45569])
                                                    staticcall bandOracleMap[_45569].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45569].length, data=mem[mem[64] + 100 len ceil32(_71548) + ceil32(bandCurrencyKeys[_45569].length) + 32]), ceil32(bandCurrencyKeys[_45569].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81822 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82006 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82006] = mem[_81822]
                                                    mem[_82006 + 32] = mem[_81822 + 32]
                                                    mem[_82006 + 64] = mem[_81822 + 64]
                                                    _82866 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82866] = mem[_82006 + 5 len 27]
                                                    mem[_82866 + 32] = mem[_82006 + 59 len 5]
                                                    if block.timestamp >= mem[_82866 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83650 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45569
                                                        mem[32] = 52
                                                        currentRoundId[_45569]++
                                                        _84235 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84235] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84235 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45569] + 1
                                                        mem[32] = sha3(_45569, 53)
                                                        stor53[_45569][stor52[_45569] + 1].field_0 = Mask(216, 0, _83650)
                                                        stor53[_45569][stor52[_45569] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45569].length) + mem[64] + _71548 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45569])
                                                    staticcall bandOracleMap[_45569].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45569].length, data=mem[mem[64] + 100 len ceil32(_71548) + ceil32(bandCurrencyKeys[_45569].length) + 32]), ceil32(bandCurrencyKeys[_45569].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81914 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82098 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82098] = mem[_81914]
                                                    mem[_82098 + 32] = mem[_81914 + 32]
                                                    mem[_82098 + 64] = mem[_81914 + 64]
                                                    _83178 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83178] = mem[_82098 + 5 len 27]
                                                    mem[_83178 + 32] = mem[_82098 + 59 len 5]
                                                    if block.timestamp >= mem[_83178 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84240 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45569
                                                        mem[32] = 52
                                                        currentRoundId[_45569]++
                                                        _84799 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84799] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84799 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45569] + 1
                                                        mem[32] = sha3(_45569, 53)
                                                        stor53[_45569][stor52[_45569] + 1].field_0 = Mask(216, 0, _84240)
                                                        stor53[_45569][stor52[_45569] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45569].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45569].length) + 96
                                                _71778 = mem[_46212]
                                                mem[ceil32(bandCurrencyKeys[_45569].length) + mem[64] + 100] = mem[_46212]
                                                s = 0
                                                while s < _71778:
                                                    mem[s + ceil32(bandCurrencyKeys[_45569].length) + mem[64] + 132] = mem[_46212 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71778) <= _71778:
                                                    require ext_code.size(bandOracleMap[_45569])
                                                    staticcall bandOracleMap[_45569].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45569].length, data=mem[mem[64] + 100 len ceil32(_71778) + ceil32(bandCurrencyKeys[_45569].length) + 32]), ceil32(bandCurrencyKeys[_45569].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81823 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82007 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82007] = mem[_81823]
                                                    mem[_82007 + 32] = mem[_81823 + 32]
                                                    mem[_82007 + 64] = mem[_81823 + 64]
                                                    _82872 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82872] = mem[_82007 + 5 len 27]
                                                    mem[_82872 + 32] = mem[_82007 + 59 len 5]
                                                    if block.timestamp >= mem[_82872 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83652 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45569
                                                        mem[32] = 52
                                                        currentRoundId[_45569]++
                                                        _84242 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84242] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84242 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45569] + 1
                                                        mem[32] = sha3(_45569, 53)
                                                        stor53[_45569][stor52[_45569] + 1].field_0 = Mask(216, 0, _83652)
                                                        stor53[_45569][stor52[_45569] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45569].length) + mem[64] + _71778 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45569])
                                                    staticcall bandOracleMap[_45569].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45569].length, data=mem[mem[64] + 100 len ceil32(_71778) + ceil32(bandCurrencyKeys[_45569].length) + 32]), ceil32(bandCurrencyKeys[_45569].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81915 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82099 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82099] = mem[_81915]
                                                    mem[_82099 + 32] = mem[_81915 + 32]
                                                    mem[_82099 + 64] = mem[_81915 + 64]
                                                    _83181 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83181] = mem[_82099 + 5 len 27]
                                                    mem[_83181 + 32] = mem[_82099 + 59 len 5]
                                                    if block.timestamp >= mem[_83181 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84247 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45569
                                                        mem[32] = 52
                                                        currentRoundId[_45569]++
                                                        _84805 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84805] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84805 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45569] + 1
                                                        mem[32] = sha3(_45569, 53)
                                                        stor53[_45569][stor52[_45569] + 1].field_0 = Mask(216, 0, _84247)
                                                        stor53[_45569][stor52[_45569] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45436 = mem[64]
                                    mem[mem[64]] = 64
                                    _45568 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var85001 = mem[96]
                                    var85002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59546 = mem[(32 * arg3.length) + 128]
                                    mem[_45436 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45436 + (32 * _45568) + 128 len 32 * _59546] = mem[(32 * arg3.length) + 160 len 32 * _59546]
                                    var92001 = _59546
                                    emit 0x50f45835: mem[mem[64] len _45436 + (32 * _45568) + (32 * _59546) + -mem[64] + 128]
                                else:
                                    uint8(stor0.field_8) = 0
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45572 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45944 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45944] = 0
                                        mem[_45944 + 32] = 0
                                        _46087 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46087] = 0
                                        mem[_46087 + 32] = 0
                                        _46215 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46215] = 3
                                        mem[_46215 + 32] = 'USD'
                                        mem[0] = _45572
                                        mem[32] = 102
                                        _46217 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45572].length) + 32
                                        mem[_46217] = bandCurrencyKeys[_45572].length
                                        mem[_46217 + 32] = bandCurrencyKeys[_45572].field_0
                                        s = _46217 + 32
                                        t = sha3(sha3(_45572, 102))
                                        while _46217 + bandCurrencyKeys[_45572].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45572
                                        mem[32] = 100
                                        if not bandOracleMap[_45572]:
                                            _59961 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59961] = 0
                                            mem[_59961 + 32] = 0
                                            mem[0] = currentRoundId[_45572]
                                            mem[32] = sha3(_45572, 53)
                                            _60276 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60276] = stor53[_45572][stor52[_45572]].field_0
                                            mem[_60276 + 32] = stor53[_45572][stor52[_45572]].field_216
                                            if block.timestamp >= stor53[_45572][stor52[_45572]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61290 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45572
                                                mem[32] = 52
                                                currentRoundId[_45572]++
                                                _61689 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61689] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61689 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45572] + 1
                                                mem[32] = sha3(_45572, 53)
                                                stor53[_45572][stor52[_45572] + 1].field_0 = Mask(216, 0, _61290)
                                                stor53[_45572][stor52[_45572] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59740 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59740] = 0
                                            mem[_59740 + 32] = 0
                                            mem[_59740 + 64] = 0
                                            _59962 = mem[64]
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45572].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45572].length:
                                                mem[s + mem[64] + 100] = mem[_46217 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45572].length) <= bandCurrencyKeys[_45572].length:
                                                mem[_59962 + 36] = ceil32(bandCurrencyKeys[_45572].length) + 96
                                                _71553 = mem[_46215]
                                                mem[ceil32(bandCurrencyKeys[_45572].length) + _59962 + 100] = mem[_46215]
                                                s = 0
                                                while s < _71553:
                                                    mem[s + ceil32(bandCurrencyKeys[_45572].length) + _59962 + 132] = mem[_46215 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71553) <= _71553:
                                                    require ext_code.size(bandOracleMap[_45572])
                                                    staticcall bandOracleMap[_45572].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71553) + ceil32(bandCurrencyKeys[_45572].length) + _59962 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81824 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82008 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82008] = mem[_81824]
                                                    mem[_82008 + 32] = mem[_81824 + 32]
                                                    mem[_82008 + 64] = mem[_81824 + 64]
                                                    _82878 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82878] = mem[_82008 + 5 len 27]
                                                    mem[_82878 + 32] = mem[_82008 + 59 len 5]
                                                    if block.timestamp >= mem[_82878 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83654 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45572
                                                        mem[32] = 52
                                                        currentRoundId[_45572]++
                                                        _84249 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84249] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84249 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45572] + 1
                                                        mem[32] = sha3(_45572, 53)
                                                        stor53[_45572][stor52[_45572] + 1].field_0 = Mask(216, 0, _83654)
                                                        stor53[_45572][stor52[_45572] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45572].length) + _59962 + _71553 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45572])
                                                    staticcall bandOracleMap[_45572].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71553) + ceil32(bandCurrencyKeys[_45572].length) + _59962 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81916 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82100 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82100] = mem[_81916]
                                                    mem[_82100 + 32] = mem[_81916 + 32]
                                                    mem[_82100 + 64] = mem[_81916 + 64]
                                                    _83184 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83184] = mem[_82100 + 5 len 27]
                                                    mem[_83184 + 32] = mem[_82100 + 59 len 5]
                                                    if block.timestamp >= mem[_83184 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84254 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45572
                                                        mem[32] = 52
                                                        currentRoundId[_45572]++
                                                        _84811 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84811] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84811 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45572] + 1
                                                        mem[32] = sha3(_45572, 53)
                                                        stor53[_45572][stor52[_45572] + 1].field_0 = Mask(216, 0, _84254)
                                                        stor53[_45572][stor52[_45572] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[_59962 + bandCurrencyKeys[_45572].length + 100] = 0
                                                mem[_59962 + 36] = ceil32(bandCurrencyKeys[_45572].length) + 96
                                                _71783 = mem[_46215]
                                                mem[ceil32(bandCurrencyKeys[_45572].length) + _59962 + 100] = mem[_46215]
                                                s = 0
                                                while s < _71783:
                                                    mem[s + ceil32(bandCurrencyKeys[_45572].length) + _59962 + 132] = mem[_46215 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71783) <= _71783:
                                                    require ext_code.size(bandOracleMap[_45572])
                                                    staticcall bandOracleMap[_45572].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71783) + ceil32(bandCurrencyKeys[_45572].length) + _59962 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81825 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82009 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82009] = mem[_81825]
                                                    mem[_82009 + 32] = mem[_81825 + 32]
                                                    mem[_82009 + 64] = mem[_81825 + 64]
                                                    _82884 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82884] = mem[_82009 + 5 len 27]
                                                    mem[_82884 + 32] = mem[_82009 + 59 len 5]
                                                    if block.timestamp >= mem[_82884 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83656 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45572
                                                        mem[32] = 52
                                                        currentRoundId[_45572]++
                                                        _84256 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84256] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84256 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45572] + 1
                                                        mem[32] = sha3(_45572, 53)
                                                        stor53[_45572][stor52[_45572] + 1].field_0 = Mask(216, 0, _83656)
                                                        stor53[_45572][stor52[_45572] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45572].length) + _59962 + _71783 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45572])
                                                    staticcall bandOracleMap[_45572].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71783) + ceil32(bandCurrencyKeys[_45572].length) + _59962 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81917 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82101 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82101] = mem[_81917]
                                                    mem[_82101 + 32] = mem[_81917 + 32]
                                                    mem[_82101 + 64] = mem[_81917 + 64]
                                                    _83187 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83187] = mem[_82101 + 5 len 27]
                                                    mem[_83187 + 32] = mem[_82101 + 59 len 5]
                                                    if block.timestamp >= mem[_83187 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84261 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45572
                                                        mem[32] = 52
                                                        currentRoundId[_45572]++
                                                        _84817 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84817] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84817 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45572] + 1
                                                        mem[32] = sha3(_45572, 53)
                                                        stor53[_45572][stor52[_45572] + 1].field_0 = Mask(216, 0, _84261)
                                                        stor53[_45572][stor52[_45572] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45438 = mem[64]
                                    mem[mem[64]] = 64
                                    _45571 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var86001 = mem[96]
                                    var86002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59550 = mem[(32 * arg3.length) + 128]
                                    mem[_45438 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45438 + (32 * _45571) + 128 len 32 * _59550] = mem[(32 * arg3.length) + 160 len 32 * _59550]
                                    var93001 = _59550
                                    emit 0x50f45835: mem[mem[64] len _45438 + (32 * _45571) + (32 * _59550) + -mem[64] + 128]
                        else:
                            if uint8(stor0.field_0):
                                revert with 0, 'Initializable: contract is already initialized'
                            if uint8(stor0.field_8):
                                if not arg1:
                                    revert with 0, 'LnAdminUpgradeable: zero address'
                                adminAddress = arg1
                                mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                                emit AdminChanged(0, arg1);
                                if uint8(stor0.field_8):
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45575 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45946 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45946] = 0
                                        mem[_45946 + 32] = 0
                                        _46088 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46088] = 0
                                        mem[_46088 + 32] = 0
                                        _46218 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46218] = 3
                                        mem[_46218 + 32] = 'USD'
                                        mem[0] = _45575
                                        mem[32] = 102
                                        _46220 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45575].length) + 32
                                        mem[_46220] = bandCurrencyKeys[_45575].length
                                        mem[_46220 + 32] = bandCurrencyKeys[_45575].field_0
                                        s = _46220 + 32
                                        t = sha3(sha3(_45575, 102))
                                        while _46220 + bandCurrencyKeys[_45575].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45575
                                        mem[32] = 100
                                        if not bandOracleMap[_45575]:
                                            _59966 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59966] = 0
                                            mem[_59966 + 32] = 0
                                            mem[0] = currentRoundId[_45575]
                                            mem[32] = sha3(_45575, 53)
                                            _60283 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60283] = stor53[_45575][stor52[_45575]].field_0
                                            mem[_60283 + 32] = stor53[_45575][stor52[_45575]].field_216
                                            if block.timestamp >= stor53[_45575][stor52[_45575]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61296 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45575
                                                mem[32] = 52
                                                currentRoundId[_45575]++
                                                _61698 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61698] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61698 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45575] + 1
                                                mem[32] = sha3(_45575, 53)
                                                stor53[_45575][stor52[_45575] + 1].field_0 = Mask(216, 0, _61296)
                                                stor53[_45575][stor52[_45575] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59743 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59743] = 0
                                            mem[_59743 + 32] = 0
                                            mem[_59743 + 64] = 0
                                            _59967 = mem[64]
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45575].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45575].length:
                                                mem[s + mem[64] + 100] = mem[_46220 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45575].length) <= bandCurrencyKeys[_45575].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45575].length) + 96
                                                _71558 = mem[_46218]
                                                mem[ceil32(bandCurrencyKeys[_45575].length) + mem[64] + 100] = mem[_46218]
                                                s = 0
                                                while s < _71558:
                                                    mem[s + ceil32(bandCurrencyKeys[_45575].length) + mem[64] + 132] = mem[_46218 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71558) <= _71558:
                                                    require ext_code.size(bandOracleMap[_45575])
                                                    staticcall bandOracleMap[_45575].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45575].length, data=mem[mem[64] + 100 len ceil32(_71558) + ceil32(bandCurrencyKeys[_45575].length) + 32]), ceil32(bandCurrencyKeys[_45575].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81826 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82010 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82010] = mem[_81826]
                                                    mem[_82010 + 32] = mem[_81826 + 32]
                                                    mem[_82010 + 64] = mem[_81826 + 64]
                                                    _82890 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82890] = mem[_82010 + 5 len 27]
                                                    mem[_82890 + 32] = mem[_82010 + 59 len 5]
                                                    if block.timestamp >= mem[_82890 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83658 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45575
                                                        mem[32] = 52
                                                        currentRoundId[_45575]++
                                                        _84263 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84263] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84263 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45575] + 1
                                                        mem[32] = sha3(_45575, 53)
                                                        stor53[_45575][stor52[_45575] + 1].field_0 = Mask(216, 0, _83658)
                                                        stor53[_45575][stor52[_45575] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45575].length) + mem[64] + _71558 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45575])
                                                    staticcall bandOracleMap[_45575].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45575].length, data=mem[mem[64] + 100 len ceil32(_71558) + ceil32(bandCurrencyKeys[_45575].length) + 32]), ceil32(bandCurrencyKeys[_45575].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81918 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82102 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82102] = mem[_81918]
                                                    mem[_82102 + 32] = mem[_81918 + 32]
                                                    mem[_82102 + 64] = mem[_81918 + 64]
                                                    _83190 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83190] = mem[_82102 + 5 len 27]
                                                    mem[_83190 + 32] = mem[_82102 + 59 len 5]
                                                    if block.timestamp >= mem[_83190 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84268 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45575
                                                        mem[32] = 52
                                                        currentRoundId[_45575]++
                                                        _84823 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84823] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84823 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45575] + 1
                                                        mem[32] = sha3(_45575, 53)
                                                        stor53[_45575][stor52[_45575] + 1].field_0 = Mask(216, 0, _84268)
                                                        stor53[_45575][stor52[_45575] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45575].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45575].length) + 96
                                                _71788 = mem[_46218]
                                                mem[ceil32(bandCurrencyKeys[_45575].length) + mem[64] + 100] = mem[_46218]
                                                s = 0
                                                while s < _71788:
                                                    mem[s + ceil32(bandCurrencyKeys[_45575].length) + mem[64] + 132] = mem[_46218 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71788) <= _71788:
                                                    require ext_code.size(bandOracleMap[_45575])
                                                    staticcall bandOracleMap[_45575].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71788) + ceil32(bandCurrencyKeys[_45575].length) + _59967 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81827 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82011 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82011] = mem[_81827]
                                                    mem[_82011 + 32] = mem[_81827 + 32]
                                                    mem[_82011 + 64] = mem[_81827 + 64]
                                                    _82896 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82896] = mem[_82011 + 5 len 27]
                                                    mem[_82896 + 32] = mem[_82011 + 59 len 5]
                                                    if block.timestamp >= mem[_82896 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83660 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45575
                                                        mem[32] = 52
                                                        currentRoundId[_45575]++
                                                        _84270 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84270] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84270 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45575] + 1
                                                        mem[32] = sha3(_45575, 53)
                                                        stor53[_45575][stor52[_45575] + 1].field_0 = Mask(216, 0, _83660)
                                                        stor53[_45575][stor52[_45575] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45575].length) + _59967 + _71788 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45575])
                                                    staticcall bandOracleMap[_45575].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71788) + ceil32(bandCurrencyKeys[_45575].length) + _59967 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81919 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82103 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82103] = mem[_81919]
                                                    mem[_82103 + 32] = mem[_81919 + 32]
                                                    mem[_82103 + 64] = mem[_81919 + 64]
                                                    _83193 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83193] = mem[_82103 + 5 len 27]
                                                    mem[_83193 + 32] = mem[_82103 + 59 len 5]
                                                    if block.timestamp >= mem[_83193 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84275 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45575
                                                        mem[32] = 52
                                                        currentRoundId[_45575]++
                                                        _84829 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84829] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84829 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45575] + 1
                                                        mem[32] = sha3(_45575, 53)
                                                        stor53[_45575][stor52[_45575] + 1].field_0 = Mask(216, 0, _84275)
                                                        stor53[_45575][stor52[_45575] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45440 = mem[64]
                                    mem[mem[64]] = 64
                                    _45574 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var85001 = mem[96]
                                    var85002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59554 = mem[(32 * arg3.length) + 128]
                                    mem[_45440 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45440 + (32 * _45574) + 128 len 32 * _59554] = mem[(32 * arg3.length) + 160 len 32 * _59554]
                                    var92001 = _59554
                                    emit 0x50f45835: mem[mem[64] len _45440 + (32 * _45574) + (32 * _59554) + -mem[64] + 128]
                                else:
                                    uint8(stor0.field_8) = 0
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45578 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45948 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45948] = 0
                                        mem[_45948 + 32] = 0
                                        _46089 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46089] = 0
                                        mem[_46089 + 32] = 0
                                        _46221 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46221] = 3
                                        mem[_46221 + 32] = 'USD'
                                        mem[0] = _45578
                                        mem[32] = 102
                                        _46223 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45578].length) + 32
                                        mem[_46223] = bandCurrencyKeys[_45578].length
                                        mem[_46223 + 32] = bandCurrencyKeys[_45578].field_0
                                        s = _46223 + 32
                                        t = sha3(sha3(_45578, 102))
                                        while _46223 + bandCurrencyKeys[_45578].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45578
                                        mem[32] = 100
                                        if not bandOracleMap[_45578]:
                                            _59971 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59971] = 0
                                            mem[_59971 + 32] = 0
                                            mem[0] = currentRoundId[_45578]
                                            mem[32] = sha3(_45578, 53)
                                            _60290 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60290] = stor53[_45578][stor52[_45578]].field_0
                                            mem[_60290 + 32] = stor53[_45578][stor52[_45578]].field_216
                                            if block.timestamp >= stor53[_45578][stor52[_45578]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61302 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45578
                                                mem[32] = 52
                                                currentRoundId[_45578]++
                                                _61707 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61707] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61707 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45578] + 1
                                                mem[32] = sha3(_45578, 53)
                                                stor53[_45578][stor52[_45578] + 1].field_0 = Mask(216, 0, _61302)
                                                stor53[_45578][stor52[_45578] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59746 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59746] = 0
                                            mem[_59746 + 32] = 0
                                            mem[_59746 + 64] = 0
                                            _59972 = mem[64]
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45578].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45578].length:
                                                mem[s + mem[64] + 100] = mem[_46223 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45578].length) <= bandCurrencyKeys[_45578].length:
                                                mem[_59972 + 36] = ceil32(bandCurrencyKeys[_45578].length) + 96
                                                _71563 = mem[_46221]
                                                mem[ceil32(bandCurrencyKeys[_45578].length) + _59972 + 100] = mem[_46221]
                                                s = 0
                                                while s < _71563:
                                                    mem[s + ceil32(bandCurrencyKeys[_45578].length) + _59972 + 132] = mem[_46221 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71563) <= _71563:
                                                    require ext_code.size(bandOracleMap[_45578])
                                                    staticcall bandOracleMap[_45578].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71563) + ceil32(bandCurrencyKeys[_45578].length) + _59972 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81828 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82012 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82012] = mem[_81828]
                                                    mem[_82012 + 32] = mem[_81828 + 32]
                                                    mem[_82012 + 64] = mem[_81828 + 64]
                                                    _82902 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82902] = mem[_82012 + 5 len 27]
                                                    mem[_82902 + 32] = mem[_82012 + 59 len 5]
                                                    if block.timestamp >= mem[_82902 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83662 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45578
                                                        mem[32] = 52
                                                        currentRoundId[_45578]++
                                                        _84277 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84277] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84277 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45578] + 1
                                                        mem[32] = sha3(_45578, 53)
                                                        stor53[_45578][stor52[_45578] + 1].field_0 = Mask(216, 0, _83662)
                                                        stor53[_45578][stor52[_45578] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45578].length) + _59972 + _71563 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45578])
                                                    staticcall bandOracleMap[_45578].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71563) + ceil32(bandCurrencyKeys[_45578].length) + _59972 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81920 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82104 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82104] = mem[_81920]
                                                    mem[_82104 + 32] = mem[_81920 + 32]
                                                    mem[_82104 + 64] = mem[_81920 + 64]
                                                    _83196 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83196] = mem[_82104 + 5 len 27]
                                                    mem[_83196 + 32] = mem[_82104 + 59 len 5]
                                                    if block.timestamp >= mem[_83196 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84282 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45578
                                                        mem[32] = 52
                                                        currentRoundId[_45578]++
                                                        _84835 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84835] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84835 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45578] + 1
                                                        mem[32] = sha3(_45578, 53)
                                                        stor53[_45578][stor52[_45578] + 1].field_0 = Mask(216, 0, _84282)
                                                        stor53[_45578][stor52[_45578] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[_59972 + bandCurrencyKeys[_45578].length + 100] = 0
                                                mem[_59972 + 36] = ceil32(bandCurrencyKeys[_45578].length) + 96
                                                _71793 = mem[_46221]
                                                mem[ceil32(bandCurrencyKeys[_45578].length) + _59972 + 100] = mem[_46221]
                                                s = 0
                                                while s < _71793:
                                                    mem[s + ceil32(bandCurrencyKeys[_45578].length) + _59972 + 132] = mem[_46221 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71793) <= _71793:
                                                    require ext_code.size(bandOracleMap[_45578])
                                                    staticcall bandOracleMap[_45578].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71793) + ceil32(bandCurrencyKeys[_45578].length) + _59972 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81829 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82013 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82013] = mem[_81829]
                                                    mem[_82013 + 32] = mem[_81829 + 32]
                                                    mem[_82013 + 64] = mem[_81829 + 64]
                                                    _82908 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82908] = mem[_82013 + 5 len 27]
                                                    mem[_82908 + 32] = mem[_82013 + 59 len 5]
                                                    if block.timestamp >= mem[_82908 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83664 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45578
                                                        mem[32] = 52
                                                        currentRoundId[_45578]++
                                                        _84284 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84284] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84284 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45578] + 1
                                                        mem[32] = sha3(_45578, 53)
                                                        stor53[_45578][stor52[_45578] + 1].field_0 = Mask(216, 0, _83664)
                                                        stor53[_45578][stor52[_45578] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45578].length) + _59972 + _71793 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45578])
                                                    staticcall bandOracleMap[_45578].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71793) + ceil32(bandCurrencyKeys[_45578].length) + _59972 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81921 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82105 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82105] = mem[_81921]
                                                    mem[_82105 + 32] = mem[_81921 + 32]
                                                    mem[_82105 + 64] = mem[_81921 + 64]
                                                    _83199 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83199] = mem[_82105 + 5 len 27]
                                                    mem[_83199 + 32] = mem[_82105 + 59 len 5]
                                                    if block.timestamp >= mem[_83199 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84289 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45578
                                                        mem[32] = 52
                                                        currentRoundId[_45578]++
                                                        _84841 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84841] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84841 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45578] + 1
                                                        mem[32] = sha3(_45578, 53)
                                                        stor53[_45578][stor52[_45578] + 1].field_0 = Mask(216, 0, _84289)
                                                        stor53[_45578][stor52[_45578] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45442 = mem[64]
                                    mem[mem[64]] = 64
                                    _45577 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var86001 = mem[96]
                                    var86002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59558 = mem[(32 * arg3.length) + 128]
                                    mem[_45442 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45442 + (32 * _45577) + 128 len 32 * _59558] = mem[(32 * arg3.length) + 160 len 32 * _59558]
                                    var93001 = _59558
                                    emit 0x50f45835: mem[mem[64] len _45442 + (32 * _45577) + (32 * _59558) + -mem[64] + 128]
                            else:
                                uint8(stor0.field_0) = 1
                                uint8(stor0.field_8) = 1
                                Mask(248, 0, stor0.field_8) = 0
                                if not arg1:
                                    revert with 0, 'LnAdminUpgradeable: zero address'
                                adminAddress = arg1
                                mem[(32 * arg3.length) + (32 * arg4.length) + 192] = arg1
                                emit AdminChanged(0, arg1);
                                if uint8(stor0.field_8):
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45581 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45950 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45950] = 0
                                        mem[_45950 + 32] = 0
                                        _46090 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46090] = 0
                                        mem[_46090 + 32] = 0
                                        _46224 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46224] = 3
                                        mem[_46224 + 32] = 'USD'
                                        mem[0] = _45581
                                        mem[32] = 102
                                        _46226 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45581].length) + 32
                                        mem[_46226] = bandCurrencyKeys[_45581].length
                                        mem[_46226 + 32] = bandCurrencyKeys[_45581].field_0
                                        s = _46226 + 32
                                        t = sha3(sha3(_45581, 102))
                                        while _46226 + bandCurrencyKeys[_45581].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45581
                                        mem[32] = 100
                                        if not bandOracleMap[_45581]:
                                            _59976 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59976] = 0
                                            mem[_59976 + 32] = 0
                                            mem[0] = currentRoundId[_45581]
                                            mem[32] = sha3(_45581, 53)
                                            _60297 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60297] = stor53[_45581][stor52[_45581]].field_0
                                            mem[_60297 + 32] = stor53[_45581][stor52[_45581]].field_216
                                            if block.timestamp >= stor53[_45581][stor52[_45581]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61308 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45581
                                                mem[32] = 52
                                                currentRoundId[_45581]++
                                                _61716 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61716] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61716 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45581] + 1
                                                mem[32] = sha3(_45581, 53)
                                                stor53[_45581][stor52[_45581] + 1].field_0 = Mask(216, 0, _61308)
                                                stor53[_45581][stor52[_45581] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59749 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59749] = 0
                                            mem[_59749 + 32] = 0
                                            mem[_59749 + 64] = 0
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45581].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45581].length:
                                                mem[s + mem[64] + 100] = mem[_46226 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45581].length) <= bandCurrencyKeys[_45581].length:
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45581].length) + 96
                                                _71568 = mem[_46224]
                                                mem[ceil32(bandCurrencyKeys[_45581].length) + mem[64] + 100] = mem[_46224]
                                                s = 0
                                                while s < _71568:
                                                    mem[s + ceil32(bandCurrencyKeys[_45581].length) + mem[64] + 132] = mem[_46224 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71568) <= _71568:
                                                    require ext_code.size(bandOracleMap[_45581])
                                                    staticcall bandOracleMap[_45581].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45581].length, data=mem[mem[64] + 100 len ceil32(_71568) + ceil32(bandCurrencyKeys[_45581].length) + 32]), ceil32(bandCurrencyKeys[_45581].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81830 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82014 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82014] = mem[_81830]
                                                    mem[_82014 + 32] = mem[_81830 + 32]
                                                    mem[_82014 + 64] = mem[_81830 + 64]
                                                    _82914 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82914] = mem[_82014 + 5 len 27]
                                                    mem[_82914 + 32] = mem[_82014 + 59 len 5]
                                                    if block.timestamp >= mem[_82914 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83666 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45581
                                                        mem[32] = 52
                                                        currentRoundId[_45581]++
                                                        _84291 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84291] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84291 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45581] + 1
                                                        mem[32] = sha3(_45581, 53)
                                                        stor53[_45581][stor52[_45581] + 1].field_0 = Mask(216, 0, _83666)
                                                        stor53[_45581][stor52[_45581] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45581].length) + mem[64] + _71568 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45581])
                                                    staticcall bandOracleMap[_45581].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45581].length, data=mem[mem[64] + 100 len ceil32(_71568) + ceil32(bandCurrencyKeys[_45581].length) + 32]), ceil32(bandCurrencyKeys[_45581].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81922 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82106 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82106] = mem[_81922]
                                                    mem[_82106 + 32] = mem[_81922 + 32]
                                                    mem[_82106 + 64] = mem[_81922 + 64]
                                                    _83202 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83202] = mem[_82106 + 5 len 27]
                                                    mem[_83202 + 32] = mem[_82106 + 59 len 5]
                                                    if block.timestamp >= mem[_83202 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84296 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45581
                                                        mem[32] = 52
                                                        currentRoundId[_45581]++
                                                        _84847 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84847] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84847 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45581] + 1
                                                        mem[32] = sha3(_45581, 53)
                                                        stor53[_45581][stor52[_45581] + 1].field_0 = Mask(216, 0, _84296)
                                                        stor53[_45581][stor52[_45581] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[mem[64] + bandCurrencyKeys[_45581].length + 100] = 0
                                                mem[mem[64] + 36] = ceil32(bandCurrencyKeys[_45581].length) + 96
                                                _71798 = mem[_46224]
                                                mem[ceil32(bandCurrencyKeys[_45581].length) + mem[64] + 100] = mem[_46224]
                                                s = 0
                                                while s < _71798:
                                                    mem[s + ceil32(bandCurrencyKeys[_45581].length) + mem[64] + 132] = mem[_46224 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71798) <= _71798:
                                                    require ext_code.size(bandOracleMap[_45581])
                                                    staticcall bandOracleMap[_45581].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45581].length, data=mem[mem[64] + 100 len ceil32(_71798) + ceil32(bandCurrencyKeys[_45581].length) + 32]), ceil32(bandCurrencyKeys[_45581].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81831 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82015 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82015] = mem[_81831]
                                                    mem[_82015 + 32] = mem[_81831 + 32]
                                                    mem[_82015 + 64] = mem[_81831 + 64]
                                                    _82920 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82920] = mem[_82015 + 5 len 27]
                                                    mem[_82920 + 32] = mem[_82015 + 59 len 5]
                                                    if block.timestamp >= mem[_82920 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83668 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45581
                                                        mem[32] = 52
                                                        currentRoundId[_45581]++
                                                        _84298 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84298] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84298 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45581] + 1
                                                        mem[32] = sha3(_45581, 53)
                                                        stor53[_45581][stor52[_45581] + 1].field_0 = Mask(216, 0, _83668)
                                                        stor53[_45581][stor52[_45581] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45581].length) + mem[64] + _71798 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45581])
                                                    staticcall bandOracleMap[_45581].getReferenceData(string rg1, string rg2) with:
                                                            gas gas_remaining wei
                                                           args Array(len=bandCurrencyKeys[_45581].length, data=mem[mem[64] + 100 len ceil32(_71798) + ceil32(bandCurrencyKeys[_45581].length) + 32]), ceil32(bandCurrencyKeys[_45581].length) + 96
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81923 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82107 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82107] = mem[_81923]
                                                    mem[_82107 + 32] = mem[_81923 + 32]
                                                    mem[_82107 + 64] = mem[_81923 + 64]
                                                    _83205 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83205] = mem[_82107 + 5 len 27]
                                                    mem[_83205 + 32] = mem[_82107 + 59 len 5]
                                                    if block.timestamp >= mem[_83205 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84303 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45581
                                                        mem[32] = 52
                                                        currentRoundId[_45581]++
                                                        _84853 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84853] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84853 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45581] + 1
                                                        mem[32] = sha3(_45581, 53)
                                                        stor53[_45581][stor52[_45581] + 1].field_0 = Mask(216, 0, _84303)
                                                        stor53[_45581][stor52[_45581] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45444 = mem[64]
                                    mem[mem[64]] = 64
                                    _45580 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var86001 = mem[96]
                                    var86002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59562 = mem[(32 * arg3.length) + 128]
                                    mem[_45444 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45444 + (32 * _45580) + 128 len 32 * _59562] = mem[(32 * arg3.length) + 160 len 32 * _59562]
                                    var93001 = _59562
                                    emit 0x50f45835: mem[mem[64] len _45444 + (32 * _45580) + (32 * _59562) + -mem[64] + 128]
                                else:
                                    uint8(stor0.field_8) = 0
                                    stalePeriod = 12 * 3600
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error.'
                                    oracleAddress = arg2
                                    require ext_code.size(0xc065a00fbf75366d8d228f856d470c3a7c4d928c)
                                    delegate 0xc065a00fbf75366d8d228f856d470c3a7c4d928c.unit() with:
                                         gas gas_remaining wei
                                        args 
                                    mem[(32 * arg3.length) + (32 * arg4.length) + 160] = delegate.return_data[0]
                                    if not delegate.return_code:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    currentRoundId['lUSD']++
                                    mem[64] = (32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 224
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 160] = delegate.return_data[5 len 27]
                                    mem[(32 * arg3.length) + (32 * arg4.length) + ceil32(return_data.size) + 192] = block.timestamp % 1099511627776
                                    mem[0] = currentRoundId['lUSD'] + 1
                                    mem[32] = sha3('lUSD', 53)
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_0 = Mask(216, 0, delegate.return_data[0])
                                    stor53['lUSD'][stor52['lUSD'] + 1].field_216 = block.timestamp % 1099511627776
                                    if arg3.length != arg4.length:
                                        revert with 0, 'array length error, not match.'
                                    if block.timestamp >= block.timestamp + 600:
                                        revert with 0, 'Time error'
                                    idx = 0
                                    while idx < arg3.length:
                                        require idx < mem[96]
                                        _45584 = mem[(32 * idx) + 128]
                                        require idx < mem[(32 * arg3.length) + 128]
                                        if 0 == mem[(32 * idx) + (32 * arg3.length) + 160]:
                                            revert with 0, 'Zero is not a valid price, please call deletePrice instead.'
                                        if mem[(32 * idx) + 128] == 'lUSD':
                                            revert with 0, 'LUSD cannot be updated.'
                                        _45952 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_45952] = 0
                                        mem[_45952 + 32] = 0
                                        _46091 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46091] = 0
                                        mem[_46091 + 32] = 0
                                        _46227 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_46227] = 3
                                        mem[_46227 + 32] = 'USD'
                                        mem[0] = _45584
                                        mem[32] = 102
                                        _46229 = mem[64]
                                        mem[64] = mem[64] + ceil32(bandCurrencyKeys[_45584].length) + 32
                                        mem[_46229] = bandCurrencyKeys[_45584].length
                                        mem[_46229 + 32] = bandCurrencyKeys[_45584].field_0
                                        s = _46229 + 32
                                        t = sha3(sha3(_45584, 102))
                                        while _46229 + bandCurrencyKeys[_45584].length > s:
                                            mem[s + 32] = uint256(stor1[t])
                                            s = s + 32
                                            t = t + 1
                                            continue 
                                        mem[0] = _45584
                                        mem[32] = 100
                                        if not bandOracleMap[_45584]:
                                            _59981 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_59981] = 0
                                            mem[_59981 + 32] = 0
                                            mem[0] = currentRoundId[_45584]
                                            mem[32] = sha3(_45584, 53)
                                            _60304 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_60304] = stor53[_45584][stor52[_45584]].field_0
                                            mem[_60304 + 32] = stor53[_45584][stor52[_45584]].field_216
                                            if block.timestamp >= stor53[_45584][stor52[_45584]].field_216:
                                                require idx < mem[(32 * arg3.length) + 128]
                                                _61314 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                mem[0] = _45584
                                                mem[32] = 52
                                                currentRoundId[_45584]++
                                                _61725 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_61725] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                mem[_61725 + 32] = block.timestamp % 1099511627776
                                                mem[0] = currentRoundId[_45584] + 1
                                                mem[32] = sha3(_45584, 53)
                                                stor53[_45584][stor52[_45584] + 1].field_0 = Mask(216, 0, _61314)
                                                stor53[_45584][stor52[_45584] + 1].field_216 = block.timestamp % 1099511627776
                                        else:
                                            _59752 = mem[64]
                                            mem[64] = mem[64] + 96
                                            mem[_59752] = 0
                                            mem[_59752 + 32] = 0
                                            mem[_59752 + 64] = 0
                                            _59982 = mem[64]
                                            mem[mem[64]] = 0x65555bcc00000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 64
                                            mem[mem[64] + 68] = bandCurrencyKeys[_45584].length
                                            s = 0
                                            while s < bandCurrencyKeys[_45584].length:
                                                mem[s + mem[64] + 100] = mem[_46229 + s + 32]
                                                s = s + 32
                                                continue 
                                            if ceil32(bandCurrencyKeys[_45584].length) <= bandCurrencyKeys[_45584].length:
                                                mem[_59982 + 36] = ceil32(bandCurrencyKeys[_45584].length) + 96
                                                _71573 = mem[_46227]
                                                mem[ceil32(bandCurrencyKeys[_45584].length) + _59982 + 100] = mem[_46227]
                                                s = 0
                                                while s < _71573:
                                                    mem[s + ceil32(bandCurrencyKeys[_45584].length) + _59982 + 132] = mem[_46227 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71573) <= _71573:
                                                    require ext_code.size(bandOracleMap[_45584])
                                                    staticcall bandOracleMap[_45584].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71573) + ceil32(bandCurrencyKeys[_45584].length) + _59982 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81832 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82016 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82016] = mem[_81832]
                                                    mem[_82016 + 32] = mem[_81832 + 32]
                                                    mem[_82016 + 64] = mem[_81832 + 64]
                                                    _82926 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82926] = mem[_82016 + 5 len 27]
                                                    mem[_82926 + 32] = mem[_82016 + 59 len 5]
                                                    if block.timestamp >= mem[_82926 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83670 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45584
                                                        mem[32] = 52
                                                        currentRoundId[_45584]++
                                                        _84305 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84305] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84305 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45584] + 1
                                                        mem[32] = sha3(_45584, 53)
                                                        stor53[_45584][stor52[_45584] + 1].field_0 = Mask(216, 0, _83670)
                                                        stor53[_45584][stor52[_45584] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45584].length) + _59982 + _71573 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45584])
                                                    staticcall bandOracleMap[_45584].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71573) + ceil32(bandCurrencyKeys[_45584].length) + _59982 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81924 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82108 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82108] = mem[_81924]
                                                    mem[_82108 + 32] = mem[_81924 + 32]
                                                    mem[_82108 + 64] = mem[_81924 + 64]
                                                    _83208 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83208] = mem[_82108 + 5 len 27]
                                                    mem[_83208 + 32] = mem[_82108 + 59 len 5]
                                                    if block.timestamp >= mem[_83208 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84310 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45584
                                                        mem[32] = 52
                                                        currentRoundId[_45584]++
                                                        _84859 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84859] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84859 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45584] + 1
                                                        mem[32] = sha3(_45584, 53)
                                                        stor53[_45584][stor52[_45584] + 1].field_0 = Mask(216, 0, _84310)
                                                        stor53[_45584][stor52[_45584] + 1].field_216 = block.timestamp % 1099511627776
                                            else:
                                                mem[_59982 + bandCurrencyKeys[_45584].length + 100] = 0
                                                mem[_59982 + 36] = ceil32(bandCurrencyKeys[_45584].length) + 96
                                                _71803 = mem[_46227]
                                                mem[ceil32(bandCurrencyKeys[_45584].length) + _59982 + 100] = mem[_46227]
                                                s = 0
                                                while s < _71803:
                                                    mem[s + ceil32(bandCurrencyKeys[_45584].length) + _59982 + 132] = mem[_46227 + s + 32]
                                                    s = s + 32
                                                    continue 
                                                if ceil32(_71803) <= _71803:
                                                    require ext_code.size(bandOracleMap[_45584])
                                                    staticcall bandOracleMap[_45584].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71803) + ceil32(bandCurrencyKeys[_45584].length) + _59982 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81833 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82017 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82017] = mem[_81833]
                                                    mem[_82017 + 32] = mem[_81833 + 32]
                                                    mem[_82017 + 64] = mem[_81833 + 64]
                                                    _82932 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_82932] = mem[_82017 + 5 len 27]
                                                    mem[_82932 + 32] = mem[_82017 + 59 len 5]
                                                    if block.timestamp >= mem[_82932 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _83672 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45584
                                                        mem[32] = 52
                                                        currentRoundId[_45584]++
                                                        _84312 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84312] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84312 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45584] + 1
                                                        mem[32] = sha3(_45584, 53)
                                                        stor53[_45584][stor52[_45584] + 1].field_0 = Mask(216, 0, _83672)
                                                        stor53[_45584][stor52[_45584] + 1].field_216 = block.timestamp % 1099511627776
                                                else:
                                                    mem[ceil32(bandCurrencyKeys[_45584].length) + _59982 + _71803 + 132] = 0
                                                    require ext_code.size(bandOracleMap[_45584])
                                                    staticcall bandOracleMap[_45584].mem[mem[64] len 4] with:
                                                            gas gas_remaining wei
                                                           args mem[mem[64] + 4 len ceil32(_71803) + ceil32(bandCurrencyKeys[_45584].length) + _59982 + -mem[64] + 128]
                                                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _81925 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 96
                                                    _82109 = mem[64]
                                                    require mem[64] + 96 >= mem[64] and mem[64] + 96 <= test266151307()
                                                    mem[64] = mem[64] + 96
                                                    mem[_82109] = mem[_81925]
                                                    mem[_82109 + 32] = mem[_81925 + 32]
                                                    mem[_82109 + 64] = mem[_81925 + 64]
                                                    _83211 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_83211] = mem[_82109 + 5 len 27]
                                                    mem[_83211 + 32] = mem[_82109 + 59 len 5]
                                                    if block.timestamp >= mem[_83211 + 59 len 5]:
                                                        require idx < mem[(32 * arg3.length) + 128]
                                                        _84317 = mem[(32 * idx) + (32 * arg3.length) + 160]
                                                        mem[0] = _45584
                                                        mem[32] = 52
                                                        currentRoundId[_45584]++
                                                        _84865 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_84865] = mem[(32 * idx) + (32 * arg3.length) + 165 len 27]
                                                        mem[_84865 + 32] = block.timestamp % 1099511627776
                                                        mem[0] = currentRoundId[_45584] + 1
                                                        mem[32] = sha3(_45584, 53)
                                                        stor53[_45584][stor52[_45584] + 1].field_0 = Mask(216, 0, _84317)
                                                        stor53[_45584][stor52[_45584] + 1].field_216 = block.timestamp % 1099511627776
                                        idx = idx + 1
                                        continue 
                                    _45446 = mem[64]
                                    mem[mem[64]] = 64
                                    _45583 = mem[96]
                                    mem[mem[64] + 64] = mem[96]
                                    mem[mem[64] + 96 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
                                    var87001 = mem[96]
                                    var87002 = (32 * mem[96]) + 128
                                    mem[mem[64] + 32] = (32 * mem[96]) + 96
                                    _59566 = mem[(32 * arg3.length) + 128]
                                    mem[_45446 + (32 * mem[96]) + 96] = mem[(32 * arg3.length) + 128]
                                    mem[_45446 + (32 * _45583) + 128 len 32 * _59566] = mem[(32 * arg3.length) + 160 len 32 * _59566]
                                    var94001 = _59566
                                    emit 0x50f45835: mem[mem[64] len _45446 + (32 * _45583) + (32 * _59566) + -mem[64] + 128]
    if not uint8(stor0.field_8):
        uint8(stor0.field_8) = 0
        uint8(stor0.field_8) = 0
}



}
