contract main {




// =====================  Runtime code  =====================


#
#  - sub_4ff0b1a2(?)
#
function _fallback() payable {
    revert
}

function sub_1c205653(?) payable {
    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
    call 0xfd36e2c2a6789db23113685031d7f16329158384.claimVenus(address rg1) with:
         gas gas_remaining wei
        args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[100] = this.address
    require ext_code.size(0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63)
    staticcall 0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63.balanceOf(address rg1) with:
            gas gas_remaining wei
           args this.address
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    mem[ceil32(return_data.size) + 96] = 68
    mem[ceil32(return_data.size) + 132 len 28] = 0xf3c2476fbf0ed09dff00ea7f4ef252d
    mem[ceil32(return_data.size) + 128 len 4] = transfer(address rg1, uint256 rg2)
    if ext_code.size(0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63) <= 0:
        revert with 0, 'SafeERC20: call to non-contract'
    mem[ceil32(return_data.size) + 196 len 96] = transfer(address rg1, uint256 rg2), 0xf3c2476fbf0ed09dff00ea7, 0, ext_call.return_data[0], mem[ceil32(return_data.size) + 196 len 28]
    call 0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63.mem[ceil32(return_data.size) + 196 len 4] with:
         gas gas_remaining wei
        args mem[ceil32(return_data.size) + 200 len 64]
    if not return_data.size:
        if not ext_call.success:
            revert with 0, 'SafeERC20: low-level call failed'
        if ext_call.return_data[0] > 0:
            require ext_call.return_data[0] >= 32
            require 0, mem[132 len 28] == bool(0, mem[132 len 28])
            if not 0, mem[132 len 28]:
                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
    else:
        mem[ceil32(return_data.size) + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'SafeERC20: low-level call failed'
        if return_data.size > 0:
            require return_data.size >= 32
            require mem[ceil32(return_data.size) + 228] == bool(mem[ceil32(return_data.size) + 228])
            if not mem[ceil32(return_data.size) + 228]:
                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
}

function sub_5afcb01d(?) payable {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == address(arg2)
    require arg3 == address(arg3)
    mem[100] = arg1
    require ext_code.size(address(arg2))
    call address(arg2).redeemUnderlying(uint256 rg1) with:
         gas gas_remaining wei
        args arg1
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg2):
        call 0x0f3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1 with:
           value arg1 wei
             gas 2300 * is_zero(value) wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
    else:
        mem[ceil32(return_data.size) + 96] = 68
        mem[ceil32(return_data.size) + 132 len 28] = 0xf3c2476fbf0ed09dff00ea7f4ef252d
        mem[ceil32(return_data.size) + 128 len 4] = transfer(address rg1, uint256 rg2)
        if ext_code.size(address(arg3)) <= 0:
            revert with 0, 'SafeERC20: call to non-contract'
        mem[ceil32(return_data.size) + 196 len 96] = transfer(address rg1, uint256 rg2), 0xf3c2476fbf0ed09dff00ea7, 0, arg1, mem[ceil32(return_data.size) + 196 len 28]
        call address(arg3).mem[ceil32(return_data.size) + 196 len 4] with:
             gas gas_remaining wei
            args mem[ceil32(return_data.size) + 200 len 64]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'SafeERC20: low-level call failed'
            if ext_call.return_data[0] > 0:
                require ext_call.return_data[0] >= 32
                require uint32(arg1), mem[132 len 28] == bool(uint32(arg1), mem[132 len 28])
                if not uint32(arg1), mem[132 len 28]:
                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
        else:
            mem[ceil32(return_data.size) + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'SafeERC20: low-level call failed'
            if return_data.size > 0:
                require return_data.size >= 32
                require mem[ceil32(return_data.size) + 228] == bool(mem[ceil32(return_data.size) + 228])
                if not mem[ceil32(return_data.size) + 228]:
                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
}

function enterMarkets(address[] arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require (32 * arg1.length) + 128 <= test266151307() and (32 * arg1.length) + 128 >= 96
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    idx = 0
    s = arg1 + 36
    t = 128
    while idx < arg1.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[(32 * arg1.length) + 128] = 0xc299823800000000000000000000000000000000000000000000000000000000
    mem[(32 * arg1.length) + 132] = 32
    mem[(32 * arg1.length) + 164] = arg1.length
    idx = 0
    s = 128
    t = (32 * arg1.length) + 196
    while idx < arg1.length:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
    call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
         gas gas_remaining wei
        args mem[(32 * arg1.length) + 132 len (96 * arg1.length) + 64]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[(32 * arg1.length) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = (32 * arg1.length) + ceil32(return_data.size) + 128
    require return_data.size >= 32
    _23 = mem[(32 * arg1.length) + 128 len 4], 0
    require mem[(32 * arg1.length) + 128 len 4], 0 <= test266151307()
    require (32 * arg1.length) + mem[(32 * arg1.length) + 128 len 4], 0 + 159 < (32 * arg1.length) + return_data.size + 128
    _24 = mem[(32 * arg1.length) + mem[(32 * arg1.length) + 128 len 4], 0 + 128]
    require mem[(32 * arg1.length) + mem[(32 * arg1.length) + 128 len 4], 0 + 128] <= test266151307()
    require (32 * arg1.length) + ceil32(return_data.size) + (32 * mem[(32 * arg1.length) + mem[(32 * arg1.length) + 128 len 4], 0 + 128]) + 160 <= test266151307() and (32 * mem[(32 * arg1.length) + mem[(32 * arg1.length) + 128 len 4], 0 + 128]) + 32 >= 0
    mem[64] = (32 * arg1.length) + ceil32(return_data.size) + (32 * mem[(32 * arg1.length) + mem[(32 * arg1.length) + 128 len 4], 0 + 128]) + 160
    mem[(32 * arg1.length) + ceil32(return_data.size) + 128] = mem[(32 * arg1.length) + mem[(32 * arg1.length) + 128 len 4], 0 + 128]
    require _23 + (32 * _24) + 32 <= return_data.size
    idx = 0
    s = (32 * arg1.length) + _23 + 160
    t = (32 * arg1.length) + ceil32(return_data.size) + 160
    while idx < _24:
        require mem[s] == mem[s]
        mem[t] = mem[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
}

function sub_657599c2(?) payable {
    require calldata.size - 4 >= 128
    require arg1 == address(arg1)
    require arg2 == arg2
    require arg3 == bool(arg3)
    require arg4 == bool(arg4)
    if not arg3:
        require ext_code.size(address(arg1))
        call address(arg1).borrowBalanceCurrent(address rg1) with:
             gas gas_remaining wei
            args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[0]
        require ext_code.size(address(arg1))
        if arg2 <= ext_call.return_data[0]:
            call address(arg1).repayBorrow(uint256 rg1) with:
                 gas gas_remaining wei
                args arg2
        else:
            call address(arg1).repayBorrow(uint256 rg1) with:
                 gas gas_remaining wei
                args ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[0]
    else:
        require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
        staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[0]
        require ext_call.return_data[32] == ext_call.return_data[32]
        require ext_call.return_data[64] == ext_call.return_data[64]
        if not ext_call.return_data[32]:
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                require ext_code.size(address(arg1))
                if arg2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    call address(arg1).borrow(uint256 rg1) with:
                         gas gas_remaining wei
                        args arg2
                else:
                    call address(arg1).borrow(uint256 rg1) with:
                         gas gas_remaining wei
                        args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
            else:
                if 10^18 * ext_call.return_data[32] / 10^18 != ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) < 10^18 * ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                require ext_code.size(address(arg1))
                if arg2 <= (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    call address(arg1).borrow(uint256 rg1) with:
                         gas gas_remaining wei
                        args arg2
                else:
                    call address(arg1).borrow(uint256 rg1) with:
                         gas gas_remaining wei
                        args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
        else:
            require ext_call.return_data[32]
            if 10^17 * ext_call.return_data[32] / ext_call.return_data[32] != 10^17:
                revert with 0, 'math-not-safe'
            if (10^17 * ext_call.return_data[32]) + 5 * 10^17 < 10^17 * ext_call.return_data[32]:
                revert with 0, 'math-not-safe'
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] - ((10^17 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                require ext_code.size(address(arg1))
                if arg2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    call address(arg1).borrow(uint256 rg1) with:
                         gas gas_remaining wei
                        args arg2
                else:
                    call address(arg1).borrow(uint256 rg1) with:
                         gas gas_remaining wei
                        args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
            else:
                if (10^18 * ext_call.return_data[32]) - (10^18 * (10^17 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) / 10^18 != ext_call.return_data[32] - ((10^17 * ext_call.return_data[32]) + 5 * 10^17 / 10^18):
                    revert with 0, 'math-not-safe'
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                require ext_code.size(address(arg1))
                if arg2 <= (10^18 * ext_call.return_data[32]) - (10^18 * (10^17 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    call address(arg1).borrow(uint256 rg1) with:
                         gas gas_remaining wei
                        args arg2
                else:
                    call address(arg1).borrow(uint256 rg1) with:
                         gas gas_remaining wei
                        args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^17 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[0]
        if arg4:
            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                call 0x0f3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1 with:
                   value eth.balance(this.address) wei
                     gas 2300 * is_zero(value) wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
            else:
                require ext_code.size(address(arg1))
                staticcall address(arg1).underlying() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                require ext_code.size(address(ext_call.return_data[0]))
                staticcall address(ext_call.return_data[0]).balanceOf(address rg1) with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                if ext_code.size(address(ext_call.return_data[0])) <= 0:
                    revert with 0, 'SafeERC20: call to non-contract'
                mem[(7 * ceil32(return_data.size)) + 196 len 96] = transfer(address rg1, uint256 rg2), 0xf3c2476fbf0ed09dff00ea7, 0, ext_call.return_data[0], mem[(7 * ceil32(return_data.size)) + 196 len 28]
                call address(ext_call.return_data[0]).mem[(7 * ceil32(return_data.size)) + 196 len 4] with:
                     gas gas_remaining wei
                    args mem[(7 * ceil32(return_data.size)) + 200 len 64]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'SafeERC20: low-level call failed'
                    if ext_call.return_data[0] > 0:
                        require ext_call.return_data[0] >= 32
                        require ext_call.return_data[32] == bool(ext_call.return_data[32])
                        if not ext_call.return_data[32]:
                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                else:
                    mem[(7 * ceil32(return_data.size)) + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size > 0:
                        require return_data.size >= 32
                        require mem[(7 * ceil32(return_data.size)) + 228] == bool(mem[(7 * ceil32(return_data.size)) + 228])
                        if not mem[(7 * ceil32(return_data.size)) + 228]:
                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
}

function sub_2ebdc22e(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == arg2
    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
    staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_call.return_data[32] == ext_call.return_data[32]
    require ext_call.return_data[64] == ext_call.return_data[64]
    if not ext_call.return_data[32]:
        require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
        staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                gas gas_remaining wei
               args address(arg1)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[0]
        if ext_call.return_data[32] > ext_call.return_data[32]:
            if ext_call.return_data[0] / 2 < 0:
                revert with 0, 'math-not-safe'
            require ext_call.return_data[0]
            require ext_code.size(address(arg1))
            if arg2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                call address(arg1).borrow(uint256 rg1) with:
                     gas gas_remaining wei
                    args arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                require ext_code.size(address(arg1))
                if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                    call address(arg1).mint() with:
                       value arg2 wei
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    call address(arg1).mint(uint256 rg1) with:
                         gas gas_remaining wei
                        args arg2
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
            else:
                call address(arg1).borrow(uint256 rg1) with:
                     gas gas_remaining wei
                    args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                require ext_code.size(address(arg1))
                if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                    call address(arg1).mint() with:
                       value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    call address(arg1).mint(uint256 rg1) with:
                         gas gas_remaining wei
                        args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
        else:
            if 10^18 * ext_call.return_data[32] / 10^18 != ext_call.return_data[32]:
                revert with 0, 'math-not-safe'
            if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) < 10^18 * ext_call.return_data[32]:
                revert with 0, 'math-not-safe'
            require ext_call.return_data[0]
            require ext_code.size(address(arg1))
            if arg2 <= (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                call address(arg1).borrow(uint256 rg1) with:
                     gas gas_remaining wei
                    args arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                require ext_code.size(address(arg1))
                if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                    call address(arg1).mint() with:
                       value arg2 wei
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    call address(arg1).mint(uint256 rg1) with:
                         gas gas_remaining wei
                        args arg2
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
            else:
                call address(arg1).borrow(uint256 rg1) with:
                     gas gas_remaining wei
                    args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                require ext_code.size(address(arg1))
                if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                    call address(arg1).mint() with:
                       value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    call address(arg1).mint(uint256 rg1) with:
                         gas gas_remaining wei
                        args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
    else:
        require ext_call.return_data[32]
        if 10^16 * ext_call.return_data[32] / ext_call.return_data[32] != 10^16:
            revert with 0, 'math-not-safe'
        if (10^16 * ext_call.return_data[32]) + 5 * 10^17 < 10^16 * ext_call.return_data[32]:
            revert with 0, 'math-not-safe'
        require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
        staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                gas gas_remaining wei
               args address(arg1)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[0]
        if ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) > ext_call.return_data[32]:
            if ext_call.return_data[0] / 2 < 0:
                revert with 0, 'math-not-safe'
            require ext_call.return_data[0]
            require ext_code.size(address(arg1))
            if arg2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                call address(arg1).borrow(uint256 rg1) with:
                     gas gas_remaining wei
                    args arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                require ext_code.size(address(arg1))
                if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                    call address(arg1).mint() with:
                       value arg2 wei
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    call address(arg1).mint(uint256 rg1) with:
                         gas gas_remaining wei
                        args arg2
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
            else:
                call address(arg1).borrow(uint256 rg1) with:
                     gas gas_remaining wei
                    args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                require ext_code.size(address(arg1))
                if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                    call address(arg1).mint() with:
                       value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    call address(arg1).mint(uint256 rg1) with:
                         gas gas_remaining wei
                        args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
        else:
            if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) / 10^18 != ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18):
                revert with 0, 'math-not-safe'
            if ext_call.return_data[0] / 2 < 0:
                revert with 0, 'math-not-safe'
            require ext_call.return_data[0]
            require ext_code.size(address(arg1))
            if arg2 <= (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                call address(arg1).borrow(uint256 rg1) with:
                     gas gas_remaining wei
                    args arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                require ext_code.size(address(arg1))
                if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                    call address(arg1).mint() with:
                       value arg2 wei
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    call address(arg1).mint(uint256 rg1) with:
                         gas gas_remaining wei
                        args arg2
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
            else:
                call address(arg1).borrow(uint256 rg1) with:
                     gas gas_remaining wei
                    args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                require ext_code.size(address(arg1))
                if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                    call address(arg1).mint() with:
                       value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                         gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                else:
                    call address(arg1).mint(uint256 rg1) with:
                         gas gas_remaining wei
                        args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
}

function sub_07c4902f(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == arg2
    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
    staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_call.return_data[32] == ext_call.return_data[32]
    require ext_call.return_data[64] == ext_call.return_data[64]
    if not ext_call.return_data[32]:
        require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
        staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                gas gas_remaining wei
               args address(arg1)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[0]
        if ext_call.return_data[32] > ext_call.return_data[32]:
            if ext_call.return_data[0] / 2 < 0:
                revert with 0, 'math-not-safe'
            require ext_call.return_data[0]
            require ext_code.size(address(arg1))
            call address(arg1).borrowBalanceCurrent(address rg1) with:
                 gas gas_remaining wei
                args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            require ext_code.size(address(arg1))
            if arg2 <= ext_call.return_data[0]:
                if arg2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    call address(arg1).redeemUnderlying(uint256 rg1) with:
                         gas gas_remaining wei
                        args arg2
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    require ext_code.size(address(arg1))
                    if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                        call address(arg1).repayBorrow() with:
                           value arg2 wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        call address(arg1).repayBorrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args arg2
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                else:
                    call address(arg1).redeemUnderlying(uint256 rg1) with:
                         gas gas_remaining wei
                        args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    require ext_code.size(address(arg1))
                    if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                        call address(arg1).repayBorrow() with:
                           value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        call address(arg1).repayBorrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
            else:
                if ext_call.return_data[0] <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    call address(arg1).redeemUnderlying(uint256 rg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    require ext_code.size(address(arg1))
                    if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                        call address(arg1).repayBorrow() with:
                           value ext_call.return_data[0] wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        call address(arg1).repayBorrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                else:
                    call address(arg1).redeemUnderlying(uint256 rg1) with:
                         gas gas_remaining wei
                        args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    require ext_code.size(address(arg1))
                    if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                        call address(arg1).repayBorrow() with:
                           value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        call address(arg1).repayBorrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
        else:
            if 10^18 * ext_call.return_data[32] / 10^18 != ext_call.return_data[32]:
                revert with 0, 'math-not-safe'
            if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) < 10^18 * ext_call.return_data[32]:
                revert with 0, 'math-not-safe'
            require ext_call.return_data[0]
            require ext_code.size(address(arg1))
            call address(arg1).borrowBalanceCurrent(address rg1) with:
                 gas gas_remaining wei
                args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            require ext_code.size(address(arg1))
            if arg2 <= ext_call.return_data[0]:
                if arg2 <= (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    call address(arg1).redeemUnderlying(uint256 rg1) with:
                         gas gas_remaining wei
                        args arg2
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    require ext_code.size(address(arg1))
                    if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                        call address(arg1).repayBorrow() with:
                           value arg2 wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        call address(arg1).repayBorrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args arg2
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                else:
                    call address(arg1).redeemUnderlying(uint256 rg1) with:
                         gas gas_remaining wei
                        args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    require ext_code.size(address(arg1))
                    if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                        call address(arg1).repayBorrow() with:
                           value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        call address(arg1).repayBorrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
            else:
                if ext_call.return_data[0] <= (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    call address(arg1).redeemUnderlying(uint256 rg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    require ext_code.size(address(arg1))
                    if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                        call address(arg1).repayBorrow() with:
                           value ext_call.return_data[0] wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        call address(arg1).repayBorrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                else:
                    call address(arg1).redeemUnderlying(uint256 rg1) with:
                         gas gas_remaining wei
                        args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    require ext_code.size(address(arg1))
                    if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                        call address(arg1).repayBorrow() with:
                           value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        call address(arg1).repayBorrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
    else:
        require ext_call.return_data[32]
        if 10^16 * ext_call.return_data[32] / ext_call.return_data[32] != 10^16:
            revert with 0, 'math-not-safe'
        if (10^16 * ext_call.return_data[32]) + 5 * 10^17 < 10^16 * ext_call.return_data[32]:
            revert with 0, 'math-not-safe'
        require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
        staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                gas gas_remaining wei
               args address(arg1)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[0]
        if ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) > ext_call.return_data[32]:
            if ext_call.return_data[0] / 2 < 0:
                revert with 0, 'math-not-safe'
            require ext_call.return_data[0]
            require ext_code.size(address(arg1))
            call address(arg1).borrowBalanceCurrent(address rg1) with:
                 gas gas_remaining wei
                args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            require ext_code.size(address(arg1))
            if arg2 <= ext_call.return_data[0]:
                if arg2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    call address(arg1).redeemUnderlying(uint256 rg1) with:
                         gas gas_remaining wei
                        args arg2
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    require ext_code.size(address(arg1))
                    if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                        call address(arg1).repayBorrow() with:
                           value arg2 wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        call address(arg1).repayBorrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args arg2
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                else:
                    call address(arg1).redeemUnderlying(uint256 rg1) with:
                         gas gas_remaining wei
                        args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    require ext_code.size(address(arg1))
                    if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                        call address(arg1).repayBorrow() with:
                           value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        call address(arg1).repayBorrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
            else:
                if ext_call.return_data[0] <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    call address(arg1).redeemUnderlying(uint256 rg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    require ext_code.size(address(arg1))
                    if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                        call address(arg1).repayBorrow() with:
                           value ext_call.return_data[0] wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        call address(arg1).repayBorrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                else:
                    call address(arg1).redeemUnderlying(uint256 rg1) with:
                         gas gas_remaining wei
                        args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    require ext_code.size(address(arg1))
                    if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                        call address(arg1).repayBorrow() with:
                           value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        call address(arg1).repayBorrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
        else:
            if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) / 10^18 != ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18):
                revert with 0, 'math-not-safe'
            if ext_call.return_data[0] / 2 < 0:
                revert with 0, 'math-not-safe'
            require ext_call.return_data[0]
            require ext_code.size(address(arg1))
            call address(arg1).borrowBalanceCurrent(address rg1) with:
                 gas gas_remaining wei
                args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            require ext_code.size(address(arg1))
            if arg2 <= ext_call.return_data[0]:
                if arg2 <= (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    call address(arg1).redeemUnderlying(uint256 rg1) with:
                         gas gas_remaining wei
                        args arg2
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    require ext_code.size(address(arg1))
                    if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                        call address(arg1).repayBorrow() with:
                           value arg2 wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        call address(arg1).repayBorrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args arg2
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                else:
                    call address(arg1).redeemUnderlying(uint256 rg1) with:
                         gas gas_remaining wei
                        args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    require ext_code.size(address(arg1))
                    if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                        call address(arg1).repayBorrow() with:
                           value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        call address(arg1).repayBorrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
            else:
                if ext_call.return_data[0] <= (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    call address(arg1).redeemUnderlying(uint256 rg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    require ext_code.size(address(arg1))
                    if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                        call address(arg1).repayBorrow() with:
                           value ext_call.return_data[0] wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        call address(arg1).repayBorrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                else:
                    call address(arg1).redeemUnderlying(uint256 rg1) with:
                         gas gas_remaining wei
                        args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    require ext_code.size(address(arg1))
                    if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1):
                        call address(arg1).repayBorrow() with:
                           value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                             gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        call address(arg1).repayBorrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
}

function withdrawEverything() payable {
    mem[96] = 0xb0772d0b00000000000000000000000000000000000000000000000000000000
    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
    staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAllMarkets() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(return_data.size) + 96
    require return_data.size >= 32
    _4 = mem[96]
    require mem[96] <= test266151307()
    require mem[96] + 127 < return_data.size + 96
    _5 = mem[mem[96] + 96]
    require mem[mem[96] + 96] <= test266151307()
    require ceil32(return_data.size) + (32 * mem[mem[96] + 96]) + 128 <= test266151307() and (32 * mem[mem[96] + 96]) + 32 >= 0
    mem[64] = ceil32(return_data.size) + (32 * mem[mem[96] + 96]) + 128
    mem[ceil32(return_data.size) + 96] = _5
    require _4 + (32 * _5) + 32 <= return_data.size
    idx = 0
    s = _4 + 128
    t = ceil32(return_data.size) + 128
    while idx < _5:
        require mem[s] == mem[s + 12 len 20]
        mem[t] = mem[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    idx = 0
    while idx < _5:
        require idx < mem[ceil32(return_data.size) + 96]
        require idx < mem[ceil32(return_data.size) + 96]
        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
            _1632 = mem[(32 * idx) + ceil32(return_data.size) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
            call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                 gas gas_remaining wei
                args address(_1632)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1640 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_1640] == mem[_1640]
        else:
            require ext_code.size(mem[(32 * idx) + ceil32(return_data.size) + 140 len 20])
            staticcall mem[(32 * idx) + ceil32(return_data.size) + 140 len 20].underlying() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1637 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1638 = mem[_1637]
            require mem[_1637] == mem[_1637 + 12 len 20]
            require idx < mem[ceil32(return_data.size) + 96]
            _1643 = mem[(32 * idx) + ceil32(return_data.size) + 128]
            _1644 = mem[64]
            mem[mem[64] + 36] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
            mem[mem[64] + 68] = 0
            _1645 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_1645 + 32] = mem[_1645 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
            if ext_code.size(address(_1638)) <= 0:
                revert with 0, 'SafeERC20: call to non-contract'
            _1649 = mem[_1645]
            s = 0
            while s < _1649:
                mem[_1644 + s + 100] = mem[_1645 + s + 32]
                s = s + 32
                continue 
            if ceil32(_1649) <= _1649:
                call address(_1638).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _1644 + _1649 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'SafeERC20: low-level call failed'
                    if mem[96] <= 0:
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(_1643)
                        require ext_code.size(address(_1638))
                        staticcall address(_1638).allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_1643)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2481 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_2481] == mem[_2481]
                        if mem[_2481]:
                            revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                        _2493 = mem[64]
                        mem[mem[64] + 36] = address(_1643)
                        mem[mem[64] + 68] = -1
                        _2513 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_2513 + 32] = mem[_2513 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                        if ext_code.size(address(_1638)) <= 0:
                            revert with 0, 'SafeERC20: call to non-contract'
                        _2539 = mem[_2513]
                        s = 0
                        while s < _2539:
                            mem[_2493 + s + 100] = mem[_2513 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_2539) <= _2539:
                            call address(_1638).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2493 + _2539 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3405 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3405)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3581 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3581] == mem[_3581]
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3629 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3629)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3805 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3805] == mem[_3805]
                            else:
                                _3237 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_3237] = return_data.size
                                mem[_3237 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3408 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3408)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3582 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3582] == mem[_3582]
                                else:
                                    require return_data.size >= 32
                                    require mem[_3237 + 32] == bool(mem[_3237 + 32])
                                    if not mem[_3237 + 32]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3632 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3632)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3806 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3806] == mem[_3806]
                        else:
                            mem[_2493 + _2539 + 100] = 0
                            call address(_1638).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2493 + _2539 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3469 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3469)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3599 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3599] == mem[_3599]
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3695 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3695)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3821 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3821] == mem[_3821]
                            else:
                                _3253 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_3253] = return_data.size
                                mem[_3253 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3472 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3472)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3600 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3600] == mem[_3600]
                                else:
                                    require return_data.size >= 32
                                    require mem[_3253 + 32] == bool(mem[_3253 + 32])
                                    if not mem[_3253 + 32]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3698 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3698)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3822 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3822] == mem[_3822]
                    else:
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(_1643)
                        require ext_code.size(address(_1638))
                        staticcall address(_1638).allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_1643)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2495 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_2495] == mem[_2495]
                        if mem[_2495]:
                            revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                        _2515 = mem[64]
                        mem[mem[64] + 36] = address(_1643)
                        mem[mem[64] + 68] = -1
                        _2549 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_2549 + 32] = mem[_2549 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                        if ext_code.size(address(_1638)) <= 0:
                            revert with 0, 'SafeERC20: call to non-contract'
                        _2578 = mem[_2549]
                        s = 0
                        while s < _2578:
                            mem[_2515 + s + 100] = mem[_2549 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_2578) <= _2578:
                            call address(_1638).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2515 + _2578 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3413 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3413)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3583 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3583] == mem[_3583]
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3637 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3637)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3807 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3807] == mem[_3807]
                            else:
                                _3239 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_3239] = return_data.size
                                mem[_3239 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3416 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3416)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3584 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3584] == mem[_3584]
                                else:
                                    require return_data.size >= 32
                                    require mem[_3239 + 32] == bool(mem[_3239 + 32])
                                    if not mem[_3239 + 32]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3640 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3640)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3808 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3808] == mem[_3808]
                        else:
                            mem[_2515 + _2578 + 100] = 0
                            call address(_1638).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2515 + _2578 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3475 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3475)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3603 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3603] == mem[_3603]
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3703 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3703)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3823 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3823] == mem[_3823]
                            else:
                                _3254 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_3254] = return_data.size
                                mem[_3254 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3478 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3478)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3604 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3604] == mem[_3604]
                                else:
                                    require return_data.size >= 32
                                    require mem[_3254 + 32] == bool(mem[_3254 + 32])
                                    if not mem[_3254 + 32]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3706 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3706)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3824 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3824] == mem[_3824]
                else:
                    _2438 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_2438] = return_data.size
                    mem[_2438 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size <= 0:
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(_1643)
                        require ext_code.size(address(_1638))
                        staticcall address(_1638).allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_1643)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2482 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_2482] == mem[_2482]
                        if mem[_2482]:
                            revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                        _2496 = mem[64]
                        mem[mem[64] + 36] = address(_1643)
                        mem[mem[64] + 68] = -1
                        _2517 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_2517 + 32] = mem[_2517 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                        if ext_code.size(address(_1638)) <= 0:
                            revert with 0, 'SafeERC20: call to non-contract'
                        _2540 = mem[_2517]
                        s = 0
                        while s < _2540:
                            mem[_2496 + s + 100] = mem[_2517 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_2540) <= _2540:
                            call address(_1638).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2496 + _2540 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3421 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3421)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3585 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3585] == mem[_3585]
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3645 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3645)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3809 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3809] == mem[_3809]
                            else:
                                _3241 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_3241] = return_data.size
                                mem[_3241 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3424 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3424)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3586 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3586] == mem[_3586]
                                else:
                                    require return_data.size >= 32
                                    require mem[_3241 + 32] == bool(mem[_3241 + 32])
                                    if not mem[_3241 + 32]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3648 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3648)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3810 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3810] == mem[_3810]
                        else:
                            mem[_2496 + _2540 + 100] = 0
                            call address(_1638).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2496 + _2540 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3481 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3481)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3607 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3607] == mem[_3607]
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3711 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3711)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3825 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3825] == mem[_3825]
                            else:
                                _3255 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_3255] = return_data.size
                                mem[_3255 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3484 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3484)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3608 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3608] == mem[_3608]
                                else:
                                    require return_data.size >= 32
                                    require mem[_3255 + 32] == bool(mem[_3255 + 32])
                                    if not mem[_3255 + 32]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3714 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3714)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3826 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3826] == mem[_3826]
                    else:
                        require return_data.size >= 32
                        require mem[_2438 + 32] == bool(mem[_2438 + 32])
                        if not mem[_2438 + 32]:
                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(_1643)
                        require ext_code.size(address(_1638))
                        staticcall address(_1638).allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_1643)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2498 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_2498] == mem[_2498]
                        if mem[_2498]:
                            revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                        _2519 = mem[64]
                        mem[mem[64] + 36] = address(_1643)
                        mem[mem[64] + 68] = -1
                        _2551 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_2551 + 32] = mem[_2551 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                        if ext_code.size(address(_1638)) <= 0:
                            revert with 0, 'SafeERC20: call to non-contract'
                        _2580 = mem[_2551]
                        s = 0
                        while s < _2580:
                            mem[_2519 + s + 100] = mem[_2551 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_2580) <= _2580:
                            call address(_1638).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2519 + _2580 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3429 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3429)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3587 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3587] == mem[_3587]
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3653 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3653)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3811 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3811] == mem[_3811]
                            else:
                                _3243 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_3243] = return_data.size
                                mem[_3243 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3432 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3432)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3588 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3588] == mem[_3588]
                                else:
                                    require return_data.size >= 32
                                    require mem[_3243 + 32] == bool(mem[_3243 + 32])
                                    if not mem[_3243 + 32]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3656 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3656)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3812 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3812] == mem[_3812]
                        else:
                            mem[_2519 + _2580 + 100] = 0
                            call address(_1638).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2519 + _2580 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3487 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3487)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3611 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3611] == mem[_3611]
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3719 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3719)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3827 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3827] == mem[_3827]
                            else:
                                _3256 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_3256] = return_data.size
                                mem[_3256 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3490 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3490)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3612 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3612] == mem[_3612]
                                else:
                                    require return_data.size >= 32
                                    require mem[_3256 + 32] == bool(mem[_3256 + 32])
                                    if not mem[_3256 + 32]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3722 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3722)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3828 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3828] == mem[_3828]
            else:
                mem[_1644 + _1649 + 100] = 0
                call address(_1638).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _1644 + _1649 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'SafeERC20: low-level call failed'
                    if mem[96] <= 0:
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(_1643)
                        require ext_code.size(address(_1638))
                        staticcall address(_1638).allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_1643)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2483 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_2483] == mem[_2483]
                        if mem[_2483]:
                            revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                        _2499 = mem[64]
                        mem[mem[64] + 36] = address(_1643)
                        mem[mem[64] + 68] = -1
                        _2521 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_2521 + 32] = mem[_2521 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                        if ext_code.size(address(_1638)) <= 0:
                            revert with 0, 'SafeERC20: call to non-contract'
                        _2543 = mem[_2521]
                        s = 0
                        while s < _2543:
                            mem[_2499 + s + 100] = mem[_2521 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_2543) <= _2543:
                            call address(_1638).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2499 + _2543 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3437 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3437)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3589 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3589] == mem[_3589]
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3661 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3661)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3813 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3813] == mem[_3813]
                            else:
                                _3245 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_3245] = return_data.size
                                mem[_3245 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3440 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3440)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3590 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3590] == mem[_3590]
                                else:
                                    require return_data.size >= 32
                                    require mem[_3245 + 32] == bool(mem[_3245 + 32])
                                    if not mem[_3245 + 32]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3664 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3664)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3814 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3814] == mem[_3814]
                        else:
                            mem[_2499 + _2543 + 100] = 0
                            call address(_1638).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2499 + _2543 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3493 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3493)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3615 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3615] == mem[_3615]
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3727 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3727)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3829 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3829] == mem[_3829]
                            else:
                                _3257 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_3257] = return_data.size
                                mem[_3257 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3496 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3496)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3616 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3616] == mem[_3616]
                                else:
                                    require return_data.size >= 32
                                    require mem[_3257 + 32] == bool(mem[_3257 + 32])
                                    if not mem[_3257 + 32]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3730 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3730)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3830 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3830] == mem[_3830]
                    else:
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(_1643)
                        require ext_code.size(address(_1638))
                        staticcall address(_1638).allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_1643)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2501 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_2501] == mem[_2501]
                        if mem[_2501]:
                            revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                        _2523 = mem[64]
                        mem[mem[64] + 36] = address(_1643)
                        mem[mem[64] + 68] = -1
                        _2555 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_2555 + 32] = mem[_2555 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                        if ext_code.size(address(_1638)) <= 0:
                            revert with 0, 'SafeERC20: call to non-contract'
                        _2594 = mem[_2555]
                        s = 0
                        while s < _2594:
                            mem[_2523 + s + 100] = mem[_2555 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_2594) <= _2594:
                            call address(_1638).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2523 + _2594 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3445 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3445)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3591 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3591] == mem[_3591]
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3669 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3669)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3815 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3815] == mem[_3815]
                            else:
                                _3247 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_3247] = return_data.size
                                mem[_3247 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3448 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3448)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3592 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3592] == mem[_3592]
                                else:
                                    require return_data.size >= 32
                                    require mem[_3247 + 32] == bool(mem[_3247 + 32])
                                    if not mem[_3247 + 32]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3672 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3672)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3816 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3816] == mem[_3816]
                        else:
                            mem[_2523 + _2594 + 100] = 0
                            call address(_1638).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2523 + _2594 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3499 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3499)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3619 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3619] == mem[_3619]
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3735 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3735)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3831 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3831] == mem[_3831]
                            else:
                                _3258 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_3258] = return_data.size
                                mem[_3258 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3502 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3502)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3620 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3620] == mem[_3620]
                                else:
                                    require return_data.size >= 32
                                    require mem[_3258 + 32] == bool(mem[_3258 + 32])
                                    if not mem[_3258 + 32]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3738 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3738)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3832 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3832] == mem[_3832]
                else:
                    _2440 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_2440] = return_data.size
                    mem[_2440 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size <= 0:
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(_1643)
                        require ext_code.size(address(_1638))
                        staticcall address(_1638).allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_1643)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2484 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_2484] == mem[_2484]
                        if mem[_2484]:
                            revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                        _2502 = mem[64]
                        mem[mem[64] + 36] = address(_1643)
                        mem[mem[64] + 68] = -1
                        _2525 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_2525 + 32] = mem[_2525 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                        if ext_code.size(address(_1638)) <= 0:
                            revert with 0, 'SafeERC20: call to non-contract'
                        _2544 = mem[_2525]
                        s = 0
                        while s < _2544:
                            mem[_2502 + s + 100] = mem[_2525 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_2544) <= _2544:
                            call address(_1638).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2502 + _2544 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3453 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3453)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3593 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3593] == mem[_3593]
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3677 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3677)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3817 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3817] == mem[_3817]
                            else:
                                _3249 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_3249] = return_data.size
                                mem[_3249 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3456 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3456)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3594 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3594] == mem[_3594]
                                else:
                                    require return_data.size >= 32
                                    require mem[_3249 + 32] == bool(mem[_3249 + 32])
                                    if not mem[_3249 + 32]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3680 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3680)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3818 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3818] == mem[_3818]
                        else:
                            mem[_2502 + _2544 + 100] = 0
                            call address(_1638).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2502 + _2544 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3505 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3505)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3623 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3623] == mem[_3623]
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3743 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3743)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3833 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3833] == mem[_3833]
                            else:
                                _3259 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_3259] = return_data.size
                                mem[_3259 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3508 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3508)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3624 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3624] == mem[_3624]
                                else:
                                    require return_data.size >= 32
                                    require mem[_3259 + 32] == bool(mem[_3259 + 32])
                                    if not mem[_3259 + 32]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3746 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3746)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3834 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3834] == mem[_3834]
                    else:
                        require return_data.size >= 32
                        require mem[_2440 + 32] == bool(mem[_2440 + 32])
                        if not mem[_2440 + 32]:
                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        mem[mem[64] + 4] = this.address
                        mem[mem[64] + 36] = address(_1643)
                        require ext_code.size(address(_1638))
                        staticcall address(_1638).allowance(address rg1, address rg2) with:
                                gas gas_remaining wei
                               args address(this.address), address(_1643)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2504 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_2504] == mem[_2504]
                        if mem[_2504]:
                            revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                        _2527 = mem[64]
                        mem[mem[64] + 36] = address(_1643)
                        mem[mem[64] + 68] = -1
                        _2557 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_2557 + 32] = mem[_2557 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                        if ext_code.size(address(_1638)) <= 0:
                            revert with 0, 'SafeERC20: call to non-contract'
                        _2596 = mem[_2557]
                        s = 0
                        while s < _2596:
                            mem[_2527 + s + 100] = mem[_2557 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_2596) <= _2596:
                            call address(_1638).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2527 + _2596 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3461 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3461)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3595 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3595] == mem[_3595]
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3685 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3685)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3819 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3819] == mem[_3819]
                            else:
                                _3251 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_3251] = return_data.size
                                mem[_3251 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3464 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3464)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3596 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3596] == mem[_3596]
                                else:
                                    require return_data.size >= 32
                                    require mem[_3251 + 32] == bool(mem[_3251 + 32])
                                    if not mem[_3251 + 32]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3688 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3688)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3820 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3820] == mem[_3820]
                        else:
                            mem[_2527 + _2596 + 100] = 0
                            call address(_1638).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _2527 + _2596 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if mem[96] <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3511 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3511)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3627 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3627] == mem[_3627]
                                else:
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3751 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3751)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3835 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3835] == mem[_3835]
                            else:
                                _3260 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_3260] = return_data.size
                                mem[_3260 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size <= 0:
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3514 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3514)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3628 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3628] == mem[_3628]
                                else:
                                    require return_data.size >= 32
                                    require mem[_3260 + 32] == bool(mem[_3260 + 32])
                                    if not mem[_3260 + 32]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    require idx < mem[ceil32(return_data.size) + 96]
                                    _3754 = mem[(32 * idx) + ceil32(return_data.size) + 128]
                                    mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
                                    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                    call 0xfd36e2c2a6789db23113685031d7f16329158384.exitMarket(address rg1) with:
                                         gas gas_remaining wei
                                        args address(_3754)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _3836 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_3836] == mem[_3836]
        idx = idx + 1
        continue 
}

function sub_14366ac5(?) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    require arg4 == arg4
    mem[100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
    call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrowBalanceCurrent(address rg1) with:
         gas gas_remaining wei
        args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
    staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
            gas gas_remaining wei
           args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    mem[ceil32(return_data.size) + 96 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_call.return_data[32] == ext_call.return_data[32]
    require ext_call.return_data[64] == ext_call.return_data[64]
    if ext_call.return_data[64] > 0:
        require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
        staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
                gas gas_remaining wei
               args this.address
        mem[(2 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[0]
        require ext_call.return_data[32] == ext_call.return_data[32]
        require ext_call.return_data[64] == ext_call.return_data[64]
        if not ext_call.return_data[32]:
            mem[(4 * ceil32(return_data.size)) + 100] = address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1102 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1150 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1102 + (32 * _1150) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1102 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1150:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1101 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1149 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1101 + (32 * _1149) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1101 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1149:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1104 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1152 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1104 + (32 * _1152) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1104 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1152:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1103 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1151 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1103 + (32 * _1151) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1103 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1151:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1106 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1154 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1106 + (32 * _1154) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1106 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1154:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1105 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1153 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1105 + (32 * _1153) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1105 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1153:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1108 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1156 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1108 + (32 * _1156) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1108 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1156:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1107 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1155 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1107 + (32 * _1155) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1107 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1155:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] / 2 / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1110 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1158 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1110 + (32 * _1158) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1110 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1158:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1109 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1157 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1109 + (32 * _1157) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1109 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1157:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1112 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1160 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1112 + (32 * _1160) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1112 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1160:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1111 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1159 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1111 + (32 * _1159) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1111 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1159:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
            else:
                if 10^18 * ext_call.return_data[32] / 10^18 != ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) < 10^18 * ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1090 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1138 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1090 + (32 * _1138) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1090 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1138:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1089 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1137 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1089 + (32 * _1137) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1089 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1137:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1092 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1140 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1092 + (32 * _1140) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1092 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1140:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1091 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1139 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1091 + (32 * _1139) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1091 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1139:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1094 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1142 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1094 + (32 * _1142) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1094 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1142:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1093 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1141 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1093 + (32 * _1141) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1093 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1141:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1096 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1144 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1096 + (32 * _1144) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1096 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1144:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1095 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1143 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1095 + (32 * _1143) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1095 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1143:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1098 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1146 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1098 + (32 * _1146) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1098 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1146:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1097 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1145 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1097 + (32 * _1145) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1097 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1145:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1100 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1148 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1100 + (32 * _1148) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1100 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1148:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1099 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1147 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1099 + (32 * _1147) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1099 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1147:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
        else:
            require ext_call.return_data[32]
            if 10^16 * ext_call.return_data[32] / ext_call.return_data[32] != 10^16:
                revert with 0, 'math-not-safe'
            if (10^16 * ext_call.return_data[32]) + 5 * 10^17 < 10^16 * ext_call.return_data[32]:
                revert with 0, 'math-not-safe'
            mem[(4 * ceil32(return_data.size)) + 100] = address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1126 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1174 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1126 + (32 * _1174) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1126 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1174:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1125 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1173 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1125 + (32 * _1173) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1125 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1173:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1128 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1176 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1128 + (32 * _1176) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1128 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1176:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1127 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1175 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1127 + (32 * _1175) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1127 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1175:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1130 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1178 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1130 + (32 * _1178) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1130 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1178:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1129 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1177 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1129 + (32 * _1177) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1129 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1177:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1132 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1180 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1132 + (32 * _1180) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1132 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1180:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1131 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1179 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1131 + (32 * _1179) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1131 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1179:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] / 2 / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1134 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1182 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1134 + (32 * _1182) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1134 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1182:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1133 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1181 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1133 + (32 * _1181) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1133 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1181:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1136 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1184 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1136 + (32 * _1184) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1136 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1184:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1135 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1183 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1135 + (32 * _1183) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1135 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1183:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
            else:
                if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) / 10^18 != ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18):
                    revert with 0, 'math-not-safe'
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1114 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1162 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1114 + (32 * _1162) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1114 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1162:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1113 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1161 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1113 + (32 * _1161) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1113 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1161:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1116 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1164 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1116 + (32 * _1164) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1116 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1164:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1115 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1163 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1115 + (32 * _1163) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1115 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1163:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1118 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1166 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1118 + (32 * _1166) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1118 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1166:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1117 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1165 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1117 + (32 * _1165) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1117 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1165:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1120 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1168 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1120 + (32 * _1168) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1120 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1168:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1119 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1167 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1119 + (32 * _1167) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1119 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1167:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1122 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1170 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1122 + (32 * _1170) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1122 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1170:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1121 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1169 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1121 + (32 * _1169) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1121 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1169:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1124 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1172 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1124 + (32 * _1172) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1124 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1172:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1123 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1171 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1123 + (32 * _1171) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1123 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1171:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
}

function sub_176cd782(?) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    require arg4 == arg4
    mem[100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
    call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrowBalanceCurrent(address rg1) with:
         gas gas_remaining wei
        args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
    staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
            gas gas_remaining wei
           args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    mem[ceil32(return_data.size) + 96 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_call.return_data[32] == ext_call.return_data[32]
    require ext_call.return_data[64] == ext_call.return_data[64]
    if ext_call.return_data[64] > 0:
        require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
        staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
                gas gas_remaining wei
               args this.address
        mem[(2 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[0]
        require ext_call.return_data[32] == ext_call.return_data[32]
        require ext_call.return_data[64] == ext_call.return_data[64]
        if not ext_call.return_data[32]:
            mem[(4 * ceil32(return_data.size)) + 100] = address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1102 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1150 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1102 + (32 * _1150) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1102 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1150:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1101 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1149 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1101 + (32 * _1149) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1101 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1149:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1104 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1152 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1104 + (32 * _1152) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1104 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1152:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1103 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1151 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1103 + (32 * _1151) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1103 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1151:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1106 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1154 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1106 + (32 * _1154) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1106 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1154:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1105 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1153 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1105 + (32 * _1153) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1105 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1153:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1108 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1156 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1108 + (32 * _1156) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1108 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1156:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1107 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1155 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1107 + (32 * _1155) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1107 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1155:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] / 2 / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1110 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1158 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1110 + (32 * _1158) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1110 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1158:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1109 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1157 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1109 + (32 * _1157) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1109 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1157:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1112 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1160 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1112 + (32 * _1160) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1112 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1160:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1111 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1159 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1111 + (32 * _1159) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1111 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1159:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
            else:
                if 10^18 * ext_call.return_data[32] / 10^18 != ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) < 10^18 * ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1090 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1138 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1090 + (32 * _1138) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1090 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1138:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1089 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1137 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1089 + (32 * _1137) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1089 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1137:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1092 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1140 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1092 + (32 * _1140) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1092 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1140:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1091 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1139 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1091 + (32 * _1139) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1091 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1139:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1094 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1142 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1094 + (32 * _1142) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1094 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1142:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1093 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1141 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1093 + (32 * _1141) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1093 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1141:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1096 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1144 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1096 + (32 * _1144) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1096 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1144:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1095 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1143 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1095 + (32 * _1143) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1095 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1143:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1098 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1146 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1098 + (32 * _1146) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1098 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1146:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1097 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1145 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1097 + (32 * _1145) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1097 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1145:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1100 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1148 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1100 + (32 * _1148) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1100 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1148:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1099 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1147 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1099 + (32 * _1147) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1099 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1147:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
        else:
            require ext_call.return_data[32]
            if 10^16 * ext_call.return_data[32] / ext_call.return_data[32] != 10^16:
                revert with 0, 'math-not-safe'
            if (10^16 * ext_call.return_data[32]) + 5 * 10^17 < 10^16 * ext_call.return_data[32]:
                revert with 0, 'math-not-safe'
            mem[(4 * ceil32(return_data.size)) + 100] = address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1126 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1174 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1126 + (32 * _1174) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1126 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1174:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1125 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1173 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1125 + (32 * _1173) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1125 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1173:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1128 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1176 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1128 + (32 * _1176) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1128 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1176:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1127 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1175 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1127 + (32 * _1175) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1127 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1175:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1130 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1178 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1130 + (32 * _1178) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1130 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1178:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1129 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1177 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1129 + (32 * _1177) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1129 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1177:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1132 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1180 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1132 + (32 * _1180) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1132 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1180:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1131 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1179 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1131 + (32 * _1179) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1131 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1179:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] / 2 / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1134 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1182 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1134 + (32 * _1182) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1134 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1182:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1133 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1181 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1133 + (32 * _1181) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1133 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1181:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1136 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1184 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1136 + (32 * _1184) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1136 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1184:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1135 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1183 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1135 + (32 * _1183) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1135 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1183:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
            else:
                if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) / 10^18 != ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18):
                    revert with 0, 'math-not-safe'
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1114 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1162 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1114 + (32 * _1162) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1114 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1162:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1113 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1161 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1113 + (32 * _1161) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1113 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1161:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1116 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1164 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1116 + (32 * _1164) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1116 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1164:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1115 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1163 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1115 + (32 * _1163) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1115 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1163:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1118 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1166 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1118 + (32 * _1166) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1118 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1166:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1117 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1165 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1117 + (32 * _1165) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1117 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1165:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1120 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1168 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1120 + (32 * _1168) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1120 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1168:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1119 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1167 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1119 + (32 * _1167) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1119 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1167:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1122 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1170 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1122 + (32 * _1170) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1122 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1170:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1121 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1169 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1121 + (32 * _1169) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1121 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1169:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1124 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1172 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1124 + (32 * _1172) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1124 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1172:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1123 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1171 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1123 + (32 * _1171) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1123 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1171:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
}

function sub_43bb4e4f(?) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    require arg4 == arg4
    mem[100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
    call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrowBalanceCurrent(address rg1) with:
         gas gas_remaining wei
        args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
    staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
            gas gas_remaining wei
           args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    mem[ceil32(return_data.size) + 96 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_call.return_data[32] == ext_call.return_data[32]
    require ext_call.return_data[64] == ext_call.return_data[64]
    if ext_call.return_data[64] > 0:
        require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
        staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
                gas gas_remaining wei
               args this.address
        mem[(2 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[0]
        require ext_call.return_data[32] == ext_call.return_data[32]
        require ext_call.return_data[64] == ext_call.return_data[64]
        if not ext_call.return_data[32]:
            mem[(4 * ceil32(return_data.size)) + 100] = address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1102 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1150 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1102 + (32 * _1150) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1102 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1150:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1101 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1149 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1101 + (32 * _1149) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1101 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1149:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1104 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1152 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1104 + (32 * _1152) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1104 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1152:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1103 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1151 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1103 + (32 * _1151) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1103 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1151:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1106 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1154 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1106 + (32 * _1154) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1106 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1154:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1105 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1153 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1105 + (32 * _1153) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1105 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1153:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1108 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1156 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1108 + (32 * _1156) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1108 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1156:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1107 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1155 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1107 + (32 * _1155) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1107 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1155:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] / 2 / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1110 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1158 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1110 + (32 * _1158) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1110 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1158:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1109 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1157 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1109 + (32 * _1157) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1109 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1157:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1112 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1160 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1112 + (32 * _1160) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1112 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1160:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1111 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1159 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1111 + (32 * _1159) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1111 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1159:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
            else:
                if 10^18 * ext_call.return_data[32] / 10^18 != ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) < 10^18 * ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1090 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1138 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1090 + (32 * _1138) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1090 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1138:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1089 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1137 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1089 + (32 * _1137) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1089 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1137:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1092 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1140 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1092 + (32 * _1140) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1092 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1140:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1091 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1139 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1091 + (32 * _1139) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1091 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1139:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1094 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1142 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1094 + (32 * _1142) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1094 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1142:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1093 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1141 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1093 + (32 * _1141) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1093 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1141:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1096 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1144 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1096 + (32 * _1144) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1096 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1144:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1095 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1143 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1095 + (32 * _1143) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1095 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1143:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1098 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1146 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1098 + (32 * _1146) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1098 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1146:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1097 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1145 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1097 + (32 * _1145) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1097 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1145:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1100 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1148 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1100 + (32 * _1148) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1100 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1148:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1099 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1147 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1099 + (32 * _1147) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1099 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1147:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
        else:
            require ext_call.return_data[32]
            if 10^16 * ext_call.return_data[32] / ext_call.return_data[32] != 10^16:
                revert with 0, 'math-not-safe'
            if (10^16 * ext_call.return_data[32]) + 5 * 10^17 < 10^16 * ext_call.return_data[32]:
                revert with 0, 'math-not-safe'
            mem[(4 * ceil32(return_data.size)) + 100] = address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1126 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1174 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1126 + (32 * _1174) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1126 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1174:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1125 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1173 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1125 + (32 * _1173) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1125 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1173:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1128 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1176 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1128 + (32 * _1176) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1128 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1176:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1127 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1175 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1127 + (32 * _1175) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1127 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1175:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1130 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1178 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1130 + (32 * _1178) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1130 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1178:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1129 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1177 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1129 + (32 * _1177) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1129 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1177:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1132 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1180 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1132 + (32 * _1180) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1132 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1180:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1131 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1179 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1131 + (32 * _1179) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1131 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1179:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] / 2 / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1134 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1182 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1134 + (32 * _1182) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1134 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1182:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1133 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1181 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1133 + (32 * _1181) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1133 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1181:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1136 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1184 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1136 + (32 * _1184) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1136 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1184:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1135 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1183 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1135 + (32 * _1183) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1135 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1183:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
            else:
                if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) / 10^18 != ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18):
                    revert with 0, 'math-not-safe'
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1114 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1162 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1114 + (32 * _1162) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1114 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1162:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1113 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1161 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1113 + (32 * _1161) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1113 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1161:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1116 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1164 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1116 + (32 * _1164) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1116 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1164:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1115 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1163 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1115 + (32 * _1163) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1115 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1163:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1118 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1166 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1118 + (32 * _1166) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1118 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1166:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1117 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1165 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1117 + (32 * _1165) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1117 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1165:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1120 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1168 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1120 + (32 * _1168) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1120 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1168:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1119 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1167 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1119 + (32 * _1167) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1119 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1167:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1122 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1170 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1122 + (32 * _1170) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1122 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1170:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1121 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1169 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1121 + (32 * _1169) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1121 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1169:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1124 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1172 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1124 + (32 * _1172) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1124 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1172:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1123 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1171 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1123 + (32 * _1171) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1123 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1171:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
}

function sub_43e4d3c9(?) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    require arg4 == arg4
    mem[100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
    call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrowBalanceCurrent(address rg1) with:
         gas gas_remaining wei
        args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
    staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
            gas gas_remaining wei
           args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    mem[ceil32(return_data.size) + 96 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_call.return_data[32] == ext_call.return_data[32]
    require ext_call.return_data[64] == ext_call.return_data[64]
    if ext_call.return_data[64] > 0:
        require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
        staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
                gas gas_remaining wei
               args this.address
        mem[(2 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[0]
        require ext_call.return_data[32] == ext_call.return_data[32]
        require ext_call.return_data[64] == ext_call.return_data[64]
        if not ext_call.return_data[32]:
            mem[(4 * ceil32(return_data.size)) + 100] = address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1102 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1150 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1102 + (32 * _1150) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1102 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1150:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1101 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1149 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1101 + (32 * _1149) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1101 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1149:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1104 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1152 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1104 + (32 * _1152) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1104 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1152:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1103 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1151 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1103 + (32 * _1151) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1103 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1151:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1106 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1154 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1106 + (32 * _1154) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1106 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1154:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1105 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1153 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1105 + (32 * _1153) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1105 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1153:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1108 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1156 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1108 + (32 * _1156) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1108 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1156:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1107 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1155 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1107 + (32 * _1155) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1107 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1155:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] / 2 / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1110 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1158 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1110 + (32 * _1158) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1110 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1158:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1109 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1157 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1109 + (32 * _1157) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1109 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1157:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1112 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1160 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1112 + (32 * _1160) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1112 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1160:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1111 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1159 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1111 + (32 * _1159) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1111 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1159:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
            else:
                if 10^18 * ext_call.return_data[32] / 10^18 != ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) < 10^18 * ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1090 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1138 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1090 + (32 * _1138) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1090 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1138:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1089 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1137 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1089 + (32 * _1137) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1089 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1137:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1092 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1140 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1092 + (32 * _1140) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1092 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1140:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1091 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1139 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1091 + (32 * _1139) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1091 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1139:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1094 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1142 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1094 + (32 * _1142) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1094 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1142:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1093 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1141 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1093 + (32 * _1141) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1093 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1141:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1096 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1144 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1096 + (32 * _1144) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1096 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1144:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1095 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1143 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1095 + (32 * _1143) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1095 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1143:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1098 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1146 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1098 + (32 * _1146) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1098 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1146:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1097 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1145 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1097 + (32 * _1145) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1097 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1145:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1100 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1148 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1100 + (32 * _1148) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1100 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1148:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1099 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1147 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1099 + (32 * _1147) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1099 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1147:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
        else:
            require ext_call.return_data[32]
            if 10^16 * ext_call.return_data[32] / ext_call.return_data[32] != 10^16:
                revert with 0, 'math-not-safe'
            if (10^16 * ext_call.return_data[32]) + 5 * 10^17 < 10^16 * ext_call.return_data[32]:
                revert with 0, 'math-not-safe'
            mem[(4 * ceil32(return_data.size)) + 100] = address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1126 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1174 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1126 + (32 * _1174) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1126 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1174:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1125 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1173 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1125 + (32 * _1173) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1125 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1173:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1128 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1176 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1128 + (32 * _1176) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1128 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1176:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1127 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1175 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1127 + (32 * _1175) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1127 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1175:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1130 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1178 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1130 + (32 * _1178) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1130 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1178:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1129 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1177 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1129 + (32 * _1177) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1129 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1177:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1132 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1180 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1132 + (32 * _1180) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1132 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1180:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1131 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1179 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1131 + (32 * _1179) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1131 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1179:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] / 2 / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1134 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1182 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1134 + (32 * _1182) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1134 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1182:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1133 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1181 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1133 + (32 * _1181) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1133 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1181:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1136 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1184 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1136 + (32 * _1184) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1136 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1184:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1135 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1183 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1135 + (32 * _1183) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1135 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1183:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
            else:
                if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) / 10^18 != ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18):
                    revert with 0, 'math-not-safe'
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1114 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1162 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1114 + (32 * _1162) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1114 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1162:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1113 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1161 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1113 + (32 * _1161) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1113 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1161:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1116 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1164 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1116 + (32 * _1164) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1116 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1164:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1115 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1163 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1115 + (32 * _1163) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1115 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1163:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1118 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1166 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1118 + (32 * _1166) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1118 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1166:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1117 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1165 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1117 + (32 * _1165) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1117 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1165:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1120 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1168 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1120 + (32 * _1168) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1120 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1168:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1119 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1167 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1119 + (32 * _1167) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1119 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1167:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1122 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1170 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1122 + (32 * _1170) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1122 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1170:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1121 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1169 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1121 + (32 * _1169) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1121 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1169:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1124 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1172 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1124 + (32 * _1172) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1124 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1172:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1123 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1171 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1123 + (32 * _1171) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1123 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1171:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
}

function sub_59317c02(?) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    require arg4 == arg4
    mem[100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
    call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrowBalanceCurrent(address rg1) with:
         gas gas_remaining wei
        args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
    staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
            gas gas_remaining wei
           args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    mem[ceil32(return_data.size) + 96 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_call.return_data[32] == ext_call.return_data[32]
    require ext_call.return_data[64] == ext_call.return_data[64]
    if ext_call.return_data[64] > 0:
        require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
        staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
                gas gas_remaining wei
               args this.address
        mem[(2 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[0]
        require ext_call.return_data[32] == ext_call.return_data[32]
        require ext_call.return_data[64] == ext_call.return_data[64]
        if not ext_call.return_data[32]:
            mem[(4 * ceil32(return_data.size)) + 100] = address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1102 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1150 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1102 + (32 * _1150) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1102 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1150:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1101 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1149 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1101 + (32 * _1149) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1101 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1149:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1104 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1152 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1104 + (32 * _1152) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1104 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1152:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1103 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1151 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1103 + (32 * _1151) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1103 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1151:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1106 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1154 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1106 + (32 * _1154) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1106 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1154:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1105 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1153 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1105 + (32 * _1153) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1105 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1153:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1108 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1156 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1108 + (32 * _1156) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1108 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1156:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1107 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1155 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1107 + (32 * _1155) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1107 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1155:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] / 2 / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1110 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1158 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1110 + (32 * _1158) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1110 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1158:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1109 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1157 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1109 + (32 * _1157) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1109 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1157:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1112 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1160 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1112 + (32 * _1160) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1112 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1160:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1111 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1159 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1111 + (32 * _1159) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1111 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1159:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
            else:
                if 10^18 * ext_call.return_data[32] / 10^18 != ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) < 10^18 * ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1090 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1138 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1090 + (32 * _1138) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1090 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1138:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1089 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1137 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1089 + (32 * _1137) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1089 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1137:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1092 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1140 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1092 + (32 * _1140) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1092 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1140:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1091 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1139 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1091 + (32 * _1139) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1091 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1139:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1094 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1142 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1094 + (32 * _1142) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1094 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1142:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1093 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1141 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1093 + (32 * _1141) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1093 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1141:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1096 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1144 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1096 + (32 * _1144) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1096 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1144:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1095 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1143 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1095 + (32 * _1143) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1095 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1143:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1098 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1146 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1098 + (32 * _1146) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1098 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1146:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1097 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1145 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1097 + (32 * _1145) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1097 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1145:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1100 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1148 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1100 + (32 * _1148) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1100 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1148:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1099 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1147 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1099 + (32 * _1147) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1099 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1147:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
        else:
            require ext_call.return_data[32]
            if 10^16 * ext_call.return_data[32] / ext_call.return_data[32] != 10^16:
                revert with 0, 'math-not-safe'
            if (10^16 * ext_call.return_data[32]) + 5 * 10^17 < 10^16 * ext_call.return_data[32]:
                revert with 0, 'math-not-safe'
            mem[(4 * ceil32(return_data.size)) + 100] = address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1126 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1174 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1126 + (32 * _1174) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1126 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1174:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1125 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1173 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1125 + (32 * _1173) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1125 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1173:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1128 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1176 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1128 + (32 * _1176) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1128 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1176:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1127 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1175 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1127 + (32 * _1175) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1127 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1175:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1130 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1178 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1130 + (32 * _1178) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1130 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1178:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1129 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1177 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1129 + (32 * _1177) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1129 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1177:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1132 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1180 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1132 + (32 * _1180) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1132 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1180:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1131 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1179 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1131 + (32 * _1179) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1131 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1179:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] / 2 / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1134 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1182 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1134 + (32 * _1182) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1134 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1182:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1133 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1181 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1133 + (32 * _1181) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1133 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1181:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1136 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1184 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1136 + (32 * _1184) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1136 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1184:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1135 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1183 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1135 + (32 * _1183) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1135 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1183:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
            else:
                if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) / 10^18 != ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18):
                    revert with 0, 'math-not-safe'
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1114 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1162 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1114 + (32 * _1162) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1114 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1162:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1113 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1161 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1113 + (32 * _1161) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1113 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1161:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1116 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1164 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1116 + (32 * _1164) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1116 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1164:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1115 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1163 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1115 + (32 * _1163) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1115 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1163:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1118 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1166 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1118 + (32 * _1166) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1118 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1166:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1117 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1165 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1117 + (32 * _1165) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1117 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1165:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1120 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1168 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1120 + (32 * _1168) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1120 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1168:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1119 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1167 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1119 + (32 * _1167) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1119 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1167:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1122 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1170 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1122 + (32 * _1170) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1122 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1170:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1121 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1169 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1121 + (32 * _1169) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1121 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1169:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1124 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1172 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1124 + (32 * _1172) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1124 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1172:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1123 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1171 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1123 + (32 * _1171) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1123 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1171:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
}

function sub_7fe8cb08(?) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    require arg4 == arg4
    mem[100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
    call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrowBalanceCurrent(address rg1) with:
         gas gas_remaining wei
        args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
    staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
            gas gas_remaining wei
           args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    mem[ceil32(return_data.size) + 96 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_call.return_data[32] == ext_call.return_data[32]
    require ext_call.return_data[64] == ext_call.return_data[64]
    if ext_call.return_data[64] > 0:
        require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
        staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
                gas gas_remaining wei
               args this.address
        mem[(2 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[0]
        require ext_call.return_data[32] == ext_call.return_data[32]
        require ext_call.return_data[64] == ext_call.return_data[64]
        if not ext_call.return_data[32]:
            mem[(4 * ceil32(return_data.size)) + 100] = address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1102 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1150 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1102 + (32 * _1150) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1102 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1150:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1101 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1149 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1101 + (32 * _1149) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1101 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1149:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1104 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1152 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1104 + (32 * _1152) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1104 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1152:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1103 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1151 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1103 + (32 * _1151) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1103 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1151:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1106 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1154 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1106 + (32 * _1154) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1106 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1154:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1105 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1153 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1105 + (32 * _1153) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1105 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1153:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1108 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1156 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1108 + (32 * _1156) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1108 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1156:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1107 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1155 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1107 + (32 * _1155) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1107 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1155:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] / 2 / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1110 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1158 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1110 + (32 * _1158) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1110 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1158:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1109 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1157 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1109 + (32 * _1157) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1109 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1157:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1112 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1160 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1112 + (32 * _1160) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1112 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1160:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1111 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1159 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1111 + (32 * _1159) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1111 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1159:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
            else:
                if 10^18 * ext_call.return_data[32] / 10^18 != ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) < 10^18 * ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1090 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1138 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1090 + (32 * _1138) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1090 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1138:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1089 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1137 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1089 + (32 * _1137) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1089 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1137:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1092 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1140 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1092 + (32 * _1140) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1092 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1140:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1091 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1139 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1091 + (32 * _1139) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1091 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1139:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1094 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1142 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1094 + (32 * _1142) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1094 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1142:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1093 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1141 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1093 + (32 * _1141) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1093 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1141:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1096 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1144 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1096 + (32 * _1144) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1096 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1144:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1095 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1143 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1095 + (32 * _1143) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1095 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1143:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1098 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1146 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1098 + (32 * _1146) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1098 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1146:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1097 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1145 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1097 + (32 * _1145) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1097 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1145:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1100 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1148 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1100 + (32 * _1148) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1100 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1148:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1099 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1147 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1099 + (32 * _1147) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1099 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1147:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
        else:
            require ext_call.return_data[32]
            if 10^16 * ext_call.return_data[32] / ext_call.return_data[32] != 10^16:
                revert with 0, 'math-not-safe'
            if (10^16 * ext_call.return_data[32]) + 5 * 10^17 < 10^16 * ext_call.return_data[32]:
                revert with 0, 'math-not-safe'
            mem[(4 * ceil32(return_data.size)) + 100] = address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1126 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1174 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1126 + (32 * _1174) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1126 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1174:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1125 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1173 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1125 + (32 * _1173) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1125 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1173:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1128 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1176 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1128 + (32 * _1176) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1128 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1176:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1127 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1175 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1127 + (32 * _1175) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1127 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1175:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1130 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1178 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1130 + (32 * _1178) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1130 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1178:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1129 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1177 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1129 + (32 * _1177) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1129 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1177:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1132 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1180 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1132 + (32 * _1180) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1132 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1180:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1131 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1179 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1131 + (32 * _1179) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1131 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1179:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] / 2 / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1134 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1182 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1134 + (32 * _1182) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1134 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1182:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1133 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1181 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1133 + (32 * _1181) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1133 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1181:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1136 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1184 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1136 + (32 * _1184) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1136 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1184:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1135 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1183 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1135 + (32 * _1183) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1135 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1183:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
            else:
                if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) / 10^18 != ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18):
                    revert with 0, 'math-not-safe'
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1114 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1162 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1114 + (32 * _1162) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1114 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1162:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1113 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1161 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1113 + (32 * _1161) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1113 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1161:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1116 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1164 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1116 + (32 * _1164) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1116 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1164:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1115 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1163 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1115 + (32 * _1163) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1115 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1163:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1118 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1166 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1118 + (32 * _1166) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1118 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1166:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1117 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1165 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1117 + (32 * _1165) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1117 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1165:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1120 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1168 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1120 + (32 * _1168) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1120 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1168:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1119 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1167 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1119 + (32 * _1167) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1119 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1167:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1122 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1170 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1122 + (32 * _1170) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1122 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1170:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1121 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1169 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1121 + (32 * _1169) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1121 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1169:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1124 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1172 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1124 + (32 * _1172) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1124 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1172:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1123 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1171 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1123 + (32 * _1171) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1123 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1171:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
}

function sub_8b007b5e(?) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    require arg4 == arg4
    mem[100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
    call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrowBalanceCurrent(address rg1) with:
         gas gas_remaining wei
        args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
    staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
            gas gas_remaining wei
           args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    mem[ceil32(return_data.size) + 96 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_call.return_data[32] == ext_call.return_data[32]
    require ext_call.return_data[64] == ext_call.return_data[64]
    if ext_call.return_data[64] > 0:
        require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
        staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
                gas gas_remaining wei
               args this.address
        mem[(2 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[0]
        require ext_call.return_data[32] == ext_call.return_data[32]
        require ext_call.return_data[64] == ext_call.return_data[64]
        if not ext_call.return_data[32]:
            mem[(4 * ceil32(return_data.size)) + 100] = address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1102 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1150 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1102 + (32 * _1150) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1102 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1150:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1101 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1149 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1101 + (32 * _1149) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1101 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1149:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1104 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1152 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1104 + (32 * _1152) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1104 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1152:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1103 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1151 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1103 + (32 * _1151) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1103 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1151:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1106 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1154 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1106 + (32 * _1154) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1106 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1154:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1105 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1153 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1105 + (32 * _1153) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1105 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1153:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1108 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1156 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1108 + (32 * _1156) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1108 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1156:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1107 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1155 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1107 + (32 * _1155) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1107 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1155:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] / 2 / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1110 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1158 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1110 + (32 * _1158) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1110 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1158:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1109 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1157 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1109 + (32 * _1157) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1109 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1157:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1112 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1160 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1112 + (32 * _1160) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1112 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1160:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1111 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1159 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1111 + (32 * _1159) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1111 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1159:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
            else:
                if 10^18 * ext_call.return_data[32] / 10^18 != ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) < 10^18 * ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1090 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1138 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1090 + (32 * _1138) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1090 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1138:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1089 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1137 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1089 + (32 * _1137) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1089 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1137:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1092 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1140 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1092 + (32 * _1140) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1092 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1140:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1091 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1139 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1091 + (32 * _1139) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1091 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1139:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1094 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1142 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1094 + (32 * _1142) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1094 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1142:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1093 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1141 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1093 + (32 * _1141) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1093 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1141:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1096 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1144 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1096 + (32 * _1144) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1096 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1144:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1095 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1143 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1095 + (32 * _1143) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1095 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1143:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1098 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1146 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1098 + (32 * _1146) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1098 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1146:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1097 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1145 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1097 + (32 * _1145) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1097 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1145:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1100 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1148 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1100 + (32 * _1148) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1100 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1148:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1099 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1147 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1099 + (32 * _1147) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1099 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1147:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
        else:
            require ext_call.return_data[32]
            if 10^16 * ext_call.return_data[32] / ext_call.return_data[32] != 10^16:
                revert with 0, 'math-not-safe'
            if (10^16 * ext_call.return_data[32]) + 5 * 10^17 < 10^16 * ext_call.return_data[32]:
                revert with 0, 'math-not-safe'
            mem[(4 * ceil32(return_data.size)) + 100] = address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1126 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1174 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1126 + (32 * _1174) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1126 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1174:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1125 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1173 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1125 + (32 * _1173) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1125 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1173:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1128 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1176 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1128 + (32 * _1176) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1128 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1176:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1127 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1175 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1127 + (32 * _1175) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1127 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1175:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1130 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1178 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1130 + (32 * _1178) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1130 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1178:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1129 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1177 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1129 + (32 * _1177) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1129 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1177:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1132 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1180 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1132 + (32 * _1180) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1132 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1180:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1131 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1179 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1131 + (32 * _1179) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1131 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1179:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] / 2 / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1134 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1182 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1134 + (32 * _1182) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1134 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1182:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1133 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1181 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1133 + (32 * _1181) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1133 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1181:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1136 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1184 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1136 + (32 * _1184) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1136 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1184:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1135 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1183 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1135 + (32 * _1183) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1135 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1183:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
            else:
                if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) / 10^18 != ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18):
                    revert with 0, 'math-not-safe'
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1114 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1162 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1114 + (32 * _1162) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1114 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1162:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1113 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1161 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1113 + (32 * _1161) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1113 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1161:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1116 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1164 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1116 + (32 * _1164) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1116 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1164:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1115 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1163 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1115 + (32 * _1163) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1115 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1163:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1118 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1166 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1118 + (32 * _1166) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1118 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1166:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1117 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1165 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1117 + (32 * _1165) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1117 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1165:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1120 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1168 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1120 + (32 * _1168) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1120 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1168:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1119 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1167 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1119 + (32 * _1167) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1119 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1167:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1122 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1170 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1122 + (32 * _1170) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1122 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1170:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1121 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1169 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1121 + (32 * _1169) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1121 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1169:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1124 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1172 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1124 + (32 * _1172) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1124 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1172:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1123 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1171 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1123 + (32 * _1171) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1123 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1171:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
}

function sub_bf7a719d(?) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    require arg4 == arg4
    mem[100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
    call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrowBalanceCurrent(address rg1) with:
         gas gas_remaining wei
        args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
    staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
            gas gas_remaining wei
           args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    mem[ceil32(return_data.size) + 96 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_call.return_data[32] == ext_call.return_data[32]
    require ext_call.return_data[64] == ext_call.return_data[64]
    if ext_call.return_data[64] > 0:
        require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
        staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
                gas gas_remaining wei
               args this.address
        mem[(2 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[0]
        require ext_call.return_data[32] == ext_call.return_data[32]
        require ext_call.return_data[64] == ext_call.return_data[64]
        if not ext_call.return_data[32]:
            mem[(4 * ceil32(return_data.size)) + 100] = address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1102 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1150 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1102 + (32 * _1150) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1102 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1150:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1101 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1149 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1101 + (32 * _1149) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1101 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1149:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1104 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1152 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1104 + (32 * _1152) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1104 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1152:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1103 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1151 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1103 + (32 * _1151) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1103 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1151:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1106 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1154 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1106 + (32 * _1154) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1106 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1154:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1105 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1153 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1105 + (32 * _1153) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1105 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1153:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1108 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1156 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1108 + (32 * _1156) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1108 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1156:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1107 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1155 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1107 + (32 * _1155) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1107 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1155:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] / 2 / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1110 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1158 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1110 + (32 * _1158) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1110 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1158:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1109 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1157 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1109 + (32 * _1157) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1109 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1157:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1112 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1160 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1112 + (32 * _1160) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1112 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1160:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1111 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1159 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1111 + (32 * _1159) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1111 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1159:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
            else:
                if 10^18 * ext_call.return_data[32] / 10^18 != ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) < 10^18 * ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1090 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1138 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1090 + (32 * _1138) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1090 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1138:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1089 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1137 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1089 + (32 * _1137) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1089 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1137:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1092 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1140 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1092 + (32 * _1140) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1092 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1140:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1091 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1139 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1091 + (32 * _1139) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1091 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1139:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1094 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1142 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1094 + (32 * _1142) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1094 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1142:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1093 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1141 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1093 + (32 * _1141) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1093 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1141:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1096 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1144 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1096 + (32 * _1144) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1096 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1144:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1095 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1143 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1095 + (32 * _1143) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1095 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1143:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1098 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1146 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1098 + (32 * _1146) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1098 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1146:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1097 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1145 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1097 + (32 * _1145) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1097 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1145:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1100 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1148 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1100 + (32 * _1148) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1100 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1148:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1099 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1147 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1099 + (32 * _1147) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1099 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1147:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
        else:
            require ext_call.return_data[32]
            if 10^16 * ext_call.return_data[32] / ext_call.return_data[32] != 10^16:
                revert with 0, 'math-not-safe'
            if (10^16 * ext_call.return_data[32]) + 5 * 10^17 < 10^16 * ext_call.return_data[32]:
                revert with 0, 'math-not-safe'
            mem[(4 * ceil32(return_data.size)) + 100] = address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1126 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1174 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1126 + (32 * _1174) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1126 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1174:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1125 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1173 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1125 + (32 * _1173) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1125 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1173:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1128 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1176 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1128 + (32 * _1176) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1128 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1176:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1127 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1175 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1127 + (32 * _1175) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1127 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1175:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1130 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1178 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1130 + (32 * _1178) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1130 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1178:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1129 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1177 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1129 + (32 * _1177) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1129 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1177:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1132 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1180 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1132 + (32 * _1180) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1132 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1180:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1131 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1179 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1131 + (32 * _1179) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1131 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1179:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] / 2 / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1134 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1182 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1134 + (32 * _1182) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1134 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1182:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1133 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1181 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1133 + (32 * _1181) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1133 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1181:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1136 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1184 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1136 + (32 * _1184) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1136 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1184:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1135 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1183 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1135 + (32 * _1183) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1135 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1183:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
            else:
                if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) / 10^18 != ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18):
                    revert with 0, 'math-not-safe'
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1114 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1162 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1114 + (32 * _1162) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1114 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1162:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1113 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1161 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1113 + (32 * _1161) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1113 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1161:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1116 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1164 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1116 + (32 * _1164) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1116 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1164:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1115 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1163 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1115 + (32 * _1163) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1115 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1163:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1118 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1166 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1118 + (32 * _1166) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1118 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1166:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1117 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1165 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1117 + (32 * _1165) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1117 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1165:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1120 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1168 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1120 + (32 * _1168) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1120 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1168:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1119 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1167 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1119 + (32 * _1167) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1119 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1167:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1122 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1170 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1122 + (32 * _1170) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1122 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1170:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1121 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1169 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1121 + (32 * _1169) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1121 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1169:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1124 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1172 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1124 + (32 * _1172) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1124 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1172:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1123 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1171 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1123 + (32 * _1171) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1123 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1171:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
}

function sub_ff901b9a(?) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    require arg4 == arg4
    mem[100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
    call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrowBalanceCurrent(address rg1) with:
         gas gas_remaining wei
        args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
    staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
            gas gas_remaining wei
           args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
    mem[ceil32(return_data.size) + 96 len 96] = ext_call.return_data[0 len 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[0]
    require ext_call.return_data[32] == ext_call.return_data[32]
    require ext_call.return_data[64] == ext_call.return_data[64]
    if ext_call.return_data[64] > 0:
        require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
        staticcall 0xfd36e2c2a6789db23113685031d7f16329158384.getAccountLiquidity(address rg1) with:
                gas gas_remaining wei
               args this.address
        mem[(2 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 96
        require ext_call.return_data[0] == ext_call.return_data[0]
        require ext_call.return_data[32] == ext_call.return_data[32]
        require ext_call.return_data[64] == ext_call.return_data[64]
        if not ext_call.return_data[32]:
            mem[(4 * ceil32(return_data.size)) + 100] = address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1102 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1150 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1102 + (32 * _1150) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1102 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1150:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1101 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1149 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1101 + (32 * _1149) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1101 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1149:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1104 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1152 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1104 + (32 * _1152) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1104 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1152:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1103 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1151 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1103 + (32 * _1151) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1103 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1151:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1106 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1154 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1106 + (32 * _1154) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1106 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1154:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1105 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1153 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1105 + (32 * _1153) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1105 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1153:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1108 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1156 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1108 + (32 * _1156) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1108 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1156:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1107 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1155 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1107 + (32 * _1155) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1107 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1155:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] / 2 / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1110 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1158 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1110 + (32 * _1158) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1110 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1158:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1109 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1157 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1109 + (32 * _1157) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1109 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1157:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1112 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1160 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1112 + (32 * _1160) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1112 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1160:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1111 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1159 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1111 + (32 * _1159) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1111 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1159:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
            else:
                if 10^18 * ext_call.return_data[32] / 10^18 != ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) < 10^18 * ext_call.return_data[32]:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1090 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1138 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1090 + (32 * _1138) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1090 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1138:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1089 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1137 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1089 + (32 * _1137) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1089 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1137:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1092 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1140 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1092 + (32 * _1140) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1092 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1140:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1091 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1139 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1091 + (32 * _1139) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1091 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1139:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1094 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1142 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1094 + (32 * _1142) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1094 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1142:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1093 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1141 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1093 + (32 * _1141) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1093 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1141:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1096 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1144 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1096 + (32 * _1144) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1096 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1144:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1095 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1143 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1095 + (32 * _1143) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1095 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1143:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ((10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1098 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1146 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1098 + (32 * _1146) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1098 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1146:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1097 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1145 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1097 + (32 * _1145) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1097 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1145:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1100 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1148 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1100 + (32 * _1148) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1100 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1148:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1099 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1147 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1099 + (32 * _1147) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1099 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1147:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
        else:
            require ext_call.return_data[32]
            if 10^16 * ext_call.return_data[32] / ext_call.return_data[32] != 10^16:
                revert with 0, 'math-not-safe'
            if (10^16 * ext_call.return_data[32]) + 5 * 10^17 < 10^16 * ext_call.return_data[32]:
                revert with 0, 'math-not-safe'
            mem[(4 * ceil32(return_data.size)) + 100] = address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            require ext_code.size(0x516c18dc440f107f12619a6d2cc320622807d0ee)
            staticcall 0x516c18dc440f107f12619a6d2cc320622807d0ee.getUnderlyingPrice(address rg1) with:
                    gas gas_remaining wei
                   args address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) > ext_call.return_data[32]:
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0] / 2 / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1126 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1174 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1126 + (32 * _1174) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1126 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1174:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1125 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1173 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1125 + (32 * _1173) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1125 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1173:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1128 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1176 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1128 + (32 * _1176) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1128 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1176:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1127 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1175 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1127 + (32 * _1175) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1127 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1175:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1130 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1178 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1130 + (32 * _1178) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1130 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1178:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1129 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1177 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1129 + (32 * _1177) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1129 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1177:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1132 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1180 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1132 + (32 * _1180) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1132 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1180:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1131 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1179 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1131 + (32 * _1179) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1131 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1179:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] / 2 / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] / 2 / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] / 2 / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1134 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1182 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1134 + (32 * _1182) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1134 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1182:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] / 2 / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0] / 2 / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1133 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1181 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1133 + (32 * _1181) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1133 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1181:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1136 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1184 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1136 + (32 * _1184) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1136 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1184:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1135 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1183 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1135 + (32 * _1183) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1135 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1183:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
            else:
                if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) / 10^18 != ext_call.return_data[32] - ((10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18):
                    revert with 0, 'math-not-safe'
                if ext_call.return_data[0] / 2 < 0:
                    revert with 0, 'math-not-safe'
                require ext_call.return_data[0]
                if ext_call.return_data[0] - 10^6 / 2 <= (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args (ext_call.return_data[0] - 10^6 / 2)
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value ext_call.return_data[0] - 10^6 / 2 wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1114 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1162 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1114 + (32 * _1162) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1114 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1162:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1113 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1161 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1113 + (32 * _1161) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1113 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1161:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0] - 10^6 / 2 <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0] - 10^6 / 2
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - 10^6 / 2)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] - 10^6 / 2 wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1116 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1164 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1116 + (32 * _1164) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1116 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1164:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0] - 10^6 / 2
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), Mask(255, 1, ext_call.return_data[0] - 10^6), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1115 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1163 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1115 + (32 * _1163) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1115 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1163:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1118 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1166 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1118 + (32 * _1166) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1118 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1166:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1117 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1165 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1117 + (32 * _1165) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1117 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1165:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                else:
                    if address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1) != 0x151b1e2635a717bcdc836ecd6fbb62b674fe3e1d:
                        mem[(6 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).borrow(uint256 rg1) with:
                             gas gas_remaining wei
                            args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if ext_call.return_data[0]:
                            revert with 0, '1'
                        if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                               value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(7 * ceil32(return_data.size)) + 164] = 32
                            mem[(7 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + 128
                            t = (7 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(7 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(7 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (8 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1120 = mem[(7 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (7 * ceil32(return_data.size)) + return_data.size + 160
                            _1168 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (8 * ceil32(return_data.size)) + (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(8 * ceil32(return_data.size)) + 160] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1120 + (32 * _1168) + 32 <= return_data.size
                            idx = 0
                            s = (7 * ceil32(return_data.size)) + _1120 + 192
                            t = (8 * ceil32(return_data.size)) + 192
                            while idx < _1168:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, '2'
                            mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                            mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                            mem[(8 * ceil32(return_data.size)) + 164] = 32
                            mem[(8 * ceil32(return_data.size)) + 196] = 1
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + 128
                            t = (8 * ceil32(return_data.size)) + 228
                            while idx < 1:
                                mem[t] = mem[s + 12 len 20]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                            call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                 gas gas_remaining wei
                                args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = (10 * ceil32(return_data.size)) + 160
                            require return_data.size >= 32
                            _1119 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                            require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                            require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                            _1167 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                            require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                            mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                            require _1119 + (32 * _1167) + 32 <= return_data.size
                            idx = 0
                            s = (8 * ceil32(return_data.size)) + _1119 + 192
                            t = (10 * ceil32(return_data.size)) + 192
                            while idx < _1167:
                                require mem[s] == mem[s]
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                    else:
                        mem[(6 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                        call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).balanceOfUnderlying(address rg1) with:
                             gas gas_remaining wei
                            args this.address
                        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[0]
                        if (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] <= ext_call.return_data[0]:
                            mem[(7 * ceil32(return_data.size)) + 100] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ((10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0])
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1122 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1170 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1122 + (32 * _1170) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1122 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1170:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), (10^18 * ext_call.return_data[32]) - (10^18 * (10^16 * ext_call.return_data[32]) + 5 * 10^17 / 10^18) + (ext_call.return_data[0] / 2) / ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1121 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1169 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1121 + (32 * _1169) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1121 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1169:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                        else:
                            mem[(7 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                            call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).redeemUnderlying(uint256 rg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[0]
                            if ext_call.return_data[0]:
                                revert with 0, 'z'
                            if 0xa07c5b74c9b40447a954e1466938b865b6bbea36 == address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1):
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, address rg2) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 164] = 32
                                mem[(8 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 128
                                t = (8 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(8 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1124 = mem[(8 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (8 * ceil32(return_data.size)) + return_data.size + 160
                                _1172 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (10 * ceil32(return_data.size)) + (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[(10 * ceil32(return_data.size)) + 160] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1124 + (32 * _1172) + 32 <= return_data.size
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + _1124 + 192
                                t = (10 * ceil32(return_data.size)) + 192
                                while idx < _1172:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                            else:
                                mem[(8 * ceil32(return_data.size)) + 100] = address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                mem[(8 * ceil32(return_data.size)) + 164] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                require ext_code.size(address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1))
                                call address(arg1 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1).liquidateBorrow(address rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args address(arg2 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1), ext_call.return_data[0], address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[0]
                                if ext_call.return_data[0]:
                                    revert with 0, '2'
                                mem[(10 * ceil32(return_data.size)) + 128] = address(arg4 xor 0xf3c2476fbf0ed09dff00ea7f4ef252dcc72e6f1)
                                mem[(10 * ceil32(return_data.size)) + 160] = 0xc299823800000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 164] = 32
                                mem[(10 * ceil32(return_data.size)) + 196] = 1
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 128
                                t = (10 * ceil32(return_data.size)) + 228
                                while idx < 1:
                                    mem[t] = mem[s + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                require ext_code.size(0xfd36e2c2a6789db23113685031d7f16329158384)
                                call 0xfd36e2c2a6789db23113685031d7f16329158384.0xc2998238 with:
                                     gas gas_remaining wei
                                    args Array(len=1, data=mem[(10 * ceil32(return_data.size)) + 228])
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 160
                                require return_data.size >= 32
                                _1123 = mem[(10 * ceil32(return_data.size)) + 160 len 4], 0
                                require mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 191 < (10 * ceil32(return_data.size)) + return_data.size + 160
                                _1171 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160] <= test266151307()
                                require (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192 <= test266151307() and (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 32 >= 0
                                mem[64] = (11 * ceil32(return_data.size)) + (32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]) + 192
                                mem[(11 * ceil32(return_data.size)) + 160] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 160 len 4], 0 + 160]
                                require _1123 + (32 * _1171) + 32 <= return_data.size
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + _1123 + 192
                                t = (11 * ceil32(return_data.size)) + 192
                                while idx < _1171:
                                    require mem[s] == mem[s]
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
}



}
