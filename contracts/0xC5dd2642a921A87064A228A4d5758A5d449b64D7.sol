contract main {




// =====================  Runtime code  =====================


#
#  - buyPremiumDrangon()
#
const getBalance = eth.balance(this.address)


uint256 CEO_FEE;
uint256 lastPrice;
uint256 hatchingSpeed;
uint256 eGGS_TO_HATCH_1Dragon;
uint256 stor4;
uint256 stor5;
uint8 stor6;
address ceoAddress; offset 8
uint256 ceoEtherBalance;
mapping of uint256 iceDragons;
mapping of uint256 myPremiumDragons;
mapping of uint256 ultraDragon;
mapping of uint256 userHatchRate;
mapping of uint8 stor12;
mapping of uint256 userReferralEggs;
mapping of uint256 lastHatch;
mapping of address referrals;
uint256 marketEggs;
uint256 contractStarted;
uint256 sub_a3daa875;

function lastPrice() {
    return lastPrice
}

function ceoAddress() {
    return ceoAddress
}

function activated() {
    return bool(stor6)
}

function ultraDragon(address arg1) {
    require calldata.size - 4 >= 32
    return ultraDragon[arg1]
}

function hatchingSpeed() {
    return hatchingSpeed
}

function userReferralEggs(address arg1) {
    require calldata.size - 4 >= 32
    return userReferralEggs[arg1]
}

function iceDragons(address arg1) {
    require calldata.size - 4 >= 32
    return iceDragons[arg1]
}

function marketEggs() {
    return marketEggs
}

function contractStarted() {
    return contractStarted
}

function ceoEtherBalance() {
    return ceoEtherBalance
}

function lastHatch(address arg1) {
    require calldata.size - 4 >= 32
    return lastHatch[arg1]
}

function getMyUltraDragon() {
    return ultraDragon[address(msg.sender)]
}

function getMyPremiumDragons() {
    return myPremiumDragons[address(msg.sender)]
}

function premiumDragons(address arg1) {
    require calldata.size - 4 >= 32
    return myPremiumDragons[arg1]
}

function referrals(address arg1) {
    require calldata.size - 4 >= 32
    return referrals[arg1]
}

function sub_a3daa875(?) {
    return sub_a3daa875
}

function userHatchRate(address arg1) {
    require calldata.size - 4 >= 32
    return userHatchRate[arg1]
}

function cashedOut(address arg1) {
    require calldata.size - 4 >= 32
    return bool(stor12[arg1])
}

function getMyIceDragon() {
    return iceDragons[address(msg.sender)]
}

function EGGS_TO_HATCH_1Dragon() {
    return eGGS_TO_HATCH_1Dragon
}

function CEO_FEE() {
    return CEO_FEE
}

function _fallback() payable {
    revert
}

function seedMarket() payable {
    require not marketEggs
    stor6 = 1
    marketEggs = 2400000 * 24 * 3600
    contractStarted = block.timestamp
}

function devFee(uint256 arg1) {
    require calldata.size - 4 >= 32
    if not arg1:
        return 0
    require arg1
    require arg1 * CEO_FEE / arg1 == CEO_FEE
    return (arg1 * CEO_FEE / 100)
}

function calculatePercentage(uint256 arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    if not arg1:
        return 0
    require arg1
    require arg1 * arg2 / arg1 == arg2
    return (arg1 * arg2 / 100)
}

function balanceAlgorithm(uint256 arg1) {
    require calldata.size - 4 >= 32
    require msg.sender == ceoAddress
    require arg1 > 0
    require sub_a3daa875 > 0
    if not sub_a3daa875:
        call ceoAddress with:
             gas 2300 wei
    else:
        require sub_a3daa875
        require sub_a3daa875 * arg1 / sub_a3daa875 == arg1
        sub_a3daa875 -= sub_a3daa875 * arg1 / 100
        call ceoAddress with:
           value sub_a3daa875 * arg1 / 100 wei
             gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function withdrawAdminMoney(uint256 arg1) {
    require calldata.size - 4 >= 32
    require msg.sender == ceoAddress
    require arg1 <= 100
    require arg1 > 0
    require ceoEtherBalance > 0
    if not ceoEtherBalance:
        call ceoAddress with:
             gas 2300 wei
    else:
        require ceoEtherBalance
        require ceoEtherBalance * arg1 / ceoEtherBalance == arg1
        ceoEtherBalance -= ceoEtherBalance * arg1 / 100
        call ceoAddress with:
           value ceoEtherBalance * arg1 / 100 wei
             gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function calculateTrade(uint256 arg1, uint256 arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    if not stor4:
        if not stor5:
            if arg1:
                if stor5 + (0 / arg1) >= stor5:
                    if stor5 + (0 / arg1):
                        return (0 / stor5 + (0 / arg1))
        else:
            if stor5:
                if stor5 * arg1 / stor5 == arg1:
                    if stor5 * arg1 >= 0:
                        if arg1:
                            if stor5 + (stor5 * arg1 / arg1) >= stor5:
                                if stor5 + (stor5 * arg1 / arg1):
                                    return (0 / stor5 + (stor5 * arg1 / arg1))
    else:
        if stor4:
            if stor4 * arg3 / stor4 == arg3:
                if not stor4:
                    if not stor5:
                        if arg1:
                            if stor5 + (0 / arg1) >= stor5:
                                if stor5 + (0 / arg1):
                                    return (stor4 * arg3 / stor5 + (0 / arg1))
                    else:
                        if stor5:
                            if stor5 * arg1 / stor5 == arg1:
                                if stor5 * arg1 >= 0:
                                    if arg1:
                                        if stor5 + (stor5 * arg1 / arg1) >= stor5:
                                            if stor5 + (stor5 * arg1 / arg1):
                                                return (stor4 * arg3 / stor5 + (stor5 * arg1 / arg1))
                else:
                    if stor4:
                        if stor4 * arg2 / stor4 == arg2:
                            if not stor5:
                                if stor4 * arg2 >= stor4 * arg2:
                                    if arg1:
                                        if stor5 + (stor4 * arg2 / arg1) >= stor5:
                                            if stor5 + (stor4 * arg2 / arg1):
                                                return (stor4 * arg3 / stor5 + (stor4 * arg2 / arg1))
                            else:
                                if stor5:
                                    if stor5 * arg1 / stor5 == arg1:
                                        if (stor4 * arg2) + (stor5 * arg1) >= stor4 * arg2:
                                            if arg1:
                                                if stor5 + ((stor4 * arg2) + (stor5 * arg1) / arg1) >= stor5:
                                                    if stor5 + ((stor4 * arg2) + (stor5 * arg1) / arg1):
                                                        return (stor4 * arg3 / stor5 + ((stor4 * arg2) + (stor5 * arg1) / arg1))
    revert
}

function calculateEggBuy(uint256 arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    if not stor4:
        if not stor5:
            if arg1:
                if stor5 + (0 / arg1) >= stor5:
                    if stor5 + (0 / arg1):
                        return (0 / stor5 + (0 / arg1))
        else:
            if stor5:
                if stor5 * arg1 / stor5 == arg1:
                    if stor5 * arg1 >= 0:
                        if arg1:
                            if stor5 + (stor5 * arg1 / arg1) >= stor5:
                                if stor5 + (stor5 * arg1 / arg1):
                                    return (0 / stor5 + (stor5 * arg1 / arg1))
    else:
        if stor4:
            if stor4 * marketEggs / stor4 == marketEggs:
                if not stor4:
                    if not stor5:
                        if arg1:
                            if stor5 + (0 / arg1) >= stor5:
                                if stor5 + (0 / arg1):
                                    return (stor4 * marketEggs / stor5 + (0 / arg1))
                    else:
                        if stor5:
                            if stor5 * arg1 / stor5 == arg1:
                                if stor5 * arg1 >= 0:
                                    if arg1:
                                        if stor5 + (stor5 * arg1 / arg1) >= stor5:
                                            if stor5 + (stor5 * arg1 / arg1):
                                                return (stor4 * marketEggs / stor5 + (stor5 * arg1 / arg1))
                else:
                    if stor4:
                        if stor4 * arg2 / stor4 == arg2:
                            if not stor5:
                                if stor4 * arg2 >= stor4 * arg2:
                                    if arg1:
                                        if stor5 + (stor4 * arg2 / arg1) >= stor5:
                                            if stor5 + (stor4 * arg2 / arg1):
                                                return (stor4 * marketEggs / stor5 + (stor4 * arg2 / arg1))
                            else:
                                if stor5:
                                    if stor5 * arg1 / stor5 == arg1:
                                        if (stor4 * arg2) + (stor5 * arg1) >= stor4 * arg2:
                                            if arg1:
                                                if stor5 + ((stor4 * arg2) + (stor5 * arg1) / arg1) >= stor5:
                                                    if stor5 + ((stor4 * arg2) + (stor5 * arg1) / arg1):
                                                        return (stor4 * marketEggs / stor5 + ((stor4 * arg2) + (stor5 * arg1) / arg1))
    revert
}

function calculateEggSell(uint256 arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    if not stor4:
        if not stor5:
            if arg1:
                if stor5 + (0 / arg1) >= stor5:
                    if stor5 + (0 / arg1):
                        return (0 / stor5 + (0 / arg1))
        else:
            if stor5:
                if stor5 * arg1 / stor5 == arg1:
                    if stor5 * arg1 >= 0:
                        if arg1:
                            if stor5 + (stor5 * arg1 / arg1) >= stor5:
                                if stor5 + (stor5 * arg1 / arg1):
                                    return (0 / stor5 + (stor5 * arg1 / arg1))
    else:
        if stor4:
            if stor4 * arg2 / stor4 == arg2:
                if not stor4:
                    if not stor5:
                        if arg1:
                            if stor5 + (0 / arg1) >= stor5:
                                if stor5 + (0 / arg1):
                                    return (stor4 * arg2 / stor5 + (0 / arg1))
                    else:
                        if stor5:
                            if stor5 * arg1 / stor5 == arg1:
                                if stor5 * arg1 >= 0:
                                    if arg1:
                                        if stor5 + (stor5 * arg1 / arg1) >= stor5:
                                            if stor5 + (stor5 * arg1 / arg1):
                                                return (stor4 * arg2 / stor5 + (stor5 * arg1 / arg1))
                else:
                    if stor4:
                        if stor4 * marketEggs / stor4 == marketEggs:
                            if not stor5:
                                if stor4 * marketEggs >= stor4 * marketEggs:
                                    if arg1:
                                        if stor5 + (stor4 * marketEggs / arg1) >= stor5:
                                            if stor5 + (stor4 * marketEggs / arg1):
                                                return (stor4 * arg2 / stor5 + (stor4 * marketEggs / arg1))
                            else:
                                if stor5:
                                    if stor5 * arg1 / stor5 == arg1:
                                        if (stor4 * marketEggs) + (stor5 * arg1) >= stor4 * marketEggs:
                                            if arg1:
                                                if stor5 + ((stor4 * marketEggs) + (stor5 * arg1) / arg1) >= stor5:
                                                    if stor5 + ((stor4 * marketEggs) + (stor5 * arg1) / arg1):
                                                        return (stor4 * arg2 / stor5 + ((stor4 * marketEggs) + (stor5 * arg1) / arg1))
    revert
}

function calculateEggBuy(uint256 arg1) {
    require calldata.size - 4 >= 32
    require sub_a3daa875 <= eth.balance(this.address)
    if not stor4:
        if not stor5:
            if arg1:
                if stor5 + (0 / arg1) >= stor5:
                    if stor5 + (0 / arg1):
                        return (0 / stor5 + (0 / arg1))
        else:
            if stor5:
                if stor5 * arg1 / stor5 == arg1:
                    if stor5 * arg1 >= 0:
                        if arg1:
                            if stor5 + (stor5 * arg1 / arg1) >= stor5:
                                if stor5 + (stor5 * arg1 / arg1):
                                    return (0 / stor5 + (stor5 * arg1 / arg1))
    else:
        if stor4:
            if stor4 * marketEggs / stor4 == marketEggs:
                if not stor4:
                    if not stor5:
                        if arg1:
                            if stor5 + (0 / arg1) >= stor5:
                                if stor5 + (0 / arg1):
                                    return (stor4 * marketEggs / stor5 + (0 / arg1))
                    else:
                        if stor5:
                            if stor5 * arg1 / stor5 == arg1:
                                if stor5 * arg1 >= 0:
                                    if arg1:
                                        if stor5 + (stor5 * arg1 / arg1) >= stor5:
                                            if stor5 + (stor5 * arg1 / arg1):
                                                return (stor4 * marketEggs / stor5 + (stor5 * arg1 / arg1))
                else:
                    if stor4:
                        if (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875:
                            if not stor5:
                                if arg1:
                                    if stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / arg1) >= stor5:
                                        if stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / arg1):
                                            return (stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / arg1))
                            else:
                                if stor5:
                                    if stor5 * arg1 / stor5 == arg1:
                                        if stor5 * arg1 >= 0:
                                            if arg1:
                                                if stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) + (stor5 * arg1) / arg1) >= stor5:
                                                    if stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) + (stor5 * arg1) / arg1):
                                                        return (stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) + (stor5 * arg1) / arg1))
    revert
}

function calculateEggSell(uint256 arg1) {
    require calldata.size - 4 >= 32
    require sub_a3daa875 <= eth.balance(this.address)
    if not stor4:
        if not stor5:
            if arg1:
                if stor5 + (0 / arg1) >= stor5:
                    if stor5 + (0 / arg1):
                        return (0 / stor5 + (0 / arg1))
        else:
            if stor5:
                if stor5 * arg1 / stor5 == arg1:
                    if stor5 * arg1 >= 0:
                        if arg1:
                            if stor5 + (stor5 * arg1 / arg1) >= stor5:
                                if stor5 + (stor5 * arg1 / arg1):
                                    return (0 / stor5 + (stor5 * arg1 / arg1))
    else:
        if stor4:
            if (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875:
                if not stor4:
                    if not stor5:
                        if arg1:
                            if stor5 + (0 / arg1) >= stor5:
                                if stor5 + (0 / arg1):
                                    return ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / arg1))
                    else:
                        if stor5:
                            if stor5 * arg1 / stor5 == arg1:
                                if stor5 * arg1 >= 0:
                                    if arg1:
                                        if stor5 + (stor5 * arg1 / arg1) >= stor5:
                                            if stor5 + (stor5 * arg1 / arg1):
                                                return ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * arg1 / arg1))
                else:
                    if stor4:
                        if stor4 * marketEggs / stor4 == marketEggs:
                            if not stor5:
                                if stor4 * marketEggs >= stor4 * marketEggs:
                                    if arg1:
                                        if stor5 + (stor4 * marketEggs / arg1) >= stor5:
                                            if stor5 + (stor4 * marketEggs / arg1):
                                                return ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / arg1))
                            else:
                                if stor5:
                                    if stor5 * arg1 / stor5 == arg1:
                                        if (stor4 * marketEggs) + (stor5 * arg1) >= stor4 * marketEggs:
                                            if arg1:
                                                if stor5 + ((stor4 * marketEggs) + (stor5 * arg1) / arg1) >= stor5:
                                                    if stor5 + ((stor4 * marketEggs) + (stor5 * arg1) / arg1):
                                                        return ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * arg1) / arg1))
    revert
}

function getEggsSinceLastHatch(address arg1) {
    require calldata.size - 4 >= 32
    require lastHatch[address(arg1)] <= block.timestamp
    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(arg1)]:
        if not iceDragons[address(arg1)]:
            if not ultraDragon[address(arg1)]:
                if myPremiumDragons[address(arg1)] >= 0:
                    if not eGGS_TO_HATCH_1Dragon:
                        return 0
                    if eGGS_TO_HATCH_1Dragon:
                        if eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(arg1)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(arg1)]:
                            return (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(arg1)])
            else:
                if ultraDragon[address(arg1)]:
                    if 2 * ultraDragon[address(arg1)] / ultraDragon[address(arg1)] == 2:
                        if 2 * ultraDragon[address(arg1)] >= 2 * ultraDragon[address(arg1)]:
                            if (2 * ultraDragon[address(arg1)]) + myPremiumDragons[address(arg1)] >= 2 * ultraDragon[address(arg1)]:
                                if not eGGS_TO_HATCH_1Dragon:
                                    return 0
                                if eGGS_TO_HATCH_1Dragon:
                                    if (2 * ultraDragon[address(arg1)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(arg1)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(arg1)]) + myPremiumDragons[address(arg1)]:
                                        return ((2 * ultraDragon[address(arg1)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(arg1)] * eGGS_TO_HATCH_1Dragon))
        else:
            if iceDragons[address(arg1)]:
                if iceDragons[address(arg1)] / iceDragons[address(arg1)] == 1:
                    if not ultraDragon[address(arg1)]:
                        if iceDragons[address(arg1)] >= 0:
                            if iceDragons[address(arg1)] + myPremiumDragons[address(arg1)] >= iceDragons[address(arg1)]:
                                if not eGGS_TO_HATCH_1Dragon:
                                    return 0
                                if eGGS_TO_HATCH_1Dragon:
                                    if (iceDragons[address(arg1)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(arg1)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(arg1)] + myPremiumDragons[address(arg1)]:
                                        return ((iceDragons[address(arg1)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(arg1)] * eGGS_TO_HATCH_1Dragon))
                    else:
                        if ultraDragon[address(arg1)]:
                            if 2 * ultraDragon[address(arg1)] / ultraDragon[address(arg1)] == 2:
                                if (2 * ultraDragon[address(arg1)]) + iceDragons[address(arg1)] >= 2 * ultraDragon[address(arg1)]:
                                    if myPremiumDragons[address(arg1)] >= 0:
                                        if not eGGS_TO_HATCH_1Dragon:
                                            return 0
                                        if eGGS_TO_HATCH_1Dragon:
                                            if (2 * ultraDragon[address(arg1)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(arg1)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(arg1)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(arg1)]) + iceDragons[address(arg1)] + myPremiumDragons[address(arg1)]:
                                                return ((2 * ultraDragon[address(arg1)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(arg1)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(arg1)] * eGGS_TO_HATCH_1Dragon))
    else:
        if not iceDragons[address(arg1)]:
            if not ultraDragon[address(arg1)]:
                if myPremiumDragons[address(arg1)] >= 0:
                    if not block.timestamp - lastHatch[address(arg1)]:
                        return 0
                    if block.timestamp - lastHatch[address(arg1)]:
                        if (block.timestamp * myPremiumDragons[address(arg1)]) - (lastHatch[address(arg1)] * myPremiumDragons[address(arg1)]) / block.timestamp - lastHatch[address(arg1)] == myPremiumDragons[address(arg1)]:
                            return ((block.timestamp * myPremiumDragons[address(arg1)]) - (lastHatch[address(arg1)] * myPremiumDragons[address(arg1)]))
            else:
                if ultraDragon[address(arg1)]:
                    if 2 * ultraDragon[address(arg1)] / ultraDragon[address(arg1)] == 2:
                        if 2 * ultraDragon[address(arg1)] >= 2 * ultraDragon[address(arg1)]:
                            if (2 * ultraDragon[address(arg1)]) + myPremiumDragons[address(arg1)] >= 2 * ultraDragon[address(arg1)]:
                                if not block.timestamp - lastHatch[address(arg1)]:
                                    return 0
                                if block.timestamp - lastHatch[address(arg1)]:
                                    if (2 * ultraDragon[address(arg1)] * block.timestamp) + (myPremiumDragons[address(arg1)] * block.timestamp) - (2 * ultraDragon[address(arg1)] * lastHatch[address(arg1)]) - (myPremiumDragons[address(arg1)] * lastHatch[address(arg1)]) / block.timestamp - lastHatch[address(arg1)] == (2 * ultraDragon[address(arg1)]) + myPremiumDragons[address(arg1)]:
                                        return ((2 * ultraDragon[address(arg1)] * block.timestamp) + (myPremiumDragons[address(arg1)] * block.timestamp) - (2 * ultraDragon[address(arg1)] * lastHatch[address(arg1)]) - (myPremiumDragons[address(arg1)] * lastHatch[address(arg1)]))
        else:
            if iceDragons[address(arg1)]:
                if iceDragons[address(arg1)] / iceDragons[address(arg1)] == 1:
                    if not ultraDragon[address(arg1)]:
                        if iceDragons[address(arg1)] >= 0:
                            if iceDragons[address(arg1)] + myPremiumDragons[address(arg1)] >= iceDragons[address(arg1)]:
                                if not block.timestamp - lastHatch[address(arg1)]:
                                    return 0
                                if block.timestamp - lastHatch[address(arg1)]:
                                    if (iceDragons[address(arg1)] * block.timestamp) + (myPremiumDragons[address(arg1)] * block.timestamp) - (iceDragons[address(arg1)] * lastHatch[address(arg1)]) - (myPremiumDragons[address(arg1)] * lastHatch[address(arg1)]) / block.timestamp - lastHatch[address(arg1)] == iceDragons[address(arg1)] + myPremiumDragons[address(arg1)]:
                                        return ((iceDragons[address(arg1)] * block.timestamp) + (myPremiumDragons[address(arg1)] * block.timestamp) - (iceDragons[address(arg1)] * lastHatch[address(arg1)]) - (myPremiumDragons[address(arg1)] * lastHatch[address(arg1)]))
                    else:
                        if ultraDragon[address(arg1)]:
                            if 2 * ultraDragon[address(arg1)] / ultraDragon[address(arg1)] == 2:
                                if (2 * ultraDragon[address(arg1)]) + iceDragons[address(arg1)] >= 2 * ultraDragon[address(arg1)]:
                                    if myPremiumDragons[address(arg1)] >= 0:
                                        if not block.timestamp - lastHatch[address(arg1)]:
                                            return 0
                                        if block.timestamp - lastHatch[address(arg1)]:
                                            if (2 * ultraDragon[address(arg1)] * block.timestamp) + (iceDragons[address(arg1)] * block.timestamp) + (myPremiumDragons[address(arg1)] * block.timestamp) - (2 * ultraDragon[address(arg1)] * lastHatch[address(arg1)]) - (iceDragons[address(arg1)] * lastHatch[address(arg1)]) - (myPremiumDragons[address(arg1)] * lastHatch[address(arg1)]) / block.timestamp - lastHatch[address(arg1)] == (2 * ultraDragon[address(arg1)]) + iceDragons[address(arg1)] + myPremiumDragons[address(arg1)]:
                                                return ((2 * ultraDragon[address(arg1)] * block.timestamp) + (iceDragons[address(arg1)] * block.timestamp) + (myPremiumDragons[address(arg1)] * block.timestamp) - (2 * ultraDragon[address(arg1)] * lastHatch[address(arg1)]) - (iceDragons[address(arg1)] * lastHatch[address(arg1)]) - (myPremiumDragons[address(arg1)] * lastHatch[address(arg1)]))
    revert
}

function getMyEggs() {
    require lastHatch[address(msg.sender)] <= block.timestamp
    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
        if not iceDragons[address(msg.sender)]:
            if not ultraDragon[address(msg.sender)]:
                if myPremiumDragons[address(msg.sender)] >= 0:
                    if not eGGS_TO_HATCH_1Dragon:
                        if userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]:
                            return userReferralEggs[address(msg.sender)]
                    else:
                        if eGGS_TO_HATCH_1Dragon:
                            if eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]:
                                if userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]:
                                    return (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]))
            else:
                if ultraDragon[address(msg.sender)]:
                    if 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2:
                        if 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]:
                            if (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]:
                                if not eGGS_TO_HATCH_1Dragon:
                                    if userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]:
                                        return userReferralEggs[address(msg.sender)]
                                else:
                                    if eGGS_TO_HATCH_1Dragon:
                                        if (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]:
                                            if userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]:
                                                return (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon))
        else:
            if iceDragons[address(msg.sender)]:
                if iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1:
                    if not ultraDragon[address(msg.sender)]:
                        if iceDragons[address(msg.sender)] >= 0:
                            if iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]:
                                if not eGGS_TO_HATCH_1Dragon:
                                    if userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]:
                                        return userReferralEggs[address(msg.sender)]
                                else:
                                    if eGGS_TO_HATCH_1Dragon:
                                        if (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]:
                                            if userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]:
                                                return (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon))
                    else:
                        if ultraDragon[address(msg.sender)]:
                            if 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2:
                                if (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]:
                                    if myPremiumDragons[address(msg.sender)] >= 0:
                                        if not eGGS_TO_HATCH_1Dragon:
                                            if userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]:
                                                return userReferralEggs[address(msg.sender)]
                                        else:
                                            if eGGS_TO_HATCH_1Dragon:
                                                if (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]:
                                                    if userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]:
                                                        return (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon))
    else:
        if not iceDragons[address(msg.sender)]:
            if not ultraDragon[address(msg.sender)]:
                if myPremiumDragons[address(msg.sender)] >= 0:
                    if not block.timestamp - lastHatch[address(msg.sender)]:
                        if userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]:
                            return userReferralEggs[address(msg.sender)]
                    else:
                        if block.timestamp - lastHatch[address(msg.sender)]:
                            if (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]:
                                if userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]:
                                    return (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]))
            else:
                if ultraDragon[address(msg.sender)]:
                    if 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2:
                        if 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]:
                            if (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]:
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    if userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]:
                                        return userReferralEggs[address(msg.sender)]
                                else:
                                    if block.timestamp - lastHatch[address(msg.sender)]:
                                        if (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]:
                                            if userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]:
                                                return (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]))
        else:
            if iceDragons[address(msg.sender)]:
                if iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1:
                    if not ultraDragon[address(msg.sender)]:
                        if iceDragons[address(msg.sender)] >= 0:
                            if iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]:
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    if userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]:
                                        return userReferralEggs[address(msg.sender)]
                                else:
                                    if block.timestamp - lastHatch[address(msg.sender)]:
                                        if (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]:
                                            if userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]:
                                                return (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]))
                    else:
                        if ultraDragon[address(msg.sender)]:
                            if 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2:
                                if (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]:
                                    if myPremiumDragons[address(msg.sender)] >= 0:
                                        if not block.timestamp - lastHatch[address(msg.sender)]:
                                            if userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]:
                                                return userReferralEggs[address(msg.sender)]
                                        else:
                                            if block.timestamp - lastHatch[address(msg.sender)]:
                                                if (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]:
                                                    if userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]:
                                                        return (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]))
    revert
}

function hatchEggs(address arg1) {
    require calldata.size - 4 >= 32
    require stor6
    if arg1 != msg.sender:
        referrals[address(msg.sender)] = arg1
    require lastHatch[address(msg.sender)] <= block.timestamp
    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
        if not iceDragons[address(msg.sender)]:
            if not ultraDragon[address(msg.sender)]:
                require myPremiumDragons[address(msg.sender)] >= 0
                if not eGGS_TO_HATCH_1Dragon:
                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                    lastHatch[address(msg.sender)] = block.timestamp
                    userReferralEggs[address(msg.sender)] = 0
                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                else:
                    require eGGS_TO_HATCH_1Dragon
                    require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                    require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                    lastHatch[address(msg.sender)] = block.timestamp
                    userReferralEggs[address(msg.sender)] = 0
                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
            else:
                require ultraDragon[address(msg.sender)]
                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                if not eGGS_TO_HATCH_1Dragon:
                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                    lastHatch[address(msg.sender)] = block.timestamp
                    userReferralEggs[address(msg.sender)] = 0
                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                else:
                    require eGGS_TO_HATCH_1Dragon
                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                    lastHatch[address(msg.sender)] = block.timestamp
                    userReferralEggs[address(msg.sender)] = 0
                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
        else:
            require iceDragons[address(msg.sender)]
            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
            if not ultraDragon[address(msg.sender)]:
                require iceDragons[address(msg.sender)] >= 0
                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                if not eGGS_TO_HATCH_1Dragon:
                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                    lastHatch[address(msg.sender)] = block.timestamp
                    userReferralEggs[address(msg.sender)] = 0
                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                else:
                    require eGGS_TO_HATCH_1Dragon
                    require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                    lastHatch[address(msg.sender)] = block.timestamp
                    userReferralEggs[address(msg.sender)] = 0
                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
            else:
                require ultraDragon[address(msg.sender)]
                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                require myPremiumDragons[address(msg.sender)] >= 0
                if not eGGS_TO_HATCH_1Dragon:
                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                    lastHatch[address(msg.sender)] = block.timestamp
                    userReferralEggs[address(msg.sender)] = 0
                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                else:
                    require eGGS_TO_HATCH_1Dragon
                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                    lastHatch[address(msg.sender)] = block.timestamp
                    userReferralEggs[address(msg.sender)] = 0
                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
    else:
        if not iceDragons[address(msg.sender)]:
            if not ultraDragon[address(msg.sender)]:
                require myPremiumDragons[address(msg.sender)] >= 0
                if not block.timestamp - lastHatch[address(msg.sender)]:
                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                    lastHatch[address(msg.sender)] = block.timestamp
                    userReferralEggs[address(msg.sender)] = 0
                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                else:
                    require block.timestamp - lastHatch[address(msg.sender)]
                    require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                    require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                    lastHatch[address(msg.sender)] = block.timestamp
                    userReferralEggs[address(msg.sender)] = 0
                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
            else:
                require ultraDragon[address(msg.sender)]
                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                if not block.timestamp - lastHatch[address(msg.sender)]:
                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                    lastHatch[address(msg.sender)] = block.timestamp
                    userReferralEggs[address(msg.sender)] = 0
                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                else:
                    require block.timestamp - lastHatch[address(msg.sender)]
                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                    lastHatch[address(msg.sender)] = block.timestamp
                    userReferralEggs[address(msg.sender)] = 0
                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
        else:
            require iceDragons[address(msg.sender)]
            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
            if not ultraDragon[address(msg.sender)]:
                require iceDragons[address(msg.sender)] >= 0
                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                if not block.timestamp - lastHatch[address(msg.sender)]:
                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                    lastHatch[address(msg.sender)] = block.timestamp
                    userReferralEggs[address(msg.sender)] = 0
                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                else:
                    require block.timestamp - lastHatch[address(msg.sender)]
                    require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                    lastHatch[address(msg.sender)] = block.timestamp
                    userReferralEggs[address(msg.sender)] = 0
                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
            else:
                require ultraDragon[address(msg.sender)]
                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                require myPremiumDragons[address(msg.sender)] >= 0
                if not block.timestamp - lastHatch[address(msg.sender)]:
                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                    lastHatch[address(msg.sender)] = block.timestamp
                    userReferralEggs[address(msg.sender)] = 0
                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                else:
                    require block.timestamp - lastHatch[address(msg.sender)]
                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                    lastHatch[address(msg.sender)] = block.timestamp
                    userReferralEggs[address(msg.sender)] = 0
                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
}

function buyUltraDrangon() payable {
    require stor6
    if not lastHatch[address(msg.sender)]:
        lastHatch[address(msg.sender)] = block.timestamp
    require sub_a3daa875 <= eth.balance(this.address)
    require msg.value <= eth.balance(this.address) - sub_a3daa875
    if not stor4:
        if not stor5:
            require msg.value
            require stor5 + (0 / msg.value) >= stor5
            require stor5 + (0 / msg.value)
            if not 0 / stor5 + (0 / msg.value) / 3:
                require 0 <= 0 / stor5 + (0 / msg.value) / 3
                require 0 / stor5 + (0 / msg.value) / 3 > 0
                if msg.value:
                    require msg.value
                    require msg.value * CEO_FEE / msg.value == CEO_FEE
                    sub_a3daa875 += msg.value * CEO_FEE / 100
                require stor6
                if msg.sender != msg.sender:
                    referrals[address(msg.sender)] = msg.sender
                require lastHatch[address(msg.sender)] <= block.timestamp
                if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                    if not iceDragons[address(msg.sender)]:
                        if not ultraDragon[address(msg.sender)]:
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        require iceDragons[address(msg.sender)]
                        require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                        if not ultraDragon[address(msg.sender)]:
                            require iceDragons[address(msg.sender)] >= 0
                            require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                else:
                    if not iceDragons[address(msg.sender)]:
                        if not ultraDragon[address(msg.sender)]:
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        require iceDragons[address(msg.sender)]
                        require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                        if not ultraDragon[address(msg.sender)]:
                            require iceDragons[address(msg.sender)] >= 0
                            require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                ultraDragon[address(msg.sender)] += 0 / stor5 + (0 / msg.value) / 3
            else:
                require 0 / stor5 + (0 / msg.value) / 3
                require 0 / stor5 + (0 / msg.value) / 3 * CEO_FEE / 0 / stor5 + (0 / msg.value) / 3 == CEO_FEE
                require 0 / stor5 + (0 / msg.value) / 3 * CEO_FEE / 100 <= 0 / stor5 + (0 / msg.value) / 3
                require (0 / stor5 + (0 / msg.value) / 3) - (0 / stor5 + (0 / msg.value) / 3 * CEO_FEE / 100) > 0
                if msg.value:
                    require msg.value
                    require msg.value * CEO_FEE / msg.value == CEO_FEE
                    sub_a3daa875 += msg.value * CEO_FEE / 100
                require stor6
                if msg.sender != msg.sender:
                    referrals[address(msg.sender)] = msg.sender
                require lastHatch[address(msg.sender)] <= block.timestamp
                if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                    if not iceDragons[address(msg.sender)]:
                        if not ultraDragon[address(msg.sender)]:
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        require iceDragons[address(msg.sender)]
                        require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                        if not ultraDragon[address(msg.sender)]:
                            require iceDragons[address(msg.sender)] >= 0
                            require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                else:
                    if not iceDragons[address(msg.sender)]:
                        if not ultraDragon[address(msg.sender)]:
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        require iceDragons[address(msg.sender)]
                        require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                        if not ultraDragon[address(msg.sender)]:
                            require iceDragons[address(msg.sender)] >= 0
                            require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                ultraDragon[address(msg.sender)] = ultraDragon[address(msg.sender)] + (0 / stor5 + (0 / msg.value) / 3) - (0 / stor5 + (0 / msg.value) / 3 * CEO_FEE / 100)
        else:
            require stor5
            require stor5 * msg.value / stor5 == msg.value
            require stor5 * msg.value >= 0
            require msg.value
            require stor5 + (stor5 * msg.value / msg.value) >= stor5
            require stor5 + (stor5 * msg.value / msg.value)
            if not 0 / stor5 + (stor5 * msg.value / msg.value) / 3:
                require 0 <= 0 / stor5 + (stor5 * msg.value / msg.value) / 3
                require 0 / stor5 + (stor5 * msg.value / msg.value) / 3 > 0
                if msg.value:
                    require msg.value
                    require msg.value * CEO_FEE / msg.value == CEO_FEE
                    sub_a3daa875 += msg.value * CEO_FEE / 100
                require stor6
                if msg.sender != msg.sender:
                    referrals[address(msg.sender)] = msg.sender
                require lastHatch[address(msg.sender)] <= block.timestamp
                if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                    if not iceDragons[address(msg.sender)]:
                        if not ultraDragon[address(msg.sender)]:
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        require iceDragons[address(msg.sender)]
                        require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                        if not ultraDragon[address(msg.sender)]:
                            require iceDragons[address(msg.sender)] >= 0
                            require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                else:
                    if not iceDragons[address(msg.sender)]:
                        if not ultraDragon[address(msg.sender)]:
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        require iceDragons[address(msg.sender)]
                        require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                        if not ultraDragon[address(msg.sender)]:
                            require iceDragons[address(msg.sender)] >= 0
                            require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                ultraDragon[address(msg.sender)] += 0 / stor5 + (stor5 * msg.value / msg.value) / 3
            else:
                require 0 / stor5 + (stor5 * msg.value / msg.value) / 3
                require 0 / stor5 + (stor5 * msg.value / msg.value) / 3 * CEO_FEE / 0 / stor5 + (stor5 * msg.value / msg.value) / 3 == CEO_FEE
                require 0 / stor5 + (stor5 * msg.value / msg.value) / 3 * CEO_FEE / 100 <= 0 / stor5 + (stor5 * msg.value / msg.value) / 3
                require (0 / stor5 + (stor5 * msg.value / msg.value) / 3) - (0 / stor5 + (stor5 * msg.value / msg.value) / 3 * CEO_FEE / 100) > 0
                if msg.value:
                    require msg.value
                    require msg.value * CEO_FEE / msg.value == CEO_FEE
                    sub_a3daa875 += msg.value * CEO_FEE / 100
                require stor6
                if msg.sender != msg.sender:
                    referrals[address(msg.sender)] = msg.sender
                require lastHatch[address(msg.sender)] <= block.timestamp
                if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                    if not iceDragons[address(msg.sender)]:
                        if not ultraDragon[address(msg.sender)]:
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        require iceDragons[address(msg.sender)]
                        require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                        if not ultraDragon[address(msg.sender)]:
                            require iceDragons[address(msg.sender)] >= 0
                            require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                else:
                    if not iceDragons[address(msg.sender)]:
                        if not ultraDragon[address(msg.sender)]:
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        require iceDragons[address(msg.sender)]
                        require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                        if not ultraDragon[address(msg.sender)]:
                            require iceDragons[address(msg.sender)] >= 0
                            require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                ultraDragon[address(msg.sender)] = ultraDragon[address(msg.sender)] + (0 / stor5 + (stor5 * msg.value / msg.value) / 3) - (0 / stor5 + (stor5 * msg.value / msg.value) / 3 * CEO_FEE / 100)
    else:
        require stor4
        require stor4 * marketEggs / stor4 == marketEggs
        if not stor4:
            if not stor5:
                require msg.value
                require stor5 + (0 / msg.value) >= stor5
                require stor5 + (0 / msg.value)
                if not stor4 * marketEggs / stor5 + (0 / msg.value) / 3:
                    require 0 <= stor4 * marketEggs / stor5 + (0 / msg.value) / 3
                    require stor4 * marketEggs / stor5 + (0 / msg.value) / 3 > 0
                    if msg.value:
                        require msg.value
                        require msg.value * CEO_FEE / msg.value == CEO_FEE
                        sub_a3daa875 += msg.value * CEO_FEE / 100
                    require stor6
                    if msg.sender != msg.sender:
                        referrals[address(msg.sender)] = msg.sender
                    require lastHatch[address(msg.sender)] <= block.timestamp
                    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    ultraDragon[address(msg.sender)] += stor4 * marketEggs / stor5 + (0 / msg.value) / 3
                else:
                    require stor4 * marketEggs / stor5 + (0 / msg.value) / 3
                    require stor4 * marketEggs / stor5 + (0 / msg.value) / 3 * CEO_FEE / stor4 * marketEggs / stor5 + (0 / msg.value) / 3 == CEO_FEE
                    require stor4 * marketEggs / stor5 + (0 / msg.value) / 3 * CEO_FEE / 100 <= stor4 * marketEggs / stor5 + (0 / msg.value) / 3
                    require (stor4 * marketEggs / stor5 + (0 / msg.value) / 3) - (stor4 * marketEggs / stor5 + (0 / msg.value) / 3 * CEO_FEE / 100) > 0
                    if msg.value:
                        require msg.value
                        require msg.value * CEO_FEE / msg.value == CEO_FEE
                        sub_a3daa875 += msg.value * CEO_FEE / 100
                    require stor6
                    if msg.sender != msg.sender:
                        referrals[address(msg.sender)] = msg.sender
                    require lastHatch[address(msg.sender)] <= block.timestamp
                    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    ultraDragon[address(msg.sender)] = ultraDragon[address(msg.sender)] + (stor4 * marketEggs / stor5 + (0 / msg.value) / 3) - (stor4 * marketEggs / stor5 + (0 / msg.value) / 3 * CEO_FEE / 100)
            else:
                require stor5
                require stor5 * msg.value / stor5 == msg.value
                require stor5 * msg.value >= 0
                require msg.value
                require stor5 + (stor5 * msg.value / msg.value) >= stor5
                require stor5 + (stor5 * msg.value / msg.value)
                if not stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 3:
                    require 0 <= stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 3
                    require stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 3 > 0
                    if msg.value:
                        require msg.value
                        require msg.value * CEO_FEE / msg.value == CEO_FEE
                        sub_a3daa875 += msg.value * CEO_FEE / 100
                    require stor6
                    if msg.sender != msg.sender:
                        referrals[address(msg.sender)] = msg.sender
                    require lastHatch[address(msg.sender)] <= block.timestamp
                    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    ultraDragon[address(msg.sender)] += stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 3
                else:
                    require stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 3
                    require stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 3 * CEO_FEE / stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 3 == CEO_FEE
                    require stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 3 * CEO_FEE / 100 <= stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 3
                    require (stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 3) - (stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 3 * CEO_FEE / 100) > 0
                    if msg.value:
                        require msg.value
                        require msg.value * CEO_FEE / msg.value == CEO_FEE
                        sub_a3daa875 += msg.value * CEO_FEE / 100
                    require stor6
                    if msg.sender != msg.sender:
                        referrals[address(msg.sender)] = msg.sender
                    require lastHatch[address(msg.sender)] <= block.timestamp
                    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    ultraDragon[address(msg.sender)] = ultraDragon[address(msg.sender)] + (stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 3) - (stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 3 * CEO_FEE / 100)
        else:
            require stor4
            require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875 - msg.value
            if not stor5:
                require msg.value
                require stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) >= stor5
                require stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value)
                if not stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 3:
                    require 0 <= stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 3
                    require stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 3 > 0
                    if msg.value:
                        require msg.value
                        require msg.value * CEO_FEE / msg.value == CEO_FEE
                        sub_a3daa875 += msg.value * CEO_FEE / 100
                    require stor6
                    if msg.sender != msg.sender:
                        referrals[address(msg.sender)] = msg.sender
                    require lastHatch[address(msg.sender)] <= block.timestamp
                    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    ultraDragon[address(msg.sender)] += stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 3
                else:
                    require stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 3
                    require stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 3 * CEO_FEE / stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 3 == CEO_FEE
                    require stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 3 * CEO_FEE / 100 <= stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 3
                    require (stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 3) - (stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 3 * CEO_FEE / 100) > 0
                    if msg.value:
                        require msg.value
                        require msg.value * CEO_FEE / msg.value == CEO_FEE
                        sub_a3daa875 += msg.value * CEO_FEE / 100
                    require stor6
                    if msg.sender != msg.sender:
                        referrals[address(msg.sender)] = msg.sender
                    require lastHatch[address(msg.sender)] <= block.timestamp
                    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    ultraDragon[address(msg.sender)] = ultraDragon[address(msg.sender)] + (stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 3) - (stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 3 * CEO_FEE / 100)
            else:
                require stor5
                require stor5 * msg.value / stor5 == msg.value
                require stor5 * msg.value >= 0
                require msg.value
                require stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) >= stor5
                require stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value)
                if not stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 3:
                    require 0 <= stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 3
                    require stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 3 > 0
                    if msg.value:
                        require msg.value
                        require msg.value * CEO_FEE / msg.value == CEO_FEE
                        sub_a3daa875 += msg.value * CEO_FEE / 100
                    require stor6
                    if msg.sender != msg.sender:
                        referrals[address(msg.sender)] = msg.sender
                    require lastHatch[address(msg.sender)] <= block.timestamp
                    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    ultraDragon[address(msg.sender)] += stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 3
                else:
                    require stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 3
                    require stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 3 * CEO_FEE / stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 3 == CEO_FEE
                    require stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 3 * CEO_FEE / 100 <= stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 3
                    require (stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 3) - (stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 3 * CEO_FEE / 100) > 0
                    if msg.value:
                        require msg.value
                        require msg.value * CEO_FEE / msg.value == CEO_FEE
                        sub_a3daa875 += msg.value * CEO_FEE / 100
                    require stor6
                    if msg.sender != msg.sender:
                        referrals[address(msg.sender)] = msg.sender
                    require lastHatch[address(msg.sender)] <= block.timestamp
                    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    ultraDragon[address(msg.sender)] = ultraDragon[address(msg.sender)] + (stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 3) - (stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 3 * CEO_FEE / 100)
}

function buyIceDrangon() payable {
    require stor6
    if not lastHatch[address(msg.sender)]:
        lastHatch[address(msg.sender)] = block.timestamp
    require sub_a3daa875 <= eth.balance(this.address)
    require msg.value <= eth.balance(this.address) - sub_a3daa875
    if not stor4:
        if not stor5:
            require msg.value
            require stor5 + (0 / msg.value) >= stor5
            require stor5 + (0 / msg.value)
            if not Mask(255, 1, 0 / stor5 + (0 / msg.value)):
                require 0 <= 0 / stor5 + (0 / msg.value) / 2
                require 0 / stor5 + (0 / msg.value) / 2 > 0
                if msg.value:
                    require msg.value
                    require msg.value * CEO_FEE / msg.value == CEO_FEE
                    sub_a3daa875 += msg.value * CEO_FEE / 100
                require stor6
                if msg.sender != msg.sender:
                    referrals[address(msg.sender)] = msg.sender
                require lastHatch[address(msg.sender)] <= block.timestamp
                if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                    if not iceDragons[address(msg.sender)]:
                        if not ultraDragon[address(msg.sender)]:
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        require iceDragons[address(msg.sender)]
                        require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                        if not ultraDragon[address(msg.sender)]:
                            require iceDragons[address(msg.sender)] >= 0
                            require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                else:
                    if not iceDragons[address(msg.sender)]:
                        if not ultraDragon[address(msg.sender)]:
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        require iceDragons[address(msg.sender)]
                        require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                        if not ultraDragon[address(msg.sender)]:
                            require iceDragons[address(msg.sender)] >= 0
                            require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                iceDragons[address(msg.sender)] += 0 / stor5 + (0 / msg.value) / 2
            else:
                require 0 / stor5 + (0 / msg.value) / 2
                require 0 / stor5 + (0 / msg.value) / 2 * CEO_FEE / 0 / stor5 + (0 / msg.value) / 2 == CEO_FEE
                require 0 / stor5 + (0 / msg.value) / 2 * CEO_FEE / 100 <= 0 / stor5 + (0 / msg.value) / 2
                require (0 / stor5 + (0 / msg.value) / 2) - (0 / stor5 + (0 / msg.value) / 2 * CEO_FEE / 100) > 0
                if msg.value:
                    require msg.value
                    require msg.value * CEO_FEE / msg.value == CEO_FEE
                    sub_a3daa875 += msg.value * CEO_FEE / 100
                require stor6
                if msg.sender != msg.sender:
                    referrals[address(msg.sender)] = msg.sender
                require lastHatch[address(msg.sender)] <= block.timestamp
                if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                    if not iceDragons[address(msg.sender)]:
                        if not ultraDragon[address(msg.sender)]:
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        require iceDragons[address(msg.sender)]
                        require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                        if not ultraDragon[address(msg.sender)]:
                            require iceDragons[address(msg.sender)] >= 0
                            require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                else:
                    if not iceDragons[address(msg.sender)]:
                        if not ultraDragon[address(msg.sender)]:
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        require iceDragons[address(msg.sender)]
                        require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                        if not ultraDragon[address(msg.sender)]:
                            require iceDragons[address(msg.sender)] >= 0
                            require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                iceDragons[address(msg.sender)] = iceDragons[address(msg.sender)] + (0 / stor5 + (0 / msg.value) / 2) - (0 / stor5 + (0 / msg.value) / 2 * CEO_FEE / 100)
        else:
            require stor5
            require stor5 * msg.value / stor5 == msg.value
            require stor5 * msg.value >= 0
            require msg.value
            require stor5 + (stor5 * msg.value / msg.value) >= stor5
            require stor5 + (stor5 * msg.value / msg.value)
            if not Mask(255, 1, 0 / stor5 + (stor5 * msg.value / msg.value)):
                require 0 <= 0 / stor5 + (stor5 * msg.value / msg.value) / 2
                require 0 / stor5 + (stor5 * msg.value / msg.value) / 2 > 0
                if msg.value:
                    require msg.value
                    require msg.value * CEO_FEE / msg.value == CEO_FEE
                    sub_a3daa875 += msg.value * CEO_FEE / 100
                require stor6
                if msg.sender != msg.sender:
                    referrals[address(msg.sender)] = msg.sender
                require lastHatch[address(msg.sender)] <= block.timestamp
                if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                    if not iceDragons[address(msg.sender)]:
                        if not ultraDragon[address(msg.sender)]:
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        require iceDragons[address(msg.sender)]
                        require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                        if not ultraDragon[address(msg.sender)]:
                            require iceDragons[address(msg.sender)] >= 0
                            require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                else:
                    if not iceDragons[address(msg.sender)]:
                        if not ultraDragon[address(msg.sender)]:
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        require iceDragons[address(msg.sender)]
                        require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                        if not ultraDragon[address(msg.sender)]:
                            require iceDragons[address(msg.sender)] >= 0
                            require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                iceDragons[address(msg.sender)] += 0 / stor5 + (stor5 * msg.value / msg.value) / 2
            else:
                require 0 / stor5 + (stor5 * msg.value / msg.value) / 2
                require 0 / stor5 + (stor5 * msg.value / msg.value) / 2 * CEO_FEE / 0 / stor5 + (stor5 * msg.value / msg.value) / 2 == CEO_FEE
                require 0 / stor5 + (stor5 * msg.value / msg.value) / 2 * CEO_FEE / 100 <= 0 / stor5 + (stor5 * msg.value / msg.value) / 2
                require (0 / stor5 + (stor5 * msg.value / msg.value) / 2) - (0 / stor5 + (stor5 * msg.value / msg.value) / 2 * CEO_FEE / 100) > 0
                if msg.value:
                    require msg.value
                    require msg.value * CEO_FEE / msg.value == CEO_FEE
                    sub_a3daa875 += msg.value * CEO_FEE / 100
                require stor6
                if msg.sender != msg.sender:
                    referrals[address(msg.sender)] = msg.sender
                require lastHatch[address(msg.sender)] <= block.timestamp
                if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                    if not iceDragons[address(msg.sender)]:
                        if not ultraDragon[address(msg.sender)]:
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        require iceDragons[address(msg.sender)]
                        require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                        if not ultraDragon[address(msg.sender)]:
                            require iceDragons[address(msg.sender)] >= 0
                            require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not eGGS_TO_HATCH_1Dragon:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require eGGS_TO_HATCH_1Dragon
                                require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                else:
                    if not iceDragons[address(msg.sender)]:
                        if not ultraDragon[address(msg.sender)]:
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        require iceDragons[address(msg.sender)]
                        require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                        if not ultraDragon[address(msg.sender)]:
                            require iceDragons[address(msg.sender)] >= 0
                            require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require ultraDragon[address(msg.sender)]
                            require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                            require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                            require myPremiumDragons[address(msg.sender)] >= 0
                            if not block.timestamp - lastHatch[address(msg.sender)]:
                                require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require block.timestamp - lastHatch[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                require eGGS_TO_HATCH_1Dragon
                                require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                lastHatch[address(msg.sender)] = block.timestamp
                                userReferralEggs[address(msg.sender)] = 0
                                require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                iceDragons[address(msg.sender)] = iceDragons[address(msg.sender)] + (0 / stor5 + (stor5 * msg.value / msg.value) / 2) - (0 / stor5 + (stor5 * msg.value / msg.value) / 2 * CEO_FEE / 100)
    else:
        require stor4
        require stor4 * marketEggs / stor4 == marketEggs
        if not stor4:
            if not stor5:
                require msg.value
                require stor5 + (0 / msg.value) >= stor5
                require stor5 + (0 / msg.value)
                if not Mask(255, 1, stor4 * marketEggs / stor5 + (0 / msg.value)):
                    require 0 <= stor4 * marketEggs / stor5 + (0 / msg.value) / 2
                    require stor4 * marketEggs / stor5 + (0 / msg.value) / 2 > 0
                    if msg.value:
                        require msg.value
                        require msg.value * CEO_FEE / msg.value == CEO_FEE
                        sub_a3daa875 += msg.value * CEO_FEE / 100
                    require stor6
                    if msg.sender != msg.sender:
                        referrals[address(msg.sender)] = msg.sender
                    require lastHatch[address(msg.sender)] <= block.timestamp
                    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    iceDragons[address(msg.sender)] += stor4 * marketEggs / stor5 + (0 / msg.value) / 2
                else:
                    require stor4 * marketEggs / stor5 + (0 / msg.value) / 2
                    require stor4 * marketEggs / stor5 + (0 / msg.value) / 2 * CEO_FEE / stor4 * marketEggs / stor5 + (0 / msg.value) / 2 == CEO_FEE
                    require stor4 * marketEggs / stor5 + (0 / msg.value) / 2 * CEO_FEE / 100 <= stor4 * marketEggs / stor5 + (0 / msg.value) / 2
                    require (stor4 * marketEggs / stor5 + (0 / msg.value) / 2) - (stor4 * marketEggs / stor5 + (0 / msg.value) / 2 * CEO_FEE / 100) > 0
                    if msg.value:
                        require msg.value
                        require msg.value * CEO_FEE / msg.value == CEO_FEE
                        sub_a3daa875 += msg.value * CEO_FEE / 100
                    require stor6
                    if msg.sender != msg.sender:
                        referrals[address(msg.sender)] = msg.sender
                    require lastHatch[address(msg.sender)] <= block.timestamp
                    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    iceDragons[address(msg.sender)] = iceDragons[address(msg.sender)] + (stor4 * marketEggs / stor5 + (0 / msg.value) / 2) - (stor4 * marketEggs / stor5 + (0 / msg.value) / 2 * CEO_FEE / 100)
            else:
                require stor5
                require stor5 * msg.value / stor5 == msg.value
                require stor5 * msg.value >= 0
                require msg.value
                require stor5 + (stor5 * msg.value / msg.value) >= stor5
                require stor5 + (stor5 * msg.value / msg.value)
                if not Mask(255, 1, stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value)):
                    require 0 <= stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 2
                    require stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 2 > 0
                    if msg.value:
                        require msg.value
                        require msg.value * CEO_FEE / msg.value == CEO_FEE
                        sub_a3daa875 += msg.value * CEO_FEE / 100
                    require stor6
                    if msg.sender != msg.sender:
                        referrals[address(msg.sender)] = msg.sender
                    require lastHatch[address(msg.sender)] <= block.timestamp
                    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    iceDragons[address(msg.sender)] += stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 2
                else:
                    require stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 2
                    require stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 2 * CEO_FEE / stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 2 == CEO_FEE
                    require stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 2 * CEO_FEE / 100 <= stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 2
                    require (stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 2) - (stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 2 * CEO_FEE / 100) > 0
                    if msg.value:
                        require msg.value
                        require msg.value * CEO_FEE / msg.value == CEO_FEE
                        sub_a3daa875 += msg.value * CEO_FEE / 100
                    require stor6
                    if msg.sender != msg.sender:
                        referrals[address(msg.sender)] = msg.sender
                    require lastHatch[address(msg.sender)] <= block.timestamp
                    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    iceDragons[address(msg.sender)] = iceDragons[address(msg.sender)] + (stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 2) - (stor4 * marketEggs / stor5 + (stor5 * msg.value / msg.value) / 2 * CEO_FEE / 100)
        else:
            require stor4
            require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875 - msg.value
            if not stor5:
                require msg.value
                require stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) >= stor5
                require stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value)
                if not Mask(255, 1, stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value)):
                    require 0 <= stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 2
                    require stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 2 > 0
                    if msg.value:
                        require msg.value
                        require msg.value * CEO_FEE / msg.value == CEO_FEE
                        sub_a3daa875 += msg.value * CEO_FEE / 100
                    require stor6
                    if msg.sender != msg.sender:
                        referrals[address(msg.sender)] = msg.sender
                    require lastHatch[address(msg.sender)] <= block.timestamp
                    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    iceDragons[address(msg.sender)] += stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 2
                else:
                    require stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 2
                    require stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 2 * CEO_FEE / stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 2 == CEO_FEE
                    require stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 2 * CEO_FEE / 100 <= stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 2
                    require (stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 2) - (stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 2 * CEO_FEE / 100) > 0
                    if msg.value:
                        require msg.value
                        require msg.value * CEO_FEE / msg.value == CEO_FEE
                        sub_a3daa875 += msg.value * CEO_FEE / 100
                    require stor6
                    if msg.sender != msg.sender:
                        referrals[address(msg.sender)] = msg.sender
                    require lastHatch[address(msg.sender)] <= block.timestamp
                    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    iceDragons[address(msg.sender)] = iceDragons[address(msg.sender)] + (stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 2) - (stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) / msg.value) / 2 * CEO_FEE / 100)
            else:
                require stor5
                require stor5 * msg.value / stor5 == msg.value
                require stor5 * msg.value >= 0
                require msg.value
                require stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) >= stor5
                require stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value)
                if not Mask(255, 1, stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value)):
                    require 0 <= stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 2
                    require stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 2 > 0
                    if msg.value:
                        require msg.value
                        require msg.value * CEO_FEE / msg.value == CEO_FEE
                        sub_a3daa875 += msg.value * CEO_FEE / 100
                    require stor6
                    if msg.sender != msg.sender:
                        referrals[address(msg.sender)] = msg.sender
                    require lastHatch[address(msg.sender)] <= block.timestamp
                    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    iceDragons[address(msg.sender)] += stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 2
                else:
                    require stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 2
                    require stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 2 * CEO_FEE / stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 2 == CEO_FEE
                    require stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 2 * CEO_FEE / 100 <= stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 2
                    require (stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 2) - (stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 2 * CEO_FEE / 100) > 0
                    if msg.value:
                        require msg.value
                        require msg.value * CEO_FEE / msg.value == CEO_FEE
                        sub_a3daa875 += msg.value * CEO_FEE / 100
                    require stor6
                    if msg.sender != msg.sender:
                        referrals[address(msg.sender)] = msg.sender
                    require lastHatch[address(msg.sender)] <= block.timestamp
                    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not eGGS_TO_HATCH_1Dragon:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require eGGS_TO_HATCH_1Dragon
                                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / 10
                    else:
                        if not iceDragons[address(msg.sender)]:
                            if not ultraDragon[address(msg.sender)]:
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                        else:
                            require iceDragons[address(msg.sender)]
                            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
                            if not ultraDragon[address(msg.sender)]:
                                require iceDragons[address(msg.sender)] >= 0
                                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                            else:
                                require ultraDragon[address(msg.sender)]
                                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                                require myPremiumDragons[address(msg.sender)] >= 0
                                if not block.timestamp - lastHatch[address(msg.sender)]:
                                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / 10
                                else:
                                    require block.timestamp - lastHatch[address(msg.sender)]
                                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                                    require eGGS_TO_HATCH_1Dragon
                                    require myPremiumDragons[address(msg.sender)] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= myPremiumDragons[address(msg.sender)]
                                    myPremiumDragons[address(msg.sender)] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    userReferralEggs[address(msg.sender)] = 0
                                    require userReferralEggs[stor15[address(msg.sender)]] + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10) >= userReferralEggs[stor15[address(msg.sender)]]
                                    userReferralEggs[stor15[address(msg.sender)]] += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / 10
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / 10
                    iceDragons[address(msg.sender)] = iceDragons[address(msg.sender)] + (stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 2) - (stor4 * marketEggs / stor5 + ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) - (msg.value * stor4) + (stor5 * msg.value) / msg.value) / 2 * CEO_FEE / 100)
}

function sellEggs() payable {
    require lastHatch[address(msg.sender)] <= block.timestamp
    if eGGS_TO_HATCH_1Dragon < block.timestamp - lastHatch[address(msg.sender)]:
        if not iceDragons[address(msg.sender)]:
            if not ultraDragon[address(msg.sender)]:
                require myPremiumDragons[address(msg.sender)] >= 0
                if not eGGS_TO_HATCH_1Dragon:
                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require sub_a3daa875 <= eth.balance(this.address)
                    if not stor4:
                        if not stor5:
                            require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            require stor5
                            require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon >= 0
                            require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require stor4
                        require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875
                        if not stor4:
                            if not stor5:
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon >= 0
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                        else:
                            require stor4
                            require stor4 * marketEggs / stor4 == marketEggs
                            if not stor5:
                                require stor4 * marketEggs >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require (stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                else:
                    require eGGS_TO_HATCH_1Dragon
                    require eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)] / eGGS_TO_HATCH_1Dragon == myPremiumDragons[address(msg.sender)]
                    require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require sub_a3daa875 <= eth.balance(this.address)
                    if not stor4:
                        if not stor5:
                            require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            require stor5
                            require stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                            require stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon >= 0
                            require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require stor4
                        require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875
                        if not stor4:
                            if not stor5:
                                require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon >= 0
                                require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                        else:
                            require stor4
                            require stor4 * marketEggs / stor4 == marketEggs
                            if not stor5:
                                require stor4 * marketEggs >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require (stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (eGGS_TO_HATCH_1Dragon * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
            else:
                require ultraDragon[address(msg.sender)]
                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                if not eGGS_TO_HATCH_1Dragon:
                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require sub_a3daa875 <= eth.balance(this.address)
                    if not stor4:
                        if not stor5:
                            require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            require stor5
                            require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon >= 0
                            require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require stor4
                        require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875
                        if not stor4:
                            if not stor5:
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon >= 0
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                        else:
                            require stor4
                            require stor4 * marketEggs / stor4 == marketEggs
                            if not stor5:
                                require stor4 * marketEggs >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require (stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                else:
                    require eGGS_TO_HATCH_1Dragon
                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require sub_a3daa875 <= eth.balance(this.address)
                    if not stor4:
                        if not stor5:
                            require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            require stor5
                            require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                            require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon >= 0
                            require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require stor4
                        require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875
                        if not stor4:
                            if not stor5:
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon >= 0
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                        else:
                            require stor4
                            require stor4 * marketEggs / stor4 == marketEggs
                            if not stor5:
                                require stor4 * marketEggs >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require (stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
        else:
            require iceDragons[address(msg.sender)]
            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
            if not ultraDragon[address(msg.sender)]:
                require iceDragons[address(msg.sender)] >= 0
                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                if not eGGS_TO_HATCH_1Dragon:
                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require sub_a3daa875 <= eth.balance(this.address)
                    if not stor4:
                        if not stor5:
                            require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            require stor5
                            require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon >= 0
                            require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require stor4
                        require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875
                        if not stor4:
                            if not stor5:
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon >= 0
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                        else:
                            require stor4
                            require stor4 * marketEggs / stor4 == marketEggs
                            if not stor5:
                                require stor4 * marketEggs >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require (stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                else:
                    require eGGS_TO_HATCH_1Dragon
                    require (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require sub_a3daa875 <= eth.balance(this.address)
                    if not stor4:
                        if not stor5:
                            require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            require stor5
                            require stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                            require stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon >= 0
                            require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require stor4
                        require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875
                        if not stor4:
                            if not stor5:
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon >= 0
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                        else:
                            require stor4
                            require stor4 * marketEggs / stor4 == marketEggs
                            if not stor5:
                                require stor4 * marketEggs >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require (stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
            else:
                require ultraDragon[address(msg.sender)]
                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                require myPremiumDragons[address(msg.sender)] >= 0
                if not eGGS_TO_HATCH_1Dragon:
                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require sub_a3daa875 <= eth.balance(this.address)
                    if not stor4:
                        if not stor5:
                            require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            require stor5
                            require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon >= 0
                            require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require stor4
                        require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875
                        if not stor4:
                            if not stor5:
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon >= 0
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                        else:
                            require stor4
                            require stor4 * marketEggs / stor4 == marketEggs
                            if not stor5:
                                require stor4 * marketEggs >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require (stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                else:
                    require eGGS_TO_HATCH_1Dragon
                    require (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require sub_a3daa875 <= eth.balance(this.address)
                    if not stor4:
                        if not stor5:
                            require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            require stor5
                            require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                            require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon >= 0
                            require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require stor4
                        require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875
                        if not stor4:
                            if not stor5:
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon >= 0
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                        else:
                            require stor4
                            require stor4 * marketEggs / stor4 == marketEggs
                            if not stor5:
                                require stor4 * marketEggs >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require (stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (iceDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) + (myPremiumDragons[address(msg.sender)] * eGGS_TO_HATCH_1Dragon) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
    else:
        if not iceDragons[address(msg.sender)]:
            if not ultraDragon[address(msg.sender)]:
                require myPremiumDragons[address(msg.sender)] >= 0
                if not block.timestamp - lastHatch[address(msg.sender)]:
                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require sub_a3daa875 <= eth.balance(this.address)
                    if not stor4:
                        if not stor5:
                            require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            require stor5
                            require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon >= 0
                            require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require stor4
                        require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875
                        if not stor4:
                            if not stor5:
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon >= 0
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                        else:
                            require stor4
                            require stor4 * marketEggs / stor4 == marketEggs
                            if not stor5:
                                require stor4 * marketEggs >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require (stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                else:
                    require block.timestamp - lastHatch[address(msg.sender)]
                    require (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == myPremiumDragons[address(msg.sender)]
                    require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require sub_a3daa875 <= eth.balance(this.address)
                    if not stor4:
                        if not stor5:
                            require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            require stor5
                            require stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                            require stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon >= 0
                            require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require stor4
                        require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875
                        if not stor4:
                            if not stor5:
                                require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon >= 0
                                require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                        else:
                            require stor4
                            require stor4 * marketEggs / stor4 == marketEggs
                            if not stor5:
                                require stor4 * marketEggs >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require (stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (block.timestamp * myPremiumDragons[address(msg.sender)]) - (lastHatch[address(msg.sender)] * myPremiumDragons[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
            else:
                require ultraDragon[address(msg.sender)]
                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                require 2 * ultraDragon[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                require (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                if not block.timestamp - lastHatch[address(msg.sender)]:
                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require sub_a3daa875 <= eth.balance(this.address)
                    if not stor4:
                        if not stor5:
                            require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            require stor5
                            require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon >= 0
                            require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require stor4
                        require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875
                        if not stor4:
                            if not stor5:
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon >= 0
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                        else:
                            require stor4
                            require stor4 * marketEggs / stor4 == marketEggs
                            if not stor5:
                                require stor4 * marketEggs >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require (stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                else:
                    require block.timestamp - lastHatch[address(msg.sender)]
                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + myPremiumDragons[address(msg.sender)]
                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require sub_a3daa875 <= eth.balance(this.address)
                    if not stor4:
                        if not stor5:
                            require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            require stor5
                            require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                            require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon >= 0
                            require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require stor4
                        require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875
                        if not stor4:
                            if not stor5:
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon >= 0
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                        else:
                            require stor4
                            require stor4 * marketEggs / stor4 == marketEggs
                            if not stor5:
                                require stor4 * marketEggs >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require (stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
        else:
            require iceDragons[address(msg.sender)]
            require iceDragons[address(msg.sender)] / iceDragons[address(msg.sender)] == 1
            if not ultraDragon[address(msg.sender)]:
                require iceDragons[address(msg.sender)] >= 0
                require iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)] >= iceDragons[address(msg.sender)]
                if not block.timestamp - lastHatch[address(msg.sender)]:
                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require sub_a3daa875 <= eth.balance(this.address)
                    if not stor4:
                        if not stor5:
                            require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            require stor5
                            require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon >= 0
                            require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require stor4
                        require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875
                        if not stor4:
                            if not stor5:
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon >= 0
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                        else:
                            require stor4
                            require stor4 * marketEggs / stor4 == marketEggs
                            if not stor5:
                                require stor4 * marketEggs >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require (stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                else:
                    require block.timestamp - lastHatch[address(msg.sender)]
                    require (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                    require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require sub_a3daa875 <= eth.balance(this.address)
                    if not stor4:
                        if not stor5:
                            require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            require stor5
                            require stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                            require stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon >= 0
                            require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require stor4
                        require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875
                        if not stor4:
                            if not stor5:
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon >= 0
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                        else:
                            require stor4
                            require stor4 * marketEggs / stor4 == marketEggs
                            if not stor5:
                                require stor4 * marketEggs >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require (stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
            else:
                require ultraDragon[address(msg.sender)]
                require 2 * ultraDragon[address(msg.sender)] / ultraDragon[address(msg.sender)] == 2
                require (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] >= 2 * ultraDragon[address(msg.sender)]
                require myPremiumDragons[address(msg.sender)] >= 0
                if not block.timestamp - lastHatch[address(msg.sender)]:
                    require userReferralEggs[address(msg.sender)] >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require sub_a3daa875 <= eth.balance(this.address)
                    if not stor4:
                        if not stor5:
                            require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            require stor5
                            require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon >= 0
                            require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require stor4
                        require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875
                        if not stor4:
                            if not stor5:
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon >= 0
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                        else:
                            require stor4
                            require stor4 * marketEggs / stor4 == marketEggs
                            if not stor5:
                                require stor4 * marketEggs >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require (stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                else:
                    require block.timestamp - lastHatch[address(msg.sender)]
                    require (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / block.timestamp - lastHatch[address(msg.sender)] == (2 * ultraDragon[address(msg.sender)]) + iceDragons[address(msg.sender)] + myPremiumDragons[address(msg.sender)]
                    require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) >= userReferralEggs[address(msg.sender)]
                    require eGGS_TO_HATCH_1Dragon
                    require sub_a3daa875 <= eth.balance(this.address)
                    if not stor4:
                        if not stor5:
                            require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                        else:
                            require stor5
                            require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                            require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon >= 0
                            require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                            require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                            if not 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                     gas 2300 * is_zero(value) wei
                            else:
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                userReferralEggs[address(msg.sender)] = 0
                                lastHatch[address(msg.sender)] = block.timestamp
                                require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                sub_a3daa875 += 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                require eth.balance(this.address) > sub_a3daa875
                                require 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= 0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                call msg.sender with:
                                   value (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - (0 / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                     gas 2300 * is_zero(value) wei
                    else:
                        require stor4
                        require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor4 == eth.balance(this.address) - sub_a3daa875
                        if not stor4:
                            if not stor5:
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (0 / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon >= 0
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                        else:
                            require stor4
                            require stor4 * marketEggs / stor4 == marketEggs
                            if not stor5:
                                require stor4 * marketEggs >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + (stor4 * marketEggs / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
                            else:
                                require stor5
                                require stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon / stor5 == userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require (stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor4 * marketEggs
                                require userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= stor5
                                require stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                if not (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon):
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    require eth.balance(this.address) > sub_a3daa875
                                    require 0 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) wei
                                         gas 2300 * is_zero(value) wei
                                else:
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) == CEO_FEE
                                    userReferralEggs[address(msg.sender)] = 0
                                    lastHatch[address(msg.sender)] = block.timestamp
                                    require marketEggs + (userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) >= marketEggs
                                    marketEggs += userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon
                                    sub_a3daa875 += (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100
                                    require eth.balance(this.address) > sub_a3daa875
                                    require (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100 <= (eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)
                                    call msg.sender with:
                                       value ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon)) - ((eth.balance(this.address) * stor4) - (sub_a3daa875 * stor4) / stor5 + ((stor4 * marketEggs) + (stor5 * userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) / userReferralEggs[address(msg.sender)] + (2 * ultraDragon[address(msg.sender)] * block.timestamp) + (iceDragons[address(msg.sender)] * block.timestamp) + (myPremiumDragons[address(msg.sender)] * block.timestamp) - (2 * ultraDragon[address(msg.sender)] * lastHatch[address(msg.sender)]) - (iceDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) - (myPremiumDragons[address(msg.sender)] * lastHatch[address(msg.sender)]) / eGGS_TO_HATCH_1Dragon) * CEO_FEE / 100) wei
                                         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}



}
