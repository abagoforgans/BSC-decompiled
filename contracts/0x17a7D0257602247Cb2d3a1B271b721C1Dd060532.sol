contract main {




// =====================  Runtime code  =====================


#
#  - sub_186c8af1(?)
#
address owner;

function owner() {
    return owner
}

function _fallback() payable {
  stop
}

function isOwner() {
    return (msg.sender == owner)
}

function renounceOwnership() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function withdrawBnb(uint256 arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call msg.sender with:
       value arg1 wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function transferOwnership(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function sub_e2da3653(?) {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == arg2
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(address(arg1))
    call address(arg1).0xa9059cbb with:
         gas gas_remaining wei
        args msg.sender, arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function approveToken(address arg1, address arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    require arg3 == arg3
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(arg1)
    call arg1.approve(address rg1, uint256 rg2) with:
         gas gas_remaining wei
        args address(arg2), arg3
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_82cb68c3(?) {
    require calldata.size - 4 >= 160
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg3 == address(arg3)
    require arg4 == arg4
    require arg5 == bool(arg5)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    mem[100] = this.address
    require ext_code.size(address(arg1))
    staticcall address(arg1).0x70a08231 with:
            gas gas_remaining wei
           args this.address
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    if ext_call.return_data[0] <= 0:
        revert with 0, 'No'
    mem[ceil32(return_data.size) + 96] = 2
    mem[ceil32(return_data.size) + 128] = address(arg1)
    mem[ceil32(return_data.size) + 160] = address(arg2)
    mem[ceil32(return_data.size) + 192] = 1
    mem[ceil32(return_data.size) + 224] = arg4
    mem[ceil32(return_data.size) + 256] = 1
    mem[ceil32(return_data.size) + 288] = bool(arg5)
    mem[ceil32(return_data.size) + 320] = 1
    mem[64] = ceil32(return_data.size) + 384
    mem[ceil32(return_data.size) + 352] = code.data[9720 len 32]
    idx = 0
    while idx < 1:
        require idx < mem[ceil32(return_data.size) + 96]
        require idx + 1 < mem[ceil32(return_data.size) + 96]
        _5162 = mem[(32 * idx + 1) + ceil32(return_data.size) + 128]
        mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
        mem[mem[64] + 36] = address(_5162)
        require ext_code.size(address(arg3))
        staticcall address(arg3).getPair(address rg1, address rg2) with:
                gas gas_remaining wei
               args mem[mem[64] + 4], address(_5162)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5253 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_5253] == mem[_5253 + 12 len 20]
        require idx < mem[ceil32(return_data.size) + 320]
        mem[(32 * idx) + ceil32(return_data.size) + 352] = mem[_5253 + 12 len 20]
        idx = idx + 1
        continue 
    _5154 = mem[ceil32(return_data.size) + 96]
    _5155 = mem[64]
    mem[mem[64]] = mem[ceil32(return_data.size) + 96]
    mem[64] = mem[64] + (32 * _5154) + 32
    if not _5154:
        require 0 < mem[_5155]
        mem[_5155 + 32] = ext_call.return_data[0]
        _10276 = mem[ceil32(return_data.size) + 96]
        idx = 0
        while idx < _10276 - 1:
            require idx < mem[ceil32(return_data.size) + 320]
            require idx < mem[ceil32(return_data.size) + 96]
            _10304 = mem[(32 * idx) + ceil32(return_data.size) + 128]
            require idx + 1 < mem[ceil32(return_data.size) + 96]
            _10318 = mem[(32 * idx + 1) + ceil32(return_data.size) + 128]
            require ext_code.size(mem[(32 * idx) + ceil32(return_data.size) + 364 len 20])
            staticcall mem[(32 * idx) + ceil32(return_data.size) + 364 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                _10350 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_10350] == mem[_10350 + 18 len 14]
                require mem[_10350 + 32] == mem[_10350 + 50 len 14]
                require mem[_10350 + 64] == mem[_10350 + 92 len 4]
                require idx < mem[_5155]
                require idx < mem[ceil32(return_data.size) + 192]
                if address(_10304) == address(_10304):
                    if not mem[(32 * idx) + _5155 + 32]:
                        require mem[_10350 + 18 len 14]
                        if 1000 * mem[_10350 + 18 len 14] / mem[_10350 + 18 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_10350 + 18 len 14] < 1000 * mem[_10350 + 18 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_10350 + 18 len 14]
                        require idx + 1 < mem[_5155]
                        mem[(32 * idx + 1) + _5155 + 32] = 0 / 1000 * mem[_10350 + 18 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) / mem[(32 * idx) + _5155 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]):
                            if not mem[_10350 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                                require idx + 1 < mem[_5155]
                                mem[(32 * idx + 1) + _5155 + 32] = 0 / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                            else:
                                if 1000 * mem[_10350 + 18 len 14] / mem[_10350 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10350 + 18 len 14]) < 1000 * mem[_10350 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10350 + 18 len 14])
                                require idx + 1 < mem[_5155]
                                mem[(32 * idx + 1) + _5155 + 32] = 0 / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10350 + 18 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10350 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10350 + 50 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) != mem[_10350 + 50 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_10350 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                                require idx + 1 < mem[_5155]
                                mem[(32 * idx + 1) + _5155 + 32] = (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10350 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10350 + 50 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                            else:
                                if 1000 * mem[_10350 + 18 len 14] / mem[_10350 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10350 + 18 len 14]) < 1000 * mem[_10350 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10350 + 18 len 14])
                                require idx + 1 < mem[_5155]
                                mem[(32 * idx + 1) + _5155 + 32] = (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10350 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10350 + 50 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10350 + 18 len 14])
                else:
                    if not mem[(32 * idx) + _5155 + 32]:
                        require mem[_10350 + 50 len 14]
                        if 1000 * mem[_10350 + 50 len 14] / mem[_10350 + 50 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_10350 + 50 len 14] < 1000 * mem[_10350 + 50 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_10350 + 50 len 14]
                        require idx + 1 < mem[_5155]
                        mem[(32 * idx + 1) + _5155 + 32] = 0 / 1000 * mem[_10350 + 50 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) / mem[(32 * idx) + _5155 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]):
                            if not mem[_10350 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                                require idx + 1 < mem[_5155]
                                mem[(32 * idx + 1) + _5155 + 32] = 0 / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                            else:
                                if 1000 * mem[_10350 + 50 len 14] / mem[_10350 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10350 + 50 len 14]) < 1000 * mem[_10350 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10350 + 50 len 14])
                                require idx + 1 < mem[_5155]
                                mem[(32 * idx + 1) + _5155 + 32] = 0 / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10350 + 50 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10350 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10350 + 18 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) != mem[_10350 + 18 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_10350 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                                require idx + 1 < mem[_5155]
                                mem[(32 * idx + 1) + _5155 + 32] = (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10350 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10350 + 18 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                            else:
                                if 1000 * mem[_10350 + 50 len 14] / mem[_10350 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10350 + 50 len 14]) < 1000 * mem[_10350 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10350 + 50 len 14])
                                require idx + 1 < mem[_5155]
                                mem[(32 * idx + 1) + _5155 + 32] = (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10350 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10350 + 18 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10350 + 50 len 14])
            else:
                _10351 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_10351] == mem[_10351 + 18 len 14]
                require mem[_10351 + 32] == mem[_10351 + 50 len 14]
                require mem[_10351 + 64] == mem[_10351 + 92 len 4]
                require idx < mem[_5155]
                require idx < mem[ceil32(return_data.size) + 192]
                if address(_10304) == address(_10318):
                    if not mem[(32 * idx) + _5155 + 32]:
                        require mem[_10351 + 18 len 14]
                        if 1000 * mem[_10351 + 18 len 14] / mem[_10351 + 18 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_10351 + 18 len 14] < 1000 * mem[_10351 + 18 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_10351 + 18 len 14]
                        require idx + 1 < mem[_5155]
                        mem[(32 * idx + 1) + _5155 + 32] = 0 / 1000 * mem[_10351 + 18 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) / mem[(32 * idx) + _5155 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]):
                            if not mem[_10351 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                                require idx + 1 < mem[_5155]
                                mem[(32 * idx + 1) + _5155 + 32] = 0 / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                            else:
                                if 1000 * mem[_10351 + 18 len 14] / mem[_10351 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10351 + 18 len 14]) < 1000 * mem[_10351 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10351 + 18 len 14])
                                require idx + 1 < mem[_5155]
                                mem[(32 * idx + 1) + _5155 + 32] = 0 / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10351 + 18 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10351 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10351 + 50 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) != mem[_10351 + 50 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_10351 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                                require idx + 1 < mem[_5155]
                                mem[(32 * idx + 1) + _5155 + 32] = (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10351 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10351 + 50 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                            else:
                                if 1000 * mem[_10351 + 18 len 14] / mem[_10351 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10351 + 18 len 14]) < 1000 * mem[_10351 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10351 + 18 len 14])
                                require idx + 1 < mem[_5155]
                                mem[(32 * idx + 1) + _5155 + 32] = (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10351 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10351 + 50 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10351 + 18 len 14])
                else:
                    if not mem[(32 * idx) + _5155 + 32]:
                        require mem[_10351 + 50 len 14]
                        if 1000 * mem[_10351 + 50 len 14] / mem[_10351 + 50 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_10351 + 50 len 14] < 1000 * mem[_10351 + 50 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_10351 + 50 len 14]
                        require idx + 1 < mem[_5155]
                        mem[(32 * idx + 1) + _5155 + 32] = 0 / 1000 * mem[_10351 + 50 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) / mem[(32 * idx) + _5155 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]):
                            if not mem[_10351 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                                require idx + 1 < mem[_5155]
                                mem[(32 * idx + 1) + _5155 + 32] = 0 / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                            else:
                                if 1000 * mem[_10351 + 50 len 14] / mem[_10351 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10351 + 50 len 14]) < 1000 * mem[_10351 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10351 + 50 len 14])
                                require idx + 1 < mem[_5155]
                                mem[(32 * idx + 1) + _5155 + 32] = 0 / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10351 + 50 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10351 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10351 + 18 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) != mem[_10351 + 18 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_10351 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                                require idx + 1 < mem[_5155]
                                mem[(32 * idx + 1) + _5155 + 32] = (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10351 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10351 + 18 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                            else:
                                if 1000 * mem[_10351 + 50 len 14] / mem[_10351 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10351 + 50 len 14]) < 1000 * mem[_10351 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10351 + 50 len 14])
                                require idx + 1 < mem[_5155]
                                mem[(32 * idx + 1) + _5155 + 32] = (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10351 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10351 + 18 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10351 + 50 len 14])
            _10276 = mem[ceil32(return_data.size) + 96]
            idx = idx + 1
            continue 
        require 0 < mem[ceil32(return_data.size) + 96]
        _10302 = mem[ceil32(return_data.size) + 128]
        require 0 < mem[ceil32(return_data.size) + 320]
        require 0 < mem[_5155]
        _10324 = mem[_5155 + 32]
        _10328 = mem[64]
        mem[mem[64] + 36] = mem[ceil32(return_data.size) + 364 len 20]
        mem[mem[64] + 68] = _10324
        _10368 = mem[64]
        mem[mem[64]] = 68
        mem[64] = mem[64] + 100
        mem[_10368 + 32 len 4] = unknown_0xa9059cbb(?????)
        _10380 = mem[_10368]
        mem[_10328 + 100 len ceil32(mem[_10368])] = mem[_10368 + 32 len ceil32(mem[_10368])]
        if ceil32(_10380) <= _10380:
            call address(_10302) with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _10380 + _10328 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                if not mem[96]:
                    _19906 = mem[ceil32(return_data.size) + 96]
                    idx = 0
                    while idx < _19906 - 1:
                        require idx < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[_5155]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            _20210 = mem[(32 * idx + 1) + _5155 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _21829 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _20210
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_21829))
                                        call address(_21829).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _20210, this.address
                                    else:
                                        _21831 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _21832 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21832 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21832 + 36] = 0
                                        mem[_21832 + 68] = _20210
                                        mem[_21832 + 100] = this.address
                                        mem[_21832 + 132] = 128
                                        mem[_21832 + 164] = mem[_21832]
                                        s = 0
                                        while s < mem[_21832]:
                                            mem[s + _21832 + 196] = mem[s + _21832 + 32]
                                            _19906 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_21832]) > mem[_21832]:
                                            mem[mem[_21832] + _21832 + 196] = 0
                                        require ext_code.size(address(_21831))
                                        call address(_21831).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _20210, address(this.address), 128, mem[_21832], mem[_21832 + 196 len ceil32(mem[_21832])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _20626 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _22546 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _20210
                                        mem[mem[64] + 68] = address(_20626)
                                        require ext_code.size(address(_22546))
                                        call address(_22546).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _20210, address(_20626)
                                    else:
                                        _22548 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _22549 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22549 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22549 + 36] = 0
                                        mem[_22549 + 68] = _20210
                                        mem[_22549 + 100] = address(_20626)
                                        mem[_22549 + 132] = 128
                                        mem[_22549 + 164] = mem[_22549]
                                        s = 0
                                        while s < mem[_22549]:
                                            mem[s + _22549 + 196] = mem[s + _22549 + 32]
                                            _19906 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_22549]) > mem[_22549]:
                                            mem[mem[_22549] + _22549 + 196] = 0
                                        require ext_code.size(address(_22548))
                                        call address(_22548).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _20210, address(_20626), 128, mem[_22549], mem[_22549 + 196 len ceil32(mem[_22549])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _21835 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _20210
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_21835))
                                        call address(_21835).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _20210, 0, this.address
                                    else:
                                        _21837 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _21838 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21838 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21838 + 36] = _20210
                                        mem[_21838 + 68] = 0
                                        mem[_21838 + 100] = this.address
                                        mem[_21838 + 132] = 128
                                        mem[_21838 + 164] = mem[_21838]
                                        s = 0
                                        while s < mem[_21838]:
                                            mem[s + _21838 + 196] = mem[s + _21838 + 32]
                                            _19906 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_21838]) > mem[_21838]:
                                            mem[mem[_21838] + _21838 + 196] = 0
                                        require ext_code.size(address(_21837))
                                        call address(_21837).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _20210, 0, address(this.address), 128, mem[_21838], mem[_21838 + 196 len ceil32(mem[_21838])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _20628 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _22551 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _20210
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_20628)
                                        require ext_code.size(address(_22551))
                                        call address(_22551).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _20210, 0, address(_20628)
                                    else:
                                        _22553 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _22554 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22554 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22554 + 36] = _20210
                                        mem[_22554 + 68] = 0
                                        mem[_22554 + 100] = address(_20628)
                                        mem[_22554 + 132] = 128
                                        mem[_22554 + 164] = mem[_22554]
                                        s = 0
                                        while s < mem[_22554]:
                                            mem[s + _22554 + 196] = mem[s + _22554 + 32]
                                            _19906 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_22554]) > mem[_22554]:
                                            mem[mem[_22554] + _22554 + 196] = 0
                                        require ext_code.size(address(_22553))
                                        call address(_22553).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _20210, 0, address(_20628), 128, mem[_22554], mem[_22554 + 196 len ceil32(mem[_22554])]
                        else:
                            _20211 = mem[(32 * idx + 1) + _5155 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _21841 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _20211
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_21841))
                                        call address(_21841).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _20211, this.address
                                    else:
                                        _21843 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _21844 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21844 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21844 + 36] = 0
                                        mem[_21844 + 68] = _20211
                                        mem[_21844 + 100] = this.address
                                        mem[_21844 + 132] = 128
                                        mem[_21844 + 164] = mem[_21844]
                                        s = 0
                                        while s < mem[_21844]:
                                            mem[s + _21844 + 196] = mem[s + _21844 + 32]
                                            _19906 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_21844]) > mem[_21844]:
                                            mem[mem[_21844] + _21844 + 196] = 0
                                        require ext_code.size(address(_21843))
                                        call address(_21843).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _20211, address(this.address), 128, mem[_21844], mem[_21844 + 196 len ceil32(mem[_21844])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _20630 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _22556 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _20211
                                        mem[mem[64] + 68] = address(_20630)
                                        require ext_code.size(address(_22556))
                                        call address(_22556).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _20211, address(_20630)
                                    else:
                                        _22558 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _22559 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22559 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22559 + 36] = 0
                                        mem[_22559 + 68] = _20211
                                        mem[_22559 + 100] = address(_20630)
                                        mem[_22559 + 132] = 128
                                        mem[_22559 + 164] = mem[_22559]
                                        s = 0
                                        while s < mem[_22559]:
                                            mem[s + _22559 + 196] = mem[s + _22559 + 32]
                                            _19906 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_22559]) > mem[_22559]:
                                            mem[mem[_22559] + _22559 + 196] = 0
                                        require ext_code.size(address(_22558))
                                        call address(_22558).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _20211, address(_20630), 128, mem[_22559], mem[_22559 + 196 len ceil32(mem[_22559])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _21847 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _20211
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_21847))
                                        call address(_21847).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _20211, 0, this.address
                                    else:
                                        _21849 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _21850 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21850 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21850 + 36] = _20211
                                        mem[_21850 + 68] = 0
                                        mem[_21850 + 100] = this.address
                                        mem[_21850 + 132] = 128
                                        mem[_21850 + 164] = mem[_21850]
                                        s = 0
                                        while s < mem[_21850]:
                                            mem[s + _21850 + 196] = mem[s + _21850 + 32]
                                            _19906 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_21850]) > mem[_21850]:
                                            mem[mem[_21850] + _21850 + 196] = 0
                                        require ext_code.size(address(_21849))
                                        call address(_21849).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _20211, 0, address(this.address), 128, mem[_21850], mem[_21850 + 196 len ceil32(mem[_21850])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _20632 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _22561 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _20211
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_20632)
                                        require ext_code.size(address(_22561))
                                        call address(_22561).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _20211, 0, address(_20632)
                                    else:
                                        _22563 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _22564 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22564 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22564 + 36] = _20211
                                        mem[_22564 + 68] = 0
                                        mem[_22564 + 100] = address(_20632)
                                        mem[_22564 + 132] = 128
                                        mem[_22564 + 164] = mem[_22564]
                                        s = 0
                                        while s < mem[_22564]:
                                            mem[s + _22564 + 196] = mem[s + _22564 + 32]
                                            _19906 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_22564]) > mem[_22564]:
                                            mem[mem[_22564] + _22564 + 196] = 0
                                        require ext_code.size(address(_22563))
                                        call address(_22563).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _20211, 0, address(_20632), 128, mem[_22564], mem[_22564 + 196 len ceil32(mem[_22564])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19906 = mem[ceil32(return_data.size) + 96]
                        idx = idx + 1
                        continue 
                    mem[mem[64]] = 32
                    _20098 = mem[_5155]
                    mem[mem[64] + 32] = mem[_5155]
                    mem[mem[64] + 64 len 32 * _20098] = mem[_5155 + 32 len 32 * _20098]
                    var150001 = _20098
                    return 32, mem[mem[64] + 32 len (32 * _20098) + 32]
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                _19907 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _19907 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_5155]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _20212 = mem[(32 * idx + 1) + _5155 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21854 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20212
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21854))
                                    call address(_21854).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20212, this.address
                                else:
                                    _21856 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21857 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21857 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21857 + 36] = 0
                                    mem[_21857 + 68] = _20212
                                    mem[_21857 + 100] = this.address
                                    mem[_21857 + 132] = 128
                                    mem[_21857 + 164] = mem[_21857]
                                    s = 0
                                    while s < mem[_21857]:
                                        mem[s + _21857 + 196] = mem[s + _21857 + 32]
                                        _19907 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21857]) > mem[_21857]:
                                        mem[mem[_21857] + _21857 + 196] = 0
                                    require ext_code.size(address(_21856))
                                    call address(_21856).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20212, address(this.address), 128, mem[_21857], mem[_21857 + 196 len ceil32(mem[_21857])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20634 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22566 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20212
                                    mem[mem[64] + 68] = address(_20634)
                                    require ext_code.size(address(_22566))
                                    call address(_22566).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20212, address(_20634)
                                else:
                                    _22568 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22569 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22569 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22569 + 36] = 0
                                    mem[_22569 + 68] = _20212
                                    mem[_22569 + 100] = address(_20634)
                                    mem[_22569 + 132] = 128
                                    mem[_22569 + 164] = mem[_22569]
                                    s = 0
                                    while s < mem[_22569]:
                                        mem[s + _22569 + 196] = mem[s + _22569 + 32]
                                        _19907 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22569]) > mem[_22569]:
                                        mem[mem[_22569] + _22569 + 196] = 0
                                    require ext_code.size(address(_22568))
                                    call address(_22568).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20212, address(_20634), 128, mem[_22569], mem[_22569 + 196 len ceil32(mem[_22569])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21860 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20212
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21860))
                                    call address(_21860).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20212, 0, this.address
                                else:
                                    _21862 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21863 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21863 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21863 + 36] = _20212
                                    mem[_21863 + 68] = 0
                                    mem[_21863 + 100] = this.address
                                    mem[_21863 + 132] = 128
                                    mem[_21863 + 164] = mem[_21863]
                                    s = 0
                                    while s < mem[_21863]:
                                        mem[s + _21863 + 196] = mem[s + _21863 + 32]
                                        _19907 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21863]) > mem[_21863]:
                                        mem[mem[_21863] + _21863 + 196] = 0
                                    require ext_code.size(address(_21862))
                                    call address(_21862).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20212, 0, address(this.address), 128, mem[_21863], mem[_21863 + 196 len ceil32(mem[_21863])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20636 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22571 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20212
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_20636)
                                    require ext_code.size(address(_22571))
                                    call address(_22571).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20212, 0, address(_20636)
                                else:
                                    _22573 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22574 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22574 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22574 + 36] = _20212
                                    mem[_22574 + 68] = 0
                                    mem[_22574 + 100] = address(_20636)
                                    mem[_22574 + 132] = 128
                                    mem[_22574 + 164] = mem[_22574]
                                    s = 0
                                    while s < mem[_22574]:
                                        mem[s + _22574 + 196] = mem[s + _22574 + 32]
                                        _19907 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22574]) > mem[_22574]:
                                        mem[mem[_22574] + _22574 + 196] = 0
                                    require ext_code.size(address(_22573))
                                    call address(_22573).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20212, 0, address(_20636), 128, mem[_22574], mem[_22574 + 196 len ceil32(mem[_22574])]
                    else:
                        _20213 = mem[(32 * idx + 1) + _5155 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21866 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20213
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21866))
                                    call address(_21866).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20213, this.address
                                else:
                                    _21868 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21869 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21869 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21869 + 36] = 0
                                    mem[_21869 + 68] = _20213
                                    mem[_21869 + 100] = this.address
                                    mem[_21869 + 132] = 128
                                    mem[_21869 + 164] = mem[_21869]
                                    s = 0
                                    while s < mem[_21869]:
                                        mem[s + _21869 + 196] = mem[s + _21869 + 32]
                                        _19907 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21869]) > mem[_21869]:
                                        mem[mem[_21869] + _21869 + 196] = 0
                                    require ext_code.size(address(_21868))
                                    call address(_21868).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20213, address(this.address), 128, mem[_21869], mem[_21869 + 196 len ceil32(mem[_21869])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20638 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22576 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20213
                                    mem[mem[64] + 68] = address(_20638)
                                    require ext_code.size(address(_22576))
                                    call address(_22576).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20213, address(_20638)
                                else:
                                    _22578 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22579 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22579 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22579 + 36] = 0
                                    mem[_22579 + 68] = _20213
                                    mem[_22579 + 100] = address(_20638)
                                    mem[_22579 + 132] = 128
                                    mem[_22579 + 164] = mem[_22579]
                                    s = 0
                                    while s < mem[_22579]:
                                        mem[s + _22579 + 196] = mem[s + _22579 + 32]
                                        _19907 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22579]) > mem[_22579]:
                                        mem[mem[_22579] + _22579 + 196] = 0
                                    require ext_code.size(address(_22578))
                                    call address(_22578).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20213, address(_20638), 128, mem[_22579], mem[_22579 + 196 len ceil32(mem[_22579])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21872 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20213
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21872))
                                    call address(_21872).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20213, 0, this.address
                                else:
                                    _21874 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21875 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21875 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21875 + 36] = _20213
                                    mem[_21875 + 68] = 0
                                    mem[_21875 + 100] = this.address
                                    mem[_21875 + 132] = 128
                                    mem[_21875 + 164] = mem[_21875]
                                    s = 0
                                    while s < mem[_21875]:
                                        mem[s + _21875 + 196] = mem[s + _21875 + 32]
                                        _19907 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21875]) > mem[_21875]:
                                        mem[mem[_21875] + _21875 + 196] = 0
                                    require ext_code.size(address(_21874))
                                    call address(_21874).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20213, 0, address(this.address), 128, mem[_21875], mem[_21875 + 196 len ceil32(mem[_21875])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20640 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22581 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20213
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_20640)
                                    require ext_code.size(address(_22581))
                                    call address(_22581).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20213, 0, address(_20640)
                                else:
                                    _22583 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22584 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22584 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22584 + 36] = _20213
                                    mem[_22584 + 68] = 0
                                    mem[_22584 + 100] = address(_20640)
                                    mem[_22584 + 132] = 128
                                    mem[_22584 + 164] = mem[_22584]
                                    s = 0
                                    while s < mem[_22584]:
                                        mem[s + _22584 + 196] = mem[s + _22584 + 32]
                                        _19907 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22584]) > mem[_22584]:
                                        mem[mem[_22584] + _22584 + 196] = 0
                                    require ext_code.size(address(_22583))
                                    call address(_22583).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20213, 0, address(_20640), 128, mem[_22584], mem[_22584 + 196 len ceil32(mem[_22584])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19907 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                _20099 = mem[_5155]
                mem[mem[64] + 32] = mem[_5155]
                mem[mem[64] + 64 len 32 * _20099] = mem[_5155 + 32 len 32 * _20099]
                return 32, mem[mem[64] + 32 len (32 * _20099) + 32]
            _15390 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_15390] = return_data.size
            mem[_15390 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            if not return_data.size:
                _19908 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _19908 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_5155]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _20214 = mem[(32 * idx + 1) + _5155 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21879 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20214
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21879))
                                    call address(_21879).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20214, this.address
                                else:
                                    _21881 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21882 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21882 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21882 + 36] = 0
                                    mem[_21882 + 68] = _20214
                                    mem[_21882 + 100] = this.address
                                    mem[_21882 + 132] = 128
                                    mem[_21882 + 164] = mem[_21882]
                                    s = 0
                                    while s < mem[_21882]:
                                        mem[s + _21882 + 196] = mem[s + _21882 + 32]
                                        _19908 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21882]) > mem[_21882]:
                                        mem[mem[_21882] + _21882 + 196] = 0
                                    require ext_code.size(address(_21881))
                                    call address(_21881).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20214, address(this.address), 128, mem[_21882], mem[_21882 + 196 len ceil32(mem[_21882])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20642 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22586 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20214
                                    mem[mem[64] + 68] = address(_20642)
                                    require ext_code.size(address(_22586))
                                    call address(_22586).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20214, address(_20642)
                                else:
                                    _22588 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22589 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22589 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22589 + 36] = 0
                                    mem[_22589 + 68] = _20214
                                    mem[_22589 + 100] = address(_20642)
                                    mem[_22589 + 132] = 128
                                    mem[_22589 + 164] = mem[_22589]
                                    s = 0
                                    while s < mem[_22589]:
                                        mem[s + _22589 + 196] = mem[s + _22589 + 32]
                                        _19908 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22589]) > mem[_22589]:
                                        mem[mem[_22589] + _22589 + 196] = 0
                                    require ext_code.size(address(_22588))
                                    call address(_22588).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20214, address(_20642), 128, mem[_22589], mem[_22589 + 196 len ceil32(mem[_22589])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21885 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20214
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21885))
                                    call address(_21885).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20214, 0, this.address
                                else:
                                    _21887 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21888 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21888 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21888 + 36] = _20214
                                    mem[_21888 + 68] = 0
                                    mem[_21888 + 100] = this.address
                                    mem[_21888 + 132] = 128
                                    mem[_21888 + 164] = mem[_21888]
                                    s = 0
                                    while s < mem[_21888]:
                                        mem[s + _21888 + 196] = mem[s + _21888 + 32]
                                        _19908 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21888]) > mem[_21888]:
                                        mem[mem[_21888] + _21888 + 196] = 0
                                    require ext_code.size(address(_21887))
                                    call address(_21887).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20214, 0, address(this.address), 128, mem[_21888], mem[_21888 + 196 len ceil32(mem[_21888])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20644 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22591 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20214
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_20644)
                                    require ext_code.size(address(_22591))
                                    call address(_22591).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20214, 0, address(_20644)
                                else:
                                    _22593 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22594 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22594 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22594 + 36] = _20214
                                    mem[_22594 + 68] = 0
                                    mem[_22594 + 100] = address(_20644)
                                    mem[_22594 + 132] = 128
                                    mem[_22594 + 164] = mem[_22594]
                                    s = 0
                                    while s < mem[_22594]:
                                        mem[s + _22594 + 196] = mem[s + _22594 + 32]
                                        _19908 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22594]) > mem[_22594]:
                                        mem[mem[_22594] + _22594 + 196] = 0
                                    require ext_code.size(address(_22593))
                                    call address(_22593).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20214, 0, address(_20644), 128, mem[_22594], mem[_22594 + 196 len ceil32(mem[_22594])]
                    else:
                        _20215 = mem[(32 * idx + 1) + _5155 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21891 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20215
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21891))
                                    call address(_21891).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20215, this.address
                                else:
                                    _21893 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21894 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21894 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21894 + 36] = 0
                                    mem[_21894 + 68] = _20215
                                    mem[_21894 + 100] = this.address
                                    mem[_21894 + 132] = 128
                                    mem[_21894 + 164] = mem[_21894]
                                    s = 0
                                    while s < mem[_21894]:
                                        mem[s + _21894 + 196] = mem[s + _21894 + 32]
                                        _19908 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21894]) > mem[_21894]:
                                        mem[mem[_21894] + _21894 + 196] = 0
                                    require ext_code.size(address(_21893))
                                    call address(_21893).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20215, address(this.address), 128, mem[_21894], mem[_21894 + 196 len ceil32(mem[_21894])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20646 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22596 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20215
                                    mem[mem[64] + 68] = address(_20646)
                                    require ext_code.size(address(_22596))
                                    call address(_22596).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20215, address(_20646)
                                else:
                                    _22598 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22599 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22599 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22599 + 36] = 0
                                    mem[_22599 + 68] = _20215
                                    mem[_22599 + 100] = address(_20646)
                                    mem[_22599 + 132] = 128
                                    mem[_22599 + 164] = mem[_22599]
                                    s = 0
                                    while s < mem[_22599]:
                                        mem[s + _22599 + 196] = mem[s + _22599 + 32]
                                        _19908 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22599]) > mem[_22599]:
                                        mem[mem[_22599] + _22599 + 196] = 0
                                    require ext_code.size(address(_22598))
                                    call address(_22598).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20215, address(_20646), 128, mem[_22599], mem[_22599 + 196 len ceil32(mem[_22599])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21897 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20215
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21897))
                                    call address(_21897).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20215, 0, this.address
                                else:
                                    _21899 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21900 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21900 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21900 + 36] = _20215
                                    mem[_21900 + 68] = 0
                                    mem[_21900 + 100] = this.address
                                    mem[_21900 + 132] = 128
                                    mem[_21900 + 164] = mem[_21900]
                                    s = 0
                                    while s < mem[_21900]:
                                        mem[s + _21900 + 196] = mem[s + _21900 + 32]
                                        _19908 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21900]) > mem[_21900]:
                                        mem[mem[_21900] + _21900 + 196] = 0
                                    require ext_code.size(address(_21899))
                                    call address(_21899).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20215, 0, address(this.address), 128, mem[_21900], mem[_21900 + 196 len ceil32(mem[_21900])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20648 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22601 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20215
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_20648)
                                    require ext_code.size(address(_22601))
                                    call address(_22601).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20215, 0, address(_20648)
                                else:
                                    _22603 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22604 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22604 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22604 + 36] = _20215
                                    mem[_22604 + 68] = 0
                                    mem[_22604 + 100] = address(_20648)
                                    mem[_22604 + 132] = 128
                                    mem[_22604 + 164] = mem[_22604]
                                    s = 0
                                    while s < mem[_22604]:
                                        mem[s + _22604 + 196] = mem[s + _22604 + 32]
                                        _19908 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22604]) > mem[_22604]:
                                        mem[mem[_22604] + _22604 + 196] = 0
                                    require ext_code.size(address(_22603))
                                    call address(_22603).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20215, 0, address(_20648), 128, mem[_22604], mem[_22604 + 196 len ceil32(mem[_22604])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19908 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                _20100 = mem[_5155]
                mem[mem[64] + 32] = mem[_5155]
                mem[mem[64] + 64 len 32 * _20100] = mem[_5155 + 32 len 32 * _20100]
                var150001 = _20100
                return 32, mem[mem[64] + 32 len (32 * _20100) + 32]
            require return_data.size >= 32
            require mem[_15390 + 32] == bool(mem[_15390 + 32])
            if not mem[_15390 + 32]:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            _19909 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _19909 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_5155]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _20216 = mem[(32 * idx + 1) + _5155 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _21904 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20216
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_21904))
                                call address(_21904).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20216, this.address
                            else:
                                _21906 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _21907 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_21907 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_21907 + 36] = 0
                                mem[_21907 + 68] = _20216
                                mem[_21907 + 100] = this.address
                                mem[_21907 + 132] = 128
                                mem[_21907 + 164] = mem[_21907]
                                s = 0
                                while s < mem[_21907]:
                                    mem[s + _21907 + 196] = mem[s + _21907 + 32]
                                    _19909 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_21907]) > mem[_21907]:
                                    mem[mem[_21907] + _21907 + 196] = 0
                                require ext_code.size(address(_21906))
                                call address(_21906).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20216, address(this.address), 128, mem[_21907], mem[_21907 + 196 len ceil32(mem[_21907])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20650 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22606 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20216
                                mem[mem[64] + 68] = address(_20650)
                                require ext_code.size(address(_22606))
                                call address(_22606).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20216, address(_20650)
                            else:
                                _22608 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22609 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22609 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22609 + 36] = 0
                                mem[_22609 + 68] = _20216
                                mem[_22609 + 100] = address(_20650)
                                mem[_22609 + 132] = 128
                                mem[_22609 + 164] = mem[_22609]
                                s = 0
                                while s < mem[_22609]:
                                    mem[s + _22609 + 196] = mem[s + _22609 + 32]
                                    _19909 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22609]) > mem[_22609]:
                                    mem[mem[_22609] + _22609 + 196] = 0
                                require ext_code.size(address(_22608))
                                call address(_22608).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20216, address(_20650), 128, mem[_22609], mem[_22609 + 196 len ceil32(mem[_22609])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _21910 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20216
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_21910))
                                call address(_21910).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20216, 0, this.address
                            else:
                                _21912 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _21913 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_21913 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_21913 + 36] = _20216
                                mem[_21913 + 68] = 0
                                mem[_21913 + 100] = this.address
                                mem[_21913 + 132] = 128
                                mem[_21913 + 164] = mem[_21913]
                                s = 0
                                while s < mem[_21913]:
                                    mem[s + _21913 + 196] = mem[s + _21913 + 32]
                                    _19909 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_21913]) > mem[_21913]:
                                    mem[mem[_21913] + _21913 + 196] = 0
                                require ext_code.size(address(_21912))
                                call address(_21912).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20216, 0, address(this.address), 128, mem[_21913], mem[_21913 + 196 len ceil32(mem[_21913])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20652 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22611 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20216
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20652)
                                require ext_code.size(address(_22611))
                                call address(_22611).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20216, 0, address(_20652)
                            else:
                                _22613 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22614 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22614 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22614 + 36] = _20216
                                mem[_22614 + 68] = 0
                                mem[_22614 + 100] = address(_20652)
                                mem[_22614 + 132] = 128
                                mem[_22614 + 164] = mem[_22614]
                                s = 0
                                while s < mem[_22614]:
                                    mem[s + _22614 + 196] = mem[s + _22614 + 32]
                                    _19909 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22614]) > mem[_22614]:
                                    mem[mem[_22614] + _22614 + 196] = 0
                                require ext_code.size(address(_22613))
                                call address(_22613).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20216, 0, address(_20652), 128, mem[_22614], mem[_22614 + 196 len ceil32(mem[_22614])]
                else:
                    _20217 = mem[(32 * idx + 1) + _5155 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _21916 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20217
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_21916))
                                call address(_21916).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20217, this.address
                            else:
                                _21918 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _21919 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_21919 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_21919 + 36] = 0
                                mem[_21919 + 68] = _20217
                                mem[_21919 + 100] = this.address
                                mem[_21919 + 132] = 128
                                mem[_21919 + 164] = mem[_21919]
                                s = 0
                                while s < mem[_21919]:
                                    mem[s + _21919 + 196] = mem[s + _21919 + 32]
                                    _19909 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_21919]) > mem[_21919]:
                                    mem[mem[_21919] + _21919 + 196] = 0
                                require ext_code.size(address(_21918))
                                call address(_21918).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20217, address(this.address), 128, mem[_21919], mem[_21919 + 196 len ceil32(mem[_21919])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20654 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22616 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20217
                                mem[mem[64] + 68] = address(_20654)
                                require ext_code.size(address(_22616))
                                call address(_22616).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20217, address(_20654)
                            else:
                                _22618 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22619 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22619 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22619 + 36] = 0
                                mem[_22619 + 68] = _20217
                                mem[_22619 + 100] = address(_20654)
                                mem[_22619 + 132] = 128
                                mem[_22619 + 164] = mem[_22619]
                                s = 0
                                while s < mem[_22619]:
                                    mem[s + _22619 + 196] = mem[s + _22619 + 32]
                                    _19909 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22619]) > mem[_22619]:
                                    mem[mem[_22619] + _22619 + 196] = 0
                                require ext_code.size(address(_22618))
                                call address(_22618).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20217, address(_20654), 128, mem[_22619], mem[_22619 + 196 len ceil32(mem[_22619])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _21922 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20217
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_21922))
                                call address(_21922).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20217, 0, this.address
                            else:
                                _21924 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _21925 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_21925 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_21925 + 36] = _20217
                                mem[_21925 + 68] = 0
                                mem[_21925 + 100] = this.address
                                mem[_21925 + 132] = 128
                                mem[_21925 + 164] = mem[_21925]
                                s = 0
                                while s < mem[_21925]:
                                    mem[s + _21925 + 196] = mem[s + _21925 + 32]
                                    _19909 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_21925]) > mem[_21925]:
                                    mem[mem[_21925] + _21925 + 196] = 0
                                require ext_code.size(address(_21924))
                                call address(_21924).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20217, 0, address(this.address), 128, mem[_21925], mem[_21925 + 196 len ceil32(mem[_21925])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20656 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22621 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20217
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20656)
                                require ext_code.size(address(_22621))
                                call address(_22621).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20217, 0, address(_20656)
                            else:
                                _22623 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22624 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22624 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22624 + 36] = _20217
                                mem[_22624 + 68] = 0
                                mem[_22624 + 100] = address(_20656)
                                mem[_22624 + 132] = 128
                                mem[_22624 + 164] = mem[_22624]
                                s = 0
                                while s < mem[_22624]:
                                    mem[s + _22624 + 196] = mem[s + _22624 + 32]
                                    _19909 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22624]) > mem[_22624]:
                                    mem[mem[_22624] + _22624 + 196] = 0
                                require ext_code.size(address(_22623))
                                call address(_22623).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20217, 0, address(_20656), 128, mem[_22624], mem[_22624 + 196 len ceil32(mem[_22624])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19909 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _20101 = mem[_5155]
            mem[mem[64] + 32] = mem[_5155]
            mem[mem[64] + 64 len 32 * _20101] = mem[_5155 + 32 len 32 * _20101]
            return 32, mem[mem[64] + 32 len (32 * _20101) + 32]
        mem[_10380 + _10328 + 100] = 0
        call address(_10302) with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _10380 + _10328 + -mem[64] + 96]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            if not mem[96]:
                _19910 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _19910 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_5155]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _20218 = mem[(32 * idx + 1) + _5155 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21929 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20218
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21929))
                                    call address(_21929).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20218, this.address
                                else:
                                    _21931 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21932 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21932 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21932 + 36] = 0
                                    mem[_21932 + 68] = _20218
                                    mem[_21932 + 100] = this.address
                                    mem[_21932 + 132] = 128
                                    mem[_21932 + 164] = mem[_21932]
                                    s = 0
                                    while s < mem[_21932]:
                                        mem[s + _21932 + 196] = mem[s + _21932 + 32]
                                        _19910 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21932]) > mem[_21932]:
                                        mem[mem[_21932] + _21932 + 196] = 0
                                    require ext_code.size(address(_21931))
                                    call address(_21931).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20218, address(this.address), 128, mem[_21932], mem[_21932 + 196 len ceil32(mem[_21932])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20658 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22626 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20218
                                    mem[mem[64] + 68] = address(_20658)
                                    require ext_code.size(address(_22626))
                                    call address(_22626).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20218, address(_20658)
                                else:
                                    _22628 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22629 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22629 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22629 + 36] = 0
                                    mem[_22629 + 68] = _20218
                                    mem[_22629 + 100] = address(_20658)
                                    mem[_22629 + 132] = 128
                                    mem[_22629 + 164] = mem[_22629]
                                    s = 0
                                    while s < mem[_22629]:
                                        mem[s + _22629 + 196] = mem[s + _22629 + 32]
                                        _19910 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22629]) > mem[_22629]:
                                        mem[mem[_22629] + _22629 + 196] = 0
                                    require ext_code.size(address(_22628))
                                    call address(_22628).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20218, address(_20658), 128, mem[_22629], mem[_22629 + 196 len ceil32(mem[_22629])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21935 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20218
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21935))
                                    call address(_21935).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20218, 0, this.address
                                else:
                                    _21937 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21938 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21938 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21938 + 36] = _20218
                                    mem[_21938 + 68] = 0
                                    mem[_21938 + 100] = this.address
                                    mem[_21938 + 132] = 128
                                    mem[_21938 + 164] = mem[_21938]
                                    s = 0
                                    while s < mem[_21938]:
                                        mem[s + _21938 + 196] = mem[s + _21938 + 32]
                                        _19910 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21938]) > mem[_21938]:
                                        mem[mem[_21938] + _21938 + 196] = 0
                                    require ext_code.size(address(_21937))
                                    call address(_21937).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20218, 0, address(this.address), 128, mem[_21938], mem[_21938 + 196 len ceil32(mem[_21938])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20660 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22631 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20218
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_20660)
                                    require ext_code.size(address(_22631))
                                    call address(_22631).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20218, 0, address(_20660)
                                else:
                                    _22633 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22634 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22634 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22634 + 36] = _20218
                                    mem[_22634 + 68] = 0
                                    mem[_22634 + 100] = address(_20660)
                                    mem[_22634 + 132] = 128
                                    mem[_22634 + 164] = mem[_22634]
                                    s = 0
                                    while s < mem[_22634]:
                                        mem[s + _22634 + 196] = mem[s + _22634 + 32]
                                        _19910 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22634]) > mem[_22634]:
                                        mem[mem[_22634] + _22634 + 196] = 0
                                    require ext_code.size(address(_22633))
                                    call address(_22633).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20218, 0, address(_20660), 128, mem[_22634], mem[_22634 + 196 len ceil32(mem[_22634])]
                    else:
                        _20219 = mem[(32 * idx + 1) + _5155 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21941 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20219
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21941))
                                    call address(_21941).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20219, this.address
                                else:
                                    _21943 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21944 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21944 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21944 + 36] = 0
                                    mem[_21944 + 68] = _20219
                                    mem[_21944 + 100] = this.address
                                    mem[_21944 + 132] = 128
                                    mem[_21944 + 164] = mem[_21944]
                                    s = 0
                                    while s < mem[_21944]:
                                        mem[s + _21944 + 196] = mem[s + _21944 + 32]
                                        _19910 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21944]) > mem[_21944]:
                                        mem[mem[_21944] + _21944 + 196] = 0
                                    require ext_code.size(address(_21943))
                                    call address(_21943).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20219, address(this.address), 128, mem[_21944], mem[_21944 + 196 len ceil32(mem[_21944])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20662 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22636 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20219
                                    mem[mem[64] + 68] = address(_20662)
                                    require ext_code.size(address(_22636))
                                    call address(_22636).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20219, address(_20662)
                                else:
                                    _22638 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22639 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22639 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22639 + 36] = 0
                                    mem[_22639 + 68] = _20219
                                    mem[_22639 + 100] = address(_20662)
                                    mem[_22639 + 132] = 128
                                    mem[_22639 + 164] = mem[_22639]
                                    s = 0
                                    while s < mem[_22639]:
                                        mem[s + _22639 + 196] = mem[s + _22639 + 32]
                                        _19910 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22639]) > mem[_22639]:
                                        mem[mem[_22639] + _22639 + 196] = 0
                                    require ext_code.size(address(_22638))
                                    call address(_22638).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20219, address(_20662), 128, mem[_22639], mem[_22639 + 196 len ceil32(mem[_22639])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21947 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20219
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21947))
                                    call address(_21947).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20219, 0, this.address
                                else:
                                    _21949 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21950 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21950 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21950 + 36] = _20219
                                    mem[_21950 + 68] = 0
                                    mem[_21950 + 100] = this.address
                                    mem[_21950 + 132] = 128
                                    mem[_21950 + 164] = mem[_21950]
                                    s = 0
                                    while s < mem[_21950]:
                                        mem[s + _21950 + 196] = mem[s + _21950 + 32]
                                        _19910 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21950]) > mem[_21950]:
                                        mem[mem[_21950] + _21950 + 196] = 0
                                    require ext_code.size(address(_21949))
                                    call address(_21949).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20219, 0, address(this.address), 128, mem[_21950], mem[_21950 + 196 len ceil32(mem[_21950])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20664 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22641 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20219
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_20664)
                                    require ext_code.size(address(_22641))
                                    call address(_22641).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20219, 0, address(_20664)
                                else:
                                    _22643 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22644 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22644 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22644 + 36] = _20219
                                    mem[_22644 + 68] = 0
                                    mem[_22644 + 100] = address(_20664)
                                    mem[_22644 + 132] = 128
                                    mem[_22644 + 164] = mem[_22644]
                                    s = 0
                                    while s < mem[_22644]:
                                        mem[s + _22644 + 196] = mem[s + _22644 + 32]
                                        _19910 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22644]) > mem[_22644]:
                                        mem[mem[_22644] + _22644 + 196] = 0
                                    require ext_code.size(address(_22643))
                                    call address(_22643).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20219, 0, address(_20664), 128, mem[_22644], mem[_22644 + 196 len ceil32(mem[_22644])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19910 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                _20102 = mem[_5155]
                mem[mem[64] + 32] = mem[_5155]
                mem[mem[64] + 64 len 32 * _20102] = mem[_5155 + 32 len 32 * _20102]
                var150001 = _20102
                return 32, mem[mem[64] + 32 len (32 * _20102) + 32]
            require mem[96] >= 32
            require mem[128] == bool(mem[128])
            if not mem[128]:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            _19911 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _19911 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_5155]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _20220 = mem[(32 * idx + 1) + _5155 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _21954 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20220
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_21954))
                                call address(_21954).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20220, this.address
                            else:
                                _21956 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _21957 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_21957 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_21957 + 36] = 0
                                mem[_21957 + 68] = _20220
                                mem[_21957 + 100] = this.address
                                mem[_21957 + 132] = 128
                                mem[_21957 + 164] = mem[_21957]
                                s = 0
                                while s < mem[_21957]:
                                    mem[s + _21957 + 196] = mem[s + _21957 + 32]
                                    _19911 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_21957]) > mem[_21957]:
                                    mem[mem[_21957] + _21957 + 196] = 0
                                require ext_code.size(address(_21956))
                                call address(_21956).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20220, address(this.address), 128, mem[_21957], mem[_21957 + 196 len ceil32(mem[_21957])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20666 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22646 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20220
                                mem[mem[64] + 68] = address(_20666)
                                require ext_code.size(address(_22646))
                                call address(_22646).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20220, address(_20666)
                            else:
                                _22648 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22649 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22649 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22649 + 36] = 0
                                mem[_22649 + 68] = _20220
                                mem[_22649 + 100] = address(_20666)
                                mem[_22649 + 132] = 128
                                mem[_22649 + 164] = mem[_22649]
                                s = 0
                                while s < mem[_22649]:
                                    mem[s + _22649 + 196] = mem[s + _22649 + 32]
                                    _19911 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22649]) > mem[_22649]:
                                    mem[mem[_22649] + _22649 + 196] = 0
                                require ext_code.size(address(_22648))
                                call address(_22648).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20220, address(_20666), 128, mem[_22649], mem[_22649 + 196 len ceil32(mem[_22649])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _21960 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20220
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_21960))
                                call address(_21960).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20220, 0, this.address
                            else:
                                _21962 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _21963 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_21963 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_21963 + 36] = _20220
                                mem[_21963 + 68] = 0
                                mem[_21963 + 100] = this.address
                                mem[_21963 + 132] = 128
                                mem[_21963 + 164] = mem[_21963]
                                s = 0
                                while s < mem[_21963]:
                                    mem[s + _21963 + 196] = mem[s + _21963 + 32]
                                    _19911 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_21963]) > mem[_21963]:
                                    mem[mem[_21963] + _21963 + 196] = 0
                                require ext_code.size(address(_21962))
                                call address(_21962).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20220, 0, address(this.address), 128, mem[_21963], mem[_21963 + 196 len ceil32(mem[_21963])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20668 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22651 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20220
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20668)
                                require ext_code.size(address(_22651))
                                call address(_22651).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20220, 0, address(_20668)
                            else:
                                _22653 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22654 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22654 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22654 + 36] = _20220
                                mem[_22654 + 68] = 0
                                mem[_22654 + 100] = address(_20668)
                                mem[_22654 + 132] = 128
                                mem[_22654 + 164] = mem[_22654]
                                s = 0
                                while s < mem[_22654]:
                                    mem[s + _22654 + 196] = mem[s + _22654 + 32]
                                    _19911 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22654]) > mem[_22654]:
                                    mem[mem[_22654] + _22654 + 196] = 0
                                require ext_code.size(address(_22653))
                                call address(_22653).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20220, 0, address(_20668), 128, mem[_22654], mem[_22654 + 196 len ceil32(mem[_22654])]
                else:
                    _20221 = mem[(32 * idx + 1) + _5155 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _21966 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20221
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_21966))
                                call address(_21966).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20221, this.address
                            else:
                                _21968 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _21969 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_21969 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_21969 + 36] = 0
                                mem[_21969 + 68] = _20221
                                mem[_21969 + 100] = this.address
                                mem[_21969 + 132] = 128
                                mem[_21969 + 164] = mem[_21969]
                                s = 0
                                while s < mem[_21969]:
                                    mem[s + _21969 + 196] = mem[s + _21969 + 32]
                                    _19911 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_21969]) > mem[_21969]:
                                    mem[mem[_21969] + _21969 + 196] = 0
                                require ext_code.size(address(_21968))
                                call address(_21968).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20221, address(this.address), 128, mem[_21969], mem[_21969 + 196 len ceil32(mem[_21969])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20670 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22656 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20221
                                mem[mem[64] + 68] = address(_20670)
                                require ext_code.size(address(_22656))
                                call address(_22656).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20221, address(_20670)
                            else:
                                _22658 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22659 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22659 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22659 + 36] = 0
                                mem[_22659 + 68] = _20221
                                mem[_22659 + 100] = address(_20670)
                                mem[_22659 + 132] = 128
                                mem[_22659 + 164] = mem[_22659]
                                s = 0
                                while s < mem[_22659]:
                                    mem[s + _22659 + 196] = mem[s + _22659 + 32]
                                    _19911 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22659]) > mem[_22659]:
                                    mem[mem[_22659] + _22659 + 196] = 0
                                require ext_code.size(address(_22658))
                                call address(_22658).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20221, address(_20670), 128, mem[_22659], mem[_22659 + 196 len ceil32(mem[_22659])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _21972 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20221
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_21972))
                                call address(_21972).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20221, 0, this.address
                            else:
                                _21974 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _21975 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_21975 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_21975 + 36] = _20221
                                mem[_21975 + 68] = 0
                                mem[_21975 + 100] = this.address
                                mem[_21975 + 132] = 128
                                mem[_21975 + 164] = mem[_21975]
                                s = 0
                                while s < mem[_21975]:
                                    mem[s + _21975 + 196] = mem[s + _21975 + 32]
                                    _19911 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_21975]) > mem[_21975]:
                                    mem[mem[_21975] + _21975 + 196] = 0
                                require ext_code.size(address(_21974))
                                call address(_21974).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20221, 0, address(this.address), 128, mem[_21975], mem[_21975 + 196 len ceil32(mem[_21975])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20672 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22661 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20221
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20672)
                                require ext_code.size(address(_22661))
                                call address(_22661).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20221, 0, address(_20672)
                            else:
                                _22663 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22664 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22664 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22664 + 36] = _20221
                                mem[_22664 + 68] = 0
                                mem[_22664 + 100] = address(_20672)
                                mem[_22664 + 132] = 128
                                mem[_22664 + 164] = mem[_22664]
                                s = 0
                                while s < mem[_22664]:
                                    mem[s + _22664 + 196] = mem[s + _22664 + 32]
                                    _19911 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22664]) > mem[_22664]:
                                    mem[mem[_22664] + _22664 + 196] = 0
                                require ext_code.size(address(_22663))
                                call address(_22663).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20221, 0, address(_20672), 128, mem[_22664], mem[_22664 + 196 len ceil32(mem[_22664])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19911 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _20103 = mem[_5155]
            mem[mem[64] + 32] = mem[_5155]
            mem[mem[64] + 64 len 32 * _20103] = mem[_5155 + 32 len 32 * _20103]
            return 32, mem[mem[64] + 32 len (32 * _20103) + 32]
        _15391 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size) + 1
        mem[_15391] = return_data.size
        mem[_15391 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        if not return_data.size:
            _19912 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _19912 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_5155]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _20222 = mem[(32 * idx + 1) + _5155 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _21979 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20222
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_21979))
                                call address(_21979).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20222, this.address
                            else:
                                _21981 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _21982 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_21982 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_21982 + 36] = 0
                                mem[_21982 + 68] = _20222
                                mem[_21982 + 100] = this.address
                                mem[_21982 + 132] = 128
                                mem[_21982 + 164] = mem[_21982]
                                s = 0
                                while s < mem[_21982]:
                                    mem[s + _21982 + 196] = mem[s + _21982 + 32]
                                    _19912 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_21982]) > mem[_21982]:
                                    mem[mem[_21982] + _21982 + 196] = 0
                                require ext_code.size(address(_21981))
                                call address(_21981).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20222, address(this.address), 128, mem[_21982], mem[_21982 + 196 len ceil32(mem[_21982])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20674 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22666 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20222
                                mem[mem[64] + 68] = address(_20674)
                                require ext_code.size(address(_22666))
                                call address(_22666).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20222, address(_20674)
                            else:
                                _22668 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22669 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22669 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22669 + 36] = 0
                                mem[_22669 + 68] = _20222
                                mem[_22669 + 100] = address(_20674)
                                mem[_22669 + 132] = 128
                                mem[_22669 + 164] = mem[_22669]
                                s = 0
                                while s < mem[_22669]:
                                    mem[s + _22669 + 196] = mem[s + _22669 + 32]
                                    _19912 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22669]) > mem[_22669]:
                                    mem[mem[_22669] + _22669 + 196] = 0
                                require ext_code.size(address(_22668))
                                call address(_22668).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20222, address(_20674), 128, mem[_22669], mem[_22669 + 196 len ceil32(mem[_22669])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _21985 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20222
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_21985))
                                call address(_21985).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20222, 0, this.address
                            else:
                                _21987 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _21988 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_21988 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_21988 + 36] = _20222
                                mem[_21988 + 68] = 0
                                mem[_21988 + 100] = this.address
                                mem[_21988 + 132] = 128
                                mem[_21988 + 164] = mem[_21988]
                                s = 0
                                while s < mem[_21988]:
                                    mem[s + _21988 + 196] = mem[s + _21988 + 32]
                                    _19912 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_21988]) > mem[_21988]:
                                    mem[mem[_21988] + _21988 + 196] = 0
                                require ext_code.size(address(_21987))
                                call address(_21987).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20222, 0, address(this.address), 128, mem[_21988], mem[_21988 + 196 len ceil32(mem[_21988])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20676 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22671 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20222
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20676)
                                require ext_code.size(address(_22671))
                                call address(_22671).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20222, 0, address(_20676)
                            else:
                                _22673 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22674 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22674 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22674 + 36] = _20222
                                mem[_22674 + 68] = 0
                                mem[_22674 + 100] = address(_20676)
                                mem[_22674 + 132] = 128
                                mem[_22674 + 164] = mem[_22674]
                                s = 0
                                while s < mem[_22674]:
                                    mem[s + _22674 + 196] = mem[s + _22674 + 32]
                                    _19912 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22674]) > mem[_22674]:
                                    mem[mem[_22674] + _22674 + 196] = 0
                                require ext_code.size(address(_22673))
                                call address(_22673).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20222, 0, address(_20676), 128, mem[_22674], mem[_22674 + 196 len ceil32(mem[_22674])]
                else:
                    _20223 = mem[(32 * idx + 1) + _5155 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _21991 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20223
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_21991))
                                call address(_21991).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20223, this.address
                            else:
                                _21993 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _21994 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_21994 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_21994 + 36] = 0
                                mem[_21994 + 68] = _20223
                                mem[_21994 + 100] = this.address
                                mem[_21994 + 132] = 128
                                mem[_21994 + 164] = mem[_21994]
                                s = 0
                                while s < mem[_21994]:
                                    mem[s + _21994 + 196] = mem[s + _21994 + 32]
                                    _19912 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_21994]) > mem[_21994]:
                                    mem[mem[_21994] + _21994 + 196] = 0
                                require ext_code.size(address(_21993))
                                call address(_21993).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20223, address(this.address), 128, mem[_21994], mem[_21994 + 196 len ceil32(mem[_21994])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20678 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22676 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20223
                                mem[mem[64] + 68] = address(_20678)
                                require ext_code.size(address(_22676))
                                call address(_22676).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20223, address(_20678)
                            else:
                                _22678 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22679 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22679 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22679 + 36] = 0
                                mem[_22679 + 68] = _20223
                                mem[_22679 + 100] = address(_20678)
                                mem[_22679 + 132] = 128
                                mem[_22679 + 164] = mem[_22679]
                                s = 0
                                while s < mem[_22679]:
                                    mem[s + _22679 + 196] = mem[s + _22679 + 32]
                                    _19912 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22679]) > mem[_22679]:
                                    mem[mem[_22679] + _22679 + 196] = 0
                                require ext_code.size(address(_22678))
                                call address(_22678).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20223, address(_20678), 128, mem[_22679], mem[_22679 + 196 len ceil32(mem[_22679])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _21997 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20223
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_21997))
                                call address(_21997).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20223, 0, this.address
                            else:
                                _21999 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22000 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22000 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22000 + 36] = _20223
                                mem[_22000 + 68] = 0
                                mem[_22000 + 100] = this.address
                                mem[_22000 + 132] = 128
                                mem[_22000 + 164] = mem[_22000]
                                s = 0
                                while s < mem[_22000]:
                                    mem[s + _22000 + 196] = mem[s + _22000 + 32]
                                    _19912 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22000]) > mem[_22000]:
                                    mem[mem[_22000] + _22000 + 196] = 0
                                require ext_code.size(address(_21999))
                                call address(_21999).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20223, 0, address(this.address), 128, mem[_22000], mem[_22000 + 196 len ceil32(mem[_22000])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20680 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22681 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20223
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20680)
                                require ext_code.size(address(_22681))
                                call address(_22681).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20223, 0, address(_20680)
                            else:
                                _22683 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22684 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22684 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22684 + 36] = _20223
                                mem[_22684 + 68] = 0
                                mem[_22684 + 100] = address(_20680)
                                mem[_22684 + 132] = 128
                                mem[_22684 + 164] = mem[_22684]
                                s = 0
                                while s < mem[_22684]:
                                    mem[s + _22684 + 196] = mem[s + _22684 + 32]
                                    _19912 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22684]) > mem[_22684]:
                                    mem[mem[_22684] + _22684 + 196] = 0
                                require ext_code.size(address(_22683))
                                call address(_22683).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20223, 0, address(_20680), 128, mem[_22684], mem[_22684 + 196 len ceil32(mem[_22684])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19912 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _20104 = mem[_5155]
            mem[mem[64] + 32] = mem[_5155]
            mem[mem[64] + 64 len 32 * _20104] = mem[_5155 + 32 len 32 * _20104]
            var150001 = _20104
            return 32, mem[mem[64] + 32 len (32 * _20104) + 32]
        require return_data.size >= 32
        require mem[_15391 + 32] == bool(mem[_15391 + 32])
        if not mem[_15391 + 32]:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        _19913 = mem[ceil32(return_data.size) + 96]
        idx = 0
        while idx < _19913 - 1:
            require idx < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[_5155]
            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                _20224 = mem[(32 * idx + 1) + _5155 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22004 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20224
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22004))
                            call address(_22004).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20224, this.address
                        else:
                            _22006 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22007 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22007 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22007 + 36] = 0
                            mem[_22007 + 68] = _20224
                            mem[_22007 + 100] = this.address
                            mem[_22007 + 132] = 128
                            mem[_22007 + 164] = mem[_22007]
                            s = 0
                            while s < mem[_22007]:
                                mem[s + _22007 + 196] = mem[s + _22007 + 32]
                                _19913 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22007]) > mem[_22007]:
                                mem[mem[_22007] + _22007 + 196] = 0
                            require ext_code.size(address(_22006))
                            call address(_22006).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20224, address(this.address), 128, mem[_22007], mem[_22007 + 196 len ceil32(mem[_22007])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20682 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22686 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20224
                            mem[mem[64] + 68] = address(_20682)
                            require ext_code.size(address(_22686))
                            call address(_22686).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20224, address(_20682)
                        else:
                            _22688 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22689 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22689 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22689 + 36] = 0
                            mem[_22689 + 68] = _20224
                            mem[_22689 + 100] = address(_20682)
                            mem[_22689 + 132] = 128
                            mem[_22689 + 164] = mem[_22689]
                            s = 0
                            while s < mem[_22689]:
                                mem[s + _22689 + 196] = mem[s + _22689 + 32]
                                _19913 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22689]) > mem[_22689]:
                                mem[mem[_22689] + _22689 + 196] = 0
                            require ext_code.size(address(_22688))
                            call address(_22688).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20224, address(_20682), 128, mem[_22689], mem[_22689 + 196 len ceil32(mem[_22689])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22010 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20224
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22010))
                            call address(_22010).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20224, 0, this.address
                        else:
                            _22012 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22013 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22013 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22013 + 36] = _20224
                            mem[_22013 + 68] = 0
                            mem[_22013 + 100] = this.address
                            mem[_22013 + 132] = 128
                            mem[_22013 + 164] = mem[_22013]
                            s = 0
                            while s < mem[_22013]:
                                mem[s + _22013 + 196] = mem[s + _22013 + 32]
                                _19913 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22013]) > mem[_22013]:
                                mem[mem[_22013] + _22013 + 196] = 0
                            require ext_code.size(address(_22012))
                            call address(_22012).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20224, 0, address(this.address), 128, mem[_22013], mem[_22013 + 196 len ceil32(mem[_22013])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20684 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22691 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20224
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_20684)
                            require ext_code.size(address(_22691))
                            call address(_22691).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20224, 0, address(_20684)
                        else:
                            _22693 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22694 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22694 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22694 + 36] = _20224
                            mem[_22694 + 68] = 0
                            mem[_22694 + 100] = address(_20684)
                            mem[_22694 + 132] = 128
                            mem[_22694 + 164] = mem[_22694]
                            s = 0
                            while s < mem[_22694]:
                                mem[s + _22694 + 196] = mem[s + _22694 + 32]
                                _19913 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22694]) > mem[_22694]:
                                mem[mem[_22694] + _22694 + 196] = 0
                            require ext_code.size(address(_22693))
                            call address(_22693).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20224, 0, address(_20684), 128, mem[_22694], mem[_22694 + 196 len ceil32(mem[_22694])]
            else:
                _20225 = mem[(32 * idx + 1) + _5155 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22016 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20225
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22016))
                            call address(_22016).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20225, this.address
                        else:
                            _22018 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22019 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22019 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22019 + 36] = 0
                            mem[_22019 + 68] = _20225
                            mem[_22019 + 100] = this.address
                            mem[_22019 + 132] = 128
                            mem[_22019 + 164] = mem[_22019]
                            s = 0
                            while s < mem[_22019]:
                                mem[s + _22019 + 196] = mem[s + _22019 + 32]
                                _19913 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22019]) > mem[_22019]:
                                mem[mem[_22019] + _22019 + 196] = 0
                            require ext_code.size(address(_22018))
                            call address(_22018).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20225, address(this.address), 128, mem[_22019], mem[_22019 + 196 len ceil32(mem[_22019])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20686 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22696 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20225
                            mem[mem[64] + 68] = address(_20686)
                            require ext_code.size(address(_22696))
                            call address(_22696).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20225, address(_20686)
                        else:
                            _22698 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22699 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22699 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22699 + 36] = 0
                            mem[_22699 + 68] = _20225
                            mem[_22699 + 100] = address(_20686)
                            mem[_22699 + 132] = 128
                            mem[_22699 + 164] = mem[_22699]
                            s = 0
                            while s < mem[_22699]:
                                mem[s + _22699 + 196] = mem[s + _22699 + 32]
                                _19913 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22699]) > mem[_22699]:
                                mem[mem[_22699] + _22699 + 196] = 0
                            require ext_code.size(address(_22698))
                            call address(_22698).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20225, address(_20686), 128, mem[_22699], mem[_22699 + 196 len ceil32(mem[_22699])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22022 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20225
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22022))
                            call address(_22022).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20225, 0, this.address
                        else:
                            _22024 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22025 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22025 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22025 + 36] = _20225
                            mem[_22025 + 68] = 0
                            mem[_22025 + 100] = this.address
                            mem[_22025 + 132] = 128
                            mem[_22025 + 164] = mem[_22025]
                            s = 0
                            while s < mem[_22025]:
                                mem[s + _22025 + 196] = mem[s + _22025 + 32]
                                _19913 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22025]) > mem[_22025]:
                                mem[mem[_22025] + _22025 + 196] = 0
                            require ext_code.size(address(_22024))
                            call address(_22024).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20225, 0, address(this.address), 128, mem[_22025], mem[_22025 + 196 len ceil32(mem[_22025])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20688 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22701 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20225
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_20688)
                            require ext_code.size(address(_22701))
                            call address(_22701).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20225, 0, address(_20688)
                        else:
                            _22703 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22704 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22704 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22704 + 36] = _20225
                            mem[_22704 + 68] = 0
                            mem[_22704 + 100] = address(_20688)
                            mem[_22704 + 132] = 128
                            mem[_22704 + 164] = mem[_22704]
                            s = 0
                            while s < mem[_22704]:
                                mem[s + _22704 + 196] = mem[s + _22704 + 32]
                                _19913 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22704]) > mem[_22704]:
                                mem[mem[_22704] + _22704 + 196] = 0
                            require ext_code.size(address(_22703))
                            call address(_22703).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20225, 0, address(_20688), 128, mem[_22704], mem[_22704 + 196 len ceil32(mem[_22704])]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19913 = mem[ceil32(return_data.size) + 96]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _20105 = mem[_5155]
        mem[mem[64] + 32] = mem[_5155]
        mem[mem[64] + 64 len 32 * _20105] = mem[_5155 + 32 len 32 * _20105]
        return 32, mem[mem[64] + 32 len (32 * _20105) + 32]
    mem[_5155 + 32 len 32 * _5154] = code.data[9720 len 32 * _5154]
    require 0 < mem[_5155]
    mem[_5155 + 32] = ext_call.return_data[0]
    _10277 = mem[ceil32(return_data.size) + 96]
    idx = 0
    while idx < _10277 - 1:
        require idx < mem[ceil32(return_data.size) + 320]
        require idx < mem[ceil32(return_data.size) + 96]
        _10308 = mem[(32 * idx) + ceil32(return_data.size) + 128]
        require idx + 1 < mem[ceil32(return_data.size) + 96]
        _10321 = mem[(32 * idx + 1) + ceil32(return_data.size) + 128]
        require ext_code.size(mem[(32 * idx) + ceil32(return_data.size) + 364 len 20])
        staticcall mem[(32 * idx) + ceil32(return_data.size) + 364 len 20].getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
            _10352 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            require mem[_10352] == mem[_10352 + 18 len 14]
            require mem[_10352 + 32] == mem[_10352 + 50 len 14]
            require mem[_10352 + 64] == mem[_10352 + 92 len 4]
            require idx < mem[_5155]
            require idx < mem[ceil32(return_data.size) + 192]
            if address(_10308) == address(_10308):
                if not mem[(32 * idx) + _5155 + 32]:
                    require mem[_10352 + 18 len 14]
                    if 1000 * mem[_10352 + 18 len 14] / mem[_10352 + 18 len 14] != 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if 1000 * mem[_10352 + 18 len 14] < 1000 * mem[_10352 + 18 len 14]:
                        revert with 0, 'SafeMath#add: OVERFLOW'
                    require 1000 * mem[_10352 + 18 len 14]
                    require idx + 1 < mem[_5155]
                    mem[(32 * idx + 1) + _5155 + 32] = 0 / 1000 * mem[_10352 + 18 len 14]
                else:
                    if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) / mem[(32 * idx) + _5155 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if not (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]):
                        if not mem[_10352 + 18 len 14]:
                            if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                            require idx + 1 < mem[_5155]
                            mem[(32 * idx + 1) + _5155 + 32] = 0 / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                        else:
                            if 1000 * mem[_10352 + 18 len 14] / mem[_10352 + 18 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10352 + 18 len 14]) < 1000 * mem[_10352 + 18 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10352 + 18 len 14])
                            require idx + 1 < mem[_5155]
                            mem[(32 * idx + 1) + _5155 + 32] = 0 / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10352 + 18 len 14])
                    else:
                        if (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10352 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10352 + 50 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) != mem[_10352 + 50 len 14]:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not mem[_10352 + 18 len 14]:
                            if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                            require idx + 1 < mem[_5155]
                            mem[(32 * idx + 1) + _5155 + 32] = (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10352 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10352 + 50 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                        else:
                            if 1000 * mem[_10352 + 18 len 14] / mem[_10352 + 18 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10352 + 18 len 14]) < 1000 * mem[_10352 + 18 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10352 + 18 len 14])
                            require idx + 1 < mem[_5155]
                            mem[(32 * idx + 1) + _5155 + 32] = (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10352 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10352 + 50 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10352 + 18 len 14])
            else:
                if not mem[(32 * idx) + _5155 + 32]:
                    require mem[_10352 + 50 len 14]
                    if 1000 * mem[_10352 + 50 len 14] / mem[_10352 + 50 len 14] != 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if 1000 * mem[_10352 + 50 len 14] < 1000 * mem[_10352 + 50 len 14]:
                        revert with 0, 'SafeMath#add: OVERFLOW'
                    require 1000 * mem[_10352 + 50 len 14]
                    require idx + 1 < mem[_5155]
                    mem[(32 * idx + 1) + _5155 + 32] = 0 / 1000 * mem[_10352 + 50 len 14]
                else:
                    if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) / mem[(32 * idx) + _5155 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if not (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]):
                        if not mem[_10352 + 50 len 14]:
                            if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                            require idx + 1 < mem[_5155]
                            mem[(32 * idx + 1) + _5155 + 32] = 0 / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                        else:
                            if 1000 * mem[_10352 + 50 len 14] / mem[_10352 + 50 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10352 + 50 len 14]) < 1000 * mem[_10352 + 50 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10352 + 50 len 14])
                            require idx + 1 < mem[_5155]
                            mem[(32 * idx + 1) + _5155 + 32] = 0 / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10352 + 50 len 14])
                    else:
                        if (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10352 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10352 + 18 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) != mem[_10352 + 18 len 14]:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not mem[_10352 + 50 len 14]:
                            if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                            require idx + 1 < mem[_5155]
                            mem[(32 * idx + 1) + _5155 + 32] = (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10352 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10352 + 18 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                        else:
                            if 1000 * mem[_10352 + 50 len 14] / mem[_10352 + 50 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10352 + 50 len 14]) < 1000 * mem[_10352 + 50 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10352 + 50 len 14])
                            require idx + 1 < mem[_5155]
                            mem[(32 * idx + 1) + _5155 + 32] = (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10352 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10352 + 18 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10352 + 50 len 14])
        else:
            _10353 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            require mem[_10353] == mem[_10353 + 18 len 14]
            require mem[_10353 + 32] == mem[_10353 + 50 len 14]
            require mem[_10353 + 64] == mem[_10353 + 92 len 4]
            require idx < mem[_5155]
            require idx < mem[ceil32(return_data.size) + 192]
            if address(_10308) == address(_10321):
                if not mem[(32 * idx) + _5155 + 32]:
                    require mem[_10353 + 18 len 14]
                    if 1000 * mem[_10353 + 18 len 14] / mem[_10353 + 18 len 14] != 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if 1000 * mem[_10353 + 18 len 14] < 1000 * mem[_10353 + 18 len 14]:
                        revert with 0, 'SafeMath#add: OVERFLOW'
                    require 1000 * mem[_10353 + 18 len 14]
                    require idx + 1 < mem[_5155]
                    mem[(32 * idx + 1) + _5155 + 32] = 0 / 1000 * mem[_10353 + 18 len 14]
                else:
                    if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) / mem[(32 * idx) + _5155 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if not (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]):
                        if not mem[_10353 + 18 len 14]:
                            if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                            require idx + 1 < mem[_5155]
                            mem[(32 * idx + 1) + _5155 + 32] = 0 / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                        else:
                            if 1000 * mem[_10353 + 18 len 14] / mem[_10353 + 18 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10353 + 18 len 14]) < 1000 * mem[_10353 + 18 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10353 + 18 len 14])
                            require idx + 1 < mem[_5155]
                            mem[(32 * idx + 1) + _5155 + 32] = 0 / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10353 + 18 len 14])
                    else:
                        if (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10353 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10353 + 50 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) != mem[_10353 + 50 len 14]:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not mem[_10353 + 18 len 14]:
                            if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                            require idx + 1 < mem[_5155]
                            mem[(32 * idx + 1) + _5155 + 32] = (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10353 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10353 + 50 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                        else:
                            if 1000 * mem[_10353 + 18 len 14] / mem[_10353 + 18 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10353 + 18 len 14]) < 1000 * mem[_10353 + 18 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10353 + 18 len 14])
                            require idx + 1 < mem[_5155]
                            mem[(32 * idx + 1) + _5155 + 32] = (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10353 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10353 + 50 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10353 + 18 len 14])
            else:
                if not mem[(32 * idx) + _5155 + 32]:
                    require mem[_10353 + 50 len 14]
                    if 1000 * mem[_10353 + 50 len 14] / mem[_10353 + 50 len 14] != 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if 1000 * mem[_10353 + 50 len 14] < 1000 * mem[_10353 + 50 len 14]:
                        revert with 0, 'SafeMath#add: OVERFLOW'
                    require 1000 * mem[_10353 + 50 len 14]
                    require idx + 1 < mem[_5155]
                    mem[(32 * idx + 1) + _5155 + 32] = 0 / 1000 * mem[_10353 + 50 len 14]
                else:
                    if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) / mem[(32 * idx) + _5155 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if not (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]):
                        if not mem[_10353 + 50 len 14]:
                            if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                            require idx + 1 < mem[_5155]
                            mem[(32 * idx + 1) + _5155 + 32] = 0 / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                        else:
                            if 1000 * mem[_10353 + 50 len 14] / mem[_10353 + 50 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10353 + 50 len 14]) < 1000 * mem[_10353 + 50 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10353 + 50 len 14])
                            require idx + 1 < mem[_5155]
                            mem[(32 * idx + 1) + _5155 + 32] = 0 / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10353 + 50 len 14])
                    else:
                        if (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10353 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10353 + 18 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) != mem[_10353 + 18 len 14]:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not mem[_10353 + 50 len 14]:
                            if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                            require idx + 1 < mem[_5155]
                            mem[(32 * idx + 1) + _5155 + 32] = (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10353 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10353 + 18 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32])
                        else:
                            if 1000 * mem[_10353 + 50 len 14] / mem[_10353 + 50 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10353 + 50 len 14]) < 1000 * mem[_10353 + 50 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10353 + 50 len 14])
                            require idx + 1 < mem[_5155]
                            mem[(32 * idx + 1) + _5155 + 32] = (1000 * mem[(32 * idx) + _5155 + 32] * mem[_10353 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32] * mem[_10353 + 18 len 14]) / (1000 * mem[(32 * idx) + _5155 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5155 + 32]) + (1000 * mem[_10353 + 50 len 14])
        _10277 = mem[ceil32(return_data.size) + 96]
        idx = idx + 1
        continue 
    require 0 < mem[ceil32(return_data.size) + 96]
    _10306 = mem[ceil32(return_data.size) + 128]
    require 0 < mem[ceil32(return_data.size) + 320]
    require 0 < mem[_5155]
    _10325 = mem[_5155 + 32]
    _10329 = mem[64]
    mem[mem[64] + 36] = mem[ceil32(return_data.size) + 364 len 20]
    mem[mem[64] + 68] = _10325
    _10371 = mem[64]
    mem[mem[64]] = 68
    mem[64] = mem[64] + 100
    mem[_10371 + 32 len 4] = unknown_0xa9059cbb(?????)
    _10383 = mem[_10371]
    mem[_10329 + 100 len ceil32(mem[_10371])] = mem[_10371 + 32 len ceil32(mem[_10371])]
    if ceil32(_10383) <= _10383:
        call address(_10306) with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _10383 + _10329 + -mem[64] + 96]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            if not mem[96]:
                _19914 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _19914 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_5155]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _20226 = mem[(32 * idx + 1) + _5155 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22029 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20226
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_22029))
                                    call address(_22029).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20226, this.address
                                else:
                                    _22031 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22032 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22032 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22032 + 36] = 0
                                    mem[_22032 + 68] = _20226
                                    mem[_22032 + 100] = this.address
                                    mem[_22032 + 132] = 128
                                    mem[_22032 + 164] = mem[_22032]
                                    s = 0
                                    while s < mem[_22032]:
                                        mem[s + _22032 + 196] = mem[s + _22032 + 32]
                                        _19914 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22032]) > mem[_22032]:
                                        mem[mem[_22032] + _22032 + 196] = 0
                                    require ext_code.size(address(_22031))
                                    call address(_22031).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20226, address(this.address), 128, mem[_22032], mem[_22032 + 196 len ceil32(mem[_22032])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20690 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22706 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20226
                                    mem[mem[64] + 68] = address(_20690)
                                    require ext_code.size(address(_22706))
                                    call address(_22706).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20226, address(_20690)
                                else:
                                    _22708 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22709 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22709 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22709 + 36] = 0
                                    mem[_22709 + 68] = _20226
                                    mem[_22709 + 100] = address(_20690)
                                    mem[_22709 + 132] = 128
                                    mem[_22709 + 164] = mem[_22709]
                                    s = 0
                                    while s < mem[_22709]:
                                        mem[s + _22709 + 196] = mem[s + _22709 + 32]
                                        _19914 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22709]) > mem[_22709]:
                                        mem[mem[_22709] + _22709 + 196] = 0
                                    require ext_code.size(address(_22708))
                                    call address(_22708).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20226, address(_20690), 128, mem[_22709], mem[_22709 + 196 len ceil32(mem[_22709])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22035 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20226
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_22035))
                                    call address(_22035).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20226, 0, this.address
                                else:
                                    _22037 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22038 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22038 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22038 + 36] = _20226
                                    mem[_22038 + 68] = 0
                                    mem[_22038 + 100] = this.address
                                    mem[_22038 + 132] = 128
                                    mem[_22038 + 164] = mem[_22038]
                                    s = 0
                                    while s < mem[_22038]:
                                        mem[s + _22038 + 196] = mem[s + _22038 + 32]
                                        _19914 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22038]) > mem[_22038]:
                                        mem[mem[_22038] + _22038 + 196] = 0
                                    require ext_code.size(address(_22037))
                                    call address(_22037).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20226, 0, address(this.address), 128, mem[_22038], mem[_22038 + 196 len ceil32(mem[_22038])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20692 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22711 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20226
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_20692)
                                    require ext_code.size(address(_22711))
                                    call address(_22711).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20226, 0, address(_20692)
                                else:
                                    _22713 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22714 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22714 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22714 + 36] = _20226
                                    mem[_22714 + 68] = 0
                                    mem[_22714 + 100] = address(_20692)
                                    mem[_22714 + 132] = 128
                                    mem[_22714 + 164] = mem[_22714]
                                    s = 0
                                    while s < mem[_22714]:
                                        mem[s + _22714 + 196] = mem[s + _22714 + 32]
                                        _19914 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22714]) > mem[_22714]:
                                        mem[mem[_22714] + _22714 + 196] = 0
                                    require ext_code.size(address(_22713))
                                    call address(_22713).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20226, 0, address(_20692), 128, mem[_22714], mem[_22714 + 196 len ceil32(mem[_22714])]
                    else:
                        _20227 = mem[(32 * idx + 1) + _5155 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22041 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20227
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_22041))
                                    call address(_22041).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20227, this.address
                                else:
                                    _22043 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22044 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22044 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22044 + 36] = 0
                                    mem[_22044 + 68] = _20227
                                    mem[_22044 + 100] = this.address
                                    mem[_22044 + 132] = 128
                                    mem[_22044 + 164] = mem[_22044]
                                    s = 0
                                    while s < mem[_22044]:
                                        mem[s + _22044 + 196] = mem[s + _22044 + 32]
                                        _19914 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22044]) > mem[_22044]:
                                        mem[mem[_22044] + _22044 + 196] = 0
                                    require ext_code.size(address(_22043))
                                    call address(_22043).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20227, address(this.address), 128, mem[_22044], mem[_22044 + 196 len ceil32(mem[_22044])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20694 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22716 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20227
                                    mem[mem[64] + 68] = address(_20694)
                                    require ext_code.size(address(_22716))
                                    call address(_22716).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20227, address(_20694)
                                else:
                                    _22718 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22719 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22719 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22719 + 36] = 0
                                    mem[_22719 + 68] = _20227
                                    mem[_22719 + 100] = address(_20694)
                                    mem[_22719 + 132] = 128
                                    mem[_22719 + 164] = mem[_22719]
                                    s = 0
                                    while s < mem[_22719]:
                                        mem[s + _22719 + 196] = mem[s + _22719 + 32]
                                        _19914 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22719]) > mem[_22719]:
                                        mem[mem[_22719] + _22719 + 196] = 0
                                    require ext_code.size(address(_22718))
                                    call address(_22718).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20227, address(_20694), 128, mem[_22719], mem[_22719 + 196 len ceil32(mem[_22719])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22047 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20227
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_22047))
                                    call address(_22047).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20227, 0, this.address
                                else:
                                    _22049 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22050 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22050 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22050 + 36] = _20227
                                    mem[_22050 + 68] = 0
                                    mem[_22050 + 100] = this.address
                                    mem[_22050 + 132] = 128
                                    mem[_22050 + 164] = mem[_22050]
                                    s = 0
                                    while s < mem[_22050]:
                                        mem[s + _22050 + 196] = mem[s + _22050 + 32]
                                        _19914 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22050]) > mem[_22050]:
                                        mem[mem[_22050] + _22050 + 196] = 0
                                    require ext_code.size(address(_22049))
                                    call address(_22049).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20227, 0, address(this.address), 128, mem[_22050], mem[_22050 + 196 len ceil32(mem[_22050])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20696 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22721 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20227
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_20696)
                                    require ext_code.size(address(_22721))
                                    call address(_22721).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20227, 0, address(_20696)
                                else:
                                    _22723 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22724 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22724 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22724 + 36] = _20227
                                    mem[_22724 + 68] = 0
                                    mem[_22724 + 100] = address(_20696)
                                    mem[_22724 + 132] = 128
                                    mem[_22724 + 164] = mem[_22724]
                                    s = 0
                                    while s < mem[_22724]:
                                        mem[s + _22724 + 196] = mem[s + _22724 + 32]
                                        _19914 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22724]) > mem[_22724]:
                                        mem[mem[_22724] + _22724 + 196] = 0
                                    require ext_code.size(address(_22723))
                                    call address(_22723).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20227, 0, address(_20696), 128, mem[_22724], mem[_22724 + 196 len ceil32(mem[_22724])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19914 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                _20106 = mem[_5155]
                mem[mem[64] + 32] = mem[_5155]
                mem[mem[64] + 64 len 32 * _20106] = mem[_5155 + 32 len 32 * _20106]
                return 32, mem[mem[64] + 32 len (32 * _20106) + 32]
            require mem[96] >= 32
            require mem[128] == bool(mem[128])
            if not mem[128]:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            _19915 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _19915 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_5155]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _20228 = mem[(32 * idx + 1) + _5155 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22054 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20228
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22054))
                                call address(_22054).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20228, this.address
                            else:
                                _22056 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22057 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22057 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22057 + 36] = 0
                                mem[_22057 + 68] = _20228
                                mem[_22057 + 100] = this.address
                                mem[_22057 + 132] = 128
                                mem[_22057 + 164] = mem[_22057]
                                s = 0
                                while s < mem[_22057]:
                                    mem[s + _22057 + 196] = mem[s + _22057 + 32]
                                    _19915 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22057]) > mem[_22057]:
                                    mem[mem[_22057] + _22057 + 196] = 0
                                require ext_code.size(address(_22056))
                                call address(_22056).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20228, address(this.address), 128, mem[_22057], mem[_22057 + 196 len ceil32(mem[_22057])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20698 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22726 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20228
                                mem[mem[64] + 68] = address(_20698)
                                require ext_code.size(address(_22726))
                                call address(_22726).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20228, address(_20698)
                            else:
                                _22728 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22729 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22729 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22729 + 36] = 0
                                mem[_22729 + 68] = _20228
                                mem[_22729 + 100] = address(_20698)
                                mem[_22729 + 132] = 128
                                mem[_22729 + 164] = mem[_22729]
                                s = 0
                                while s < mem[_22729]:
                                    mem[s + _22729 + 196] = mem[s + _22729 + 32]
                                    _19915 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22729]) > mem[_22729]:
                                    mem[mem[_22729] + _22729 + 196] = 0
                                require ext_code.size(address(_22728))
                                call address(_22728).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20228, address(_20698), 128, mem[_22729], mem[_22729 + 196 len ceil32(mem[_22729])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22060 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20228
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22060))
                                call address(_22060).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20228, 0, this.address
                            else:
                                _22062 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22063 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22063 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22063 + 36] = _20228
                                mem[_22063 + 68] = 0
                                mem[_22063 + 100] = this.address
                                mem[_22063 + 132] = 128
                                mem[_22063 + 164] = mem[_22063]
                                s = 0
                                while s < mem[_22063]:
                                    mem[s + _22063 + 196] = mem[s + _22063 + 32]
                                    _19915 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22063]) > mem[_22063]:
                                    mem[mem[_22063] + _22063 + 196] = 0
                                require ext_code.size(address(_22062))
                                call address(_22062).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20228, 0, address(this.address), 128, mem[_22063], mem[_22063 + 196 len ceil32(mem[_22063])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20700 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22731 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20228
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20700)
                                require ext_code.size(address(_22731))
                                call address(_22731).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20228, 0, address(_20700)
                            else:
                                _22733 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22734 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22734 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22734 + 36] = _20228
                                mem[_22734 + 68] = 0
                                mem[_22734 + 100] = address(_20700)
                                mem[_22734 + 132] = 128
                                mem[_22734 + 164] = mem[_22734]
                                s = 0
                                while s < mem[_22734]:
                                    mem[s + _22734 + 196] = mem[s + _22734 + 32]
                                    _19915 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22734]) > mem[_22734]:
                                    mem[mem[_22734] + _22734 + 196] = 0
                                require ext_code.size(address(_22733))
                                call address(_22733).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20228, 0, address(_20700), 128, mem[_22734], mem[_22734 + 196 len ceil32(mem[_22734])]
                else:
                    _20229 = mem[(32 * idx + 1) + _5155 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22066 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20229
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22066))
                                call address(_22066).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20229, this.address
                            else:
                                _22068 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22069 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22069 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22069 + 36] = 0
                                mem[_22069 + 68] = _20229
                                mem[_22069 + 100] = this.address
                                mem[_22069 + 132] = 128
                                mem[_22069 + 164] = mem[_22069]
                                s = 0
                                while s < mem[_22069]:
                                    mem[s + _22069 + 196] = mem[s + _22069 + 32]
                                    _19915 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22069]) > mem[_22069]:
                                    mem[mem[_22069] + _22069 + 196] = 0
                                require ext_code.size(address(_22068))
                                call address(_22068).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20229, address(this.address), 128, mem[_22069], mem[_22069 + 196 len ceil32(mem[_22069])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20702 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22736 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20229
                                mem[mem[64] + 68] = address(_20702)
                                require ext_code.size(address(_22736))
                                call address(_22736).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20229, address(_20702)
                            else:
                                _22738 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22739 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22739 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22739 + 36] = 0
                                mem[_22739 + 68] = _20229
                                mem[_22739 + 100] = address(_20702)
                                mem[_22739 + 132] = 128
                                mem[_22739 + 164] = mem[_22739]
                                s = 0
                                while s < mem[_22739]:
                                    mem[s + _22739 + 196] = mem[s + _22739 + 32]
                                    _19915 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22739]) > mem[_22739]:
                                    mem[mem[_22739] + _22739 + 196] = 0
                                require ext_code.size(address(_22738))
                                call address(_22738).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20229, address(_20702), 128, mem[_22739], mem[_22739 + 196 len ceil32(mem[_22739])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22072 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20229
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22072))
                                call address(_22072).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20229, 0, this.address
                            else:
                                _22074 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22075 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22075 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22075 + 36] = _20229
                                mem[_22075 + 68] = 0
                                mem[_22075 + 100] = this.address
                                mem[_22075 + 132] = 128
                                mem[_22075 + 164] = mem[_22075]
                                s = 0
                                while s < mem[_22075]:
                                    mem[s + _22075 + 196] = mem[s + _22075 + 32]
                                    _19915 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22075]) > mem[_22075]:
                                    mem[mem[_22075] + _22075 + 196] = 0
                                require ext_code.size(address(_22074))
                                call address(_22074).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20229, 0, address(this.address), 128, mem[_22075], mem[_22075 + 196 len ceil32(mem[_22075])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20704 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22741 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20229
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20704)
                                require ext_code.size(address(_22741))
                                call address(_22741).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20229, 0, address(_20704)
                            else:
                                _22743 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22744 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22744 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22744 + 36] = _20229
                                mem[_22744 + 68] = 0
                                mem[_22744 + 100] = address(_20704)
                                mem[_22744 + 132] = 128
                                mem[_22744 + 164] = mem[_22744]
                                s = 0
                                while s < mem[_22744]:
                                    mem[s + _22744 + 196] = mem[s + _22744 + 32]
                                    _19915 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22744]) > mem[_22744]:
                                    mem[mem[_22744] + _22744 + 196] = 0
                                require ext_code.size(address(_22743))
                                call address(_22743).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20229, 0, address(_20704), 128, mem[_22744], mem[_22744 + 196 len ceil32(mem[_22744])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19915 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _20107 = mem[_5155]
            mem[mem[64] + 32] = mem[_5155]
            mem[mem[64] + 64 len 32 * _20107] = mem[_5155 + 32 len 32 * _20107]
            return 32, mem[mem[64] + 32 len (32 * _20107) + 32]
        _15392 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size) + 1
        mem[_15392] = return_data.size
        mem[_15392 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        if not return_data.size:
            _19916 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _19916 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_5155]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _20230 = mem[(32 * idx + 1) + _5155 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22079 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20230
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22079))
                                call address(_22079).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20230, this.address
                            else:
                                _22081 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22082 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22082 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22082 + 36] = 0
                                mem[_22082 + 68] = _20230
                                mem[_22082 + 100] = this.address
                                mem[_22082 + 132] = 128
                                mem[_22082 + 164] = mem[_22082]
                                s = 0
                                while s < mem[_22082]:
                                    mem[s + _22082 + 196] = mem[s + _22082 + 32]
                                    _19916 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22082]) > mem[_22082]:
                                    mem[mem[_22082] + _22082 + 196] = 0
                                require ext_code.size(address(_22081))
                                call address(_22081).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20230, address(this.address), 128, mem[_22082], mem[_22082 + 196 len ceil32(mem[_22082])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20706 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22746 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20230
                                mem[mem[64] + 68] = address(_20706)
                                require ext_code.size(address(_22746))
                                call address(_22746).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20230, address(_20706)
                            else:
                                _22748 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22749 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22749 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22749 + 36] = 0
                                mem[_22749 + 68] = _20230
                                mem[_22749 + 100] = address(_20706)
                                mem[_22749 + 132] = 128
                                mem[_22749 + 164] = mem[_22749]
                                s = 0
                                while s < mem[_22749]:
                                    mem[s + _22749 + 196] = mem[s + _22749 + 32]
                                    _19916 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22749]) > mem[_22749]:
                                    mem[mem[_22749] + _22749 + 196] = 0
                                require ext_code.size(address(_22748))
                                call address(_22748).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20230, address(_20706), 128, mem[_22749], mem[_22749 + 196 len ceil32(mem[_22749])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22085 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20230
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22085))
                                call address(_22085).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20230, 0, this.address
                            else:
                                _22087 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22088 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22088 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22088 + 36] = _20230
                                mem[_22088 + 68] = 0
                                mem[_22088 + 100] = this.address
                                mem[_22088 + 132] = 128
                                mem[_22088 + 164] = mem[_22088]
                                s = 0
                                while s < mem[_22088]:
                                    mem[s + _22088 + 196] = mem[s + _22088 + 32]
                                    _19916 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22088]) > mem[_22088]:
                                    mem[mem[_22088] + _22088 + 196] = 0
                                require ext_code.size(address(_22087))
                                call address(_22087).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20230, 0, address(this.address), 128, mem[_22088], mem[_22088 + 196 len ceil32(mem[_22088])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20708 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22751 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20230
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20708)
                                require ext_code.size(address(_22751))
                                call address(_22751).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20230, 0, address(_20708)
                            else:
                                _22753 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22754 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22754 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22754 + 36] = _20230
                                mem[_22754 + 68] = 0
                                mem[_22754 + 100] = address(_20708)
                                mem[_22754 + 132] = 128
                                mem[_22754 + 164] = mem[_22754]
                                s = 0
                                while s < mem[_22754]:
                                    mem[s + _22754 + 196] = mem[s + _22754 + 32]
                                    _19916 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22754]) > mem[_22754]:
                                    mem[mem[_22754] + _22754 + 196] = 0
                                require ext_code.size(address(_22753))
                                call address(_22753).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20230, 0, address(_20708), 128, mem[_22754], mem[_22754 + 196 len ceil32(mem[_22754])]
                else:
                    _20231 = mem[(32 * idx + 1) + _5155 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22091 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20231
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22091))
                                call address(_22091).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20231, this.address
                            else:
                                _22093 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22094 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22094 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22094 + 36] = 0
                                mem[_22094 + 68] = _20231
                                mem[_22094 + 100] = this.address
                                mem[_22094 + 132] = 128
                                mem[_22094 + 164] = mem[_22094]
                                s = 0
                                while s < mem[_22094]:
                                    mem[s + _22094 + 196] = mem[s + _22094 + 32]
                                    _19916 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22094]) > mem[_22094]:
                                    mem[mem[_22094] + _22094 + 196] = 0
                                require ext_code.size(address(_22093))
                                call address(_22093).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20231, address(this.address), 128, mem[_22094], mem[_22094 + 196 len ceil32(mem[_22094])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20710 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22756 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20231
                                mem[mem[64] + 68] = address(_20710)
                                require ext_code.size(address(_22756))
                                call address(_22756).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20231, address(_20710)
                            else:
                                _22758 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22759 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22759 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22759 + 36] = 0
                                mem[_22759 + 68] = _20231
                                mem[_22759 + 100] = address(_20710)
                                mem[_22759 + 132] = 128
                                mem[_22759 + 164] = mem[_22759]
                                s = 0
                                while s < mem[_22759]:
                                    mem[s + _22759 + 196] = mem[s + _22759 + 32]
                                    _19916 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22759]) > mem[_22759]:
                                    mem[mem[_22759] + _22759 + 196] = 0
                                require ext_code.size(address(_22758))
                                call address(_22758).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20231, address(_20710), 128, mem[_22759], mem[_22759 + 196 len ceil32(mem[_22759])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22097 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20231
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22097))
                                call address(_22097).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20231, 0, this.address
                            else:
                                _22099 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22100 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22100 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22100 + 36] = _20231
                                mem[_22100 + 68] = 0
                                mem[_22100 + 100] = this.address
                                mem[_22100 + 132] = 128
                                mem[_22100 + 164] = mem[_22100]
                                s = 0
                                while s < mem[_22100]:
                                    mem[s + _22100 + 196] = mem[s + _22100 + 32]
                                    _19916 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22100]) > mem[_22100]:
                                    mem[mem[_22100] + _22100 + 196] = 0
                                require ext_code.size(address(_22099))
                                call address(_22099).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20231, 0, address(this.address), 128, mem[_22100], mem[_22100 + 196 len ceil32(mem[_22100])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20712 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22761 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20231
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20712)
                                require ext_code.size(address(_22761))
                                call address(_22761).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20231, 0, address(_20712)
                            else:
                                _22763 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22764 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22764 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22764 + 36] = _20231
                                mem[_22764 + 68] = 0
                                mem[_22764 + 100] = address(_20712)
                                mem[_22764 + 132] = 128
                                mem[_22764 + 164] = mem[_22764]
                                s = 0
                                while s < mem[_22764]:
                                    mem[s + _22764 + 196] = mem[s + _22764 + 32]
                                    _19916 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22764]) > mem[_22764]:
                                    mem[mem[_22764] + _22764 + 196] = 0
                                require ext_code.size(address(_22763))
                                call address(_22763).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20231, 0, address(_20712), 128, mem[_22764], mem[_22764 + 196 len ceil32(mem[_22764])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19916 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _20108 = mem[_5155]
            mem[mem[64] + 32] = mem[_5155]
            mem[mem[64] + 64 len 32 * _20108] = mem[_5155 + 32 len 32 * _20108]
            return 32, mem[mem[64] + 32 len (32 * _20108) + 32]
        require return_data.size >= 32
        require mem[_15392 + 32] == bool(mem[_15392 + 32])
        if not mem[_15392 + 32]:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        _19917 = mem[ceil32(return_data.size) + 96]
        idx = 0
        while idx < _19917 - 1:
            require idx < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[_5155]
            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                _20232 = mem[(32 * idx + 1) + _5155 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22104 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20232
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22104))
                            call address(_22104).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20232, this.address
                        else:
                            _22106 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22107 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22107 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22107 + 36] = 0
                            mem[_22107 + 68] = _20232
                            mem[_22107 + 100] = this.address
                            mem[_22107 + 132] = 128
                            mem[_22107 + 164] = mem[_22107]
                            s = 0
                            while s < mem[_22107]:
                                mem[s + _22107 + 196] = mem[s + _22107 + 32]
                                _19917 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22107]) > mem[_22107]:
                                mem[mem[_22107] + _22107 + 196] = 0
                            require ext_code.size(address(_22106))
                            call address(_22106).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20232, address(this.address), 128, mem[_22107], mem[_22107 + 196 len ceil32(mem[_22107])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20714 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22766 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20232
                            mem[mem[64] + 68] = address(_20714)
                            require ext_code.size(address(_22766))
                            call address(_22766).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20232, address(_20714)
                        else:
                            _22768 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22769 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22769 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22769 + 36] = 0
                            mem[_22769 + 68] = _20232
                            mem[_22769 + 100] = address(_20714)
                            mem[_22769 + 132] = 128
                            mem[_22769 + 164] = mem[_22769]
                            s = 0
                            while s < mem[_22769]:
                                mem[s + _22769 + 196] = mem[s + _22769 + 32]
                                _19917 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22769]) > mem[_22769]:
                                mem[mem[_22769] + _22769 + 196] = 0
                            require ext_code.size(address(_22768))
                            call address(_22768).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20232, address(_20714), 128, mem[_22769], mem[_22769 + 196 len ceil32(mem[_22769])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22110 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20232
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22110))
                            call address(_22110).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20232, 0, this.address
                        else:
                            _22112 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22113 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22113 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22113 + 36] = _20232
                            mem[_22113 + 68] = 0
                            mem[_22113 + 100] = this.address
                            mem[_22113 + 132] = 128
                            mem[_22113 + 164] = mem[_22113]
                            s = 0
                            while s < mem[_22113]:
                                mem[s + _22113 + 196] = mem[s + _22113 + 32]
                                _19917 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22113]) > mem[_22113]:
                                mem[mem[_22113] + _22113 + 196] = 0
                            require ext_code.size(address(_22112))
                            call address(_22112).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20232, 0, address(this.address), 128, mem[_22113], mem[_22113 + 196 len ceil32(mem[_22113])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20716 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22771 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20232
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_20716)
                            require ext_code.size(address(_22771))
                            call address(_22771).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20232, 0, address(_20716)
                        else:
                            _22773 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22774 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22774 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22774 + 36] = _20232
                            mem[_22774 + 68] = 0
                            mem[_22774 + 100] = address(_20716)
                            mem[_22774 + 132] = 128
                            mem[_22774 + 164] = mem[_22774]
                            s = 0
                            while s < mem[_22774]:
                                mem[s + _22774 + 196] = mem[s + _22774 + 32]
                                _19917 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22774]) > mem[_22774]:
                                mem[mem[_22774] + _22774 + 196] = 0
                            require ext_code.size(address(_22773))
                            call address(_22773).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20232, 0, address(_20716), 128, mem[_22774], mem[_22774 + 196 len ceil32(mem[_22774])]
            else:
                _20233 = mem[(32 * idx + 1) + _5155 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22116 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20233
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22116))
                            call address(_22116).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20233, this.address
                        else:
                            _22118 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22119 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22119 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22119 + 36] = 0
                            mem[_22119 + 68] = _20233
                            mem[_22119 + 100] = this.address
                            mem[_22119 + 132] = 128
                            mem[_22119 + 164] = mem[_22119]
                            s = 0
                            while s < mem[_22119]:
                                mem[s + _22119 + 196] = mem[s + _22119 + 32]
                                _19917 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22119]) > mem[_22119]:
                                mem[mem[_22119] + _22119 + 196] = 0
                            require ext_code.size(address(_22118))
                            call address(_22118).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20233, address(this.address), 128, mem[_22119], mem[_22119 + 196 len ceil32(mem[_22119])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20718 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22776 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20233
                            mem[mem[64] + 68] = address(_20718)
                            require ext_code.size(address(_22776))
                            call address(_22776).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20233, address(_20718)
                        else:
                            _22778 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22779 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22779 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22779 + 36] = 0
                            mem[_22779 + 68] = _20233
                            mem[_22779 + 100] = address(_20718)
                            mem[_22779 + 132] = 128
                            mem[_22779 + 164] = mem[_22779]
                            s = 0
                            while s < mem[_22779]:
                                mem[s + _22779 + 196] = mem[s + _22779 + 32]
                                _19917 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22779]) > mem[_22779]:
                                mem[mem[_22779] + _22779 + 196] = 0
                            require ext_code.size(address(_22778))
                            call address(_22778).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20233, address(_20718), 128, mem[_22779], mem[_22779 + 196 len ceil32(mem[_22779])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22122 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20233
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22122))
                            call address(_22122).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20233, 0, this.address
                        else:
                            _22124 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22125 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22125 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22125 + 36] = _20233
                            mem[_22125 + 68] = 0
                            mem[_22125 + 100] = this.address
                            mem[_22125 + 132] = 128
                            mem[_22125 + 164] = mem[_22125]
                            s = 0
                            while s < mem[_22125]:
                                mem[s + _22125 + 196] = mem[s + _22125 + 32]
                                _19917 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22125]) > mem[_22125]:
                                mem[mem[_22125] + _22125 + 196] = 0
                            require ext_code.size(address(_22124))
                            call address(_22124).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20233, 0, address(this.address), 128, mem[_22125], mem[_22125 + 196 len ceil32(mem[_22125])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20720 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22781 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20233
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_20720)
                            require ext_code.size(address(_22781))
                            call address(_22781).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20233, 0, address(_20720)
                        else:
                            _22783 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22784 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22784 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22784 + 36] = _20233
                            mem[_22784 + 68] = 0
                            mem[_22784 + 100] = address(_20720)
                            mem[_22784 + 132] = 128
                            mem[_22784 + 164] = mem[_22784]
                            s = 0
                            while s < mem[_22784]:
                                mem[s + _22784 + 196] = mem[s + _22784 + 32]
                                _19917 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22784]) > mem[_22784]:
                                mem[mem[_22784] + _22784 + 196] = 0
                            require ext_code.size(address(_22783))
                            call address(_22783).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20233, 0, address(_20720), 128, mem[_22784], mem[_22784 + 196 len ceil32(mem[_22784])]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19917 = mem[ceil32(return_data.size) + 96]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _20109 = mem[_5155]
        mem[mem[64] + 32] = mem[_5155]
        mem[mem[64] + 64 len 32 * _20109] = mem[_5155 + 32 len 32 * _20109]
        return 32, mem[mem[64] + 32 len (32 * _20109) + 32]
    mem[_10383 + _10329 + 100] = 0
    call address(_10306) with:
         gas gas_remaining wei
        args mem[mem[64] + 4 len _10383 + _10329 + -mem[64] + 96]
    if not return_data.size:
        if not ext_call.success:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        if not mem[96]:
            _19918 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _19918 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_5155]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _20234 = mem[(32 * idx + 1) + _5155 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22129 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20234
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22129))
                                call address(_22129).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20234, this.address
                            else:
                                _22131 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22132 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22132 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22132 + 36] = 0
                                mem[_22132 + 68] = _20234
                                mem[_22132 + 100] = this.address
                                mem[_22132 + 132] = 128
                                mem[_22132 + 164] = mem[_22132]
                                s = 0
                                while s < mem[_22132]:
                                    mem[s + _22132 + 196] = mem[s + _22132 + 32]
                                    _19918 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22132]) > mem[_22132]:
                                    mem[mem[_22132] + _22132 + 196] = 0
                                require ext_code.size(address(_22131))
                                call address(_22131).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20234, address(this.address), 128, mem[_22132], mem[_22132 + 196 len ceil32(mem[_22132])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20722 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22786 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20234
                                mem[mem[64] + 68] = address(_20722)
                                require ext_code.size(address(_22786))
                                call address(_22786).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20234, address(_20722)
                            else:
                                _22788 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22789 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22789 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22789 + 36] = 0
                                mem[_22789 + 68] = _20234
                                mem[_22789 + 100] = address(_20722)
                                mem[_22789 + 132] = 128
                                mem[_22789 + 164] = mem[_22789]
                                s = 0
                                while s < mem[_22789]:
                                    mem[s + _22789 + 196] = mem[s + _22789 + 32]
                                    _19918 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22789]) > mem[_22789]:
                                    mem[mem[_22789] + _22789 + 196] = 0
                                require ext_code.size(address(_22788))
                                call address(_22788).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20234, address(_20722), 128, mem[_22789], mem[_22789 + 196 len ceil32(mem[_22789])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22135 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20234
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22135))
                                call address(_22135).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20234, 0, this.address
                            else:
                                _22137 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22138 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22138 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22138 + 36] = _20234
                                mem[_22138 + 68] = 0
                                mem[_22138 + 100] = this.address
                                mem[_22138 + 132] = 128
                                mem[_22138 + 164] = mem[_22138]
                                s = 0
                                while s < mem[_22138]:
                                    mem[s + _22138 + 196] = mem[s + _22138 + 32]
                                    _19918 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22138]) > mem[_22138]:
                                    mem[mem[_22138] + _22138 + 196] = 0
                                require ext_code.size(address(_22137))
                                call address(_22137).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20234, 0, address(this.address), 128, mem[_22138], mem[_22138 + 196 len ceil32(mem[_22138])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20724 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22791 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20234
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20724)
                                require ext_code.size(address(_22791))
                                call address(_22791).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20234, 0, address(_20724)
                            else:
                                _22793 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22794 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22794 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22794 + 36] = _20234
                                mem[_22794 + 68] = 0
                                mem[_22794 + 100] = address(_20724)
                                mem[_22794 + 132] = 128
                                mem[_22794 + 164] = mem[_22794]
                                s = 0
                                while s < mem[_22794]:
                                    mem[s + _22794 + 196] = mem[s + _22794 + 32]
                                    _19918 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22794]) > mem[_22794]:
                                    mem[mem[_22794] + _22794 + 196] = 0
                                require ext_code.size(address(_22793))
                                call address(_22793).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20234, 0, address(_20724), 128, mem[_22794], mem[_22794 + 196 len ceil32(mem[_22794])]
                else:
                    _20235 = mem[(32 * idx + 1) + _5155 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22141 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20235
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22141))
                                call address(_22141).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20235, this.address
                            else:
                                _22143 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22144 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22144 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22144 + 36] = 0
                                mem[_22144 + 68] = _20235
                                mem[_22144 + 100] = this.address
                                mem[_22144 + 132] = 128
                                mem[_22144 + 164] = mem[_22144]
                                s = 0
                                while s < mem[_22144]:
                                    mem[s + _22144 + 196] = mem[s + _22144 + 32]
                                    _19918 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22144]) > mem[_22144]:
                                    mem[mem[_22144] + _22144 + 196] = 0
                                require ext_code.size(address(_22143))
                                call address(_22143).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20235, address(this.address), 128, mem[_22144], mem[_22144 + 196 len ceil32(mem[_22144])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20726 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22796 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20235
                                mem[mem[64] + 68] = address(_20726)
                                require ext_code.size(address(_22796))
                                call address(_22796).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20235, address(_20726)
                            else:
                                _22798 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22799 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22799 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22799 + 36] = 0
                                mem[_22799 + 68] = _20235
                                mem[_22799 + 100] = address(_20726)
                                mem[_22799 + 132] = 128
                                mem[_22799 + 164] = mem[_22799]
                                s = 0
                                while s < mem[_22799]:
                                    mem[s + _22799 + 196] = mem[s + _22799 + 32]
                                    _19918 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22799]) > mem[_22799]:
                                    mem[mem[_22799] + _22799 + 196] = 0
                                require ext_code.size(address(_22798))
                                call address(_22798).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20235, address(_20726), 128, mem[_22799], mem[_22799 + 196 len ceil32(mem[_22799])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22147 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20235
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22147))
                                call address(_22147).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20235, 0, this.address
                            else:
                                _22149 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22150 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22150 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22150 + 36] = _20235
                                mem[_22150 + 68] = 0
                                mem[_22150 + 100] = this.address
                                mem[_22150 + 132] = 128
                                mem[_22150 + 164] = mem[_22150]
                                s = 0
                                while s < mem[_22150]:
                                    mem[s + _22150 + 196] = mem[s + _22150 + 32]
                                    _19918 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22150]) > mem[_22150]:
                                    mem[mem[_22150] + _22150 + 196] = 0
                                require ext_code.size(address(_22149))
                                call address(_22149).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20235, 0, address(this.address), 128, mem[_22150], mem[_22150 + 196 len ceil32(mem[_22150])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20728 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22801 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20235
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20728)
                                require ext_code.size(address(_22801))
                                call address(_22801).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20235, 0, address(_20728)
                            else:
                                _22803 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22804 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22804 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22804 + 36] = _20235
                                mem[_22804 + 68] = 0
                                mem[_22804 + 100] = address(_20728)
                                mem[_22804 + 132] = 128
                                mem[_22804 + 164] = mem[_22804]
                                s = 0
                                while s < mem[_22804]:
                                    mem[s + _22804 + 196] = mem[s + _22804 + 32]
                                    _19918 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22804]) > mem[_22804]:
                                    mem[mem[_22804] + _22804 + 196] = 0
                                require ext_code.size(address(_22803))
                                call address(_22803).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20235, 0, address(_20728), 128, mem[_22804], mem[_22804 + 196 len ceil32(mem[_22804])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19918 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _20110 = mem[_5155]
            mem[mem[64] + 32] = mem[_5155]
            mem[mem[64] + 64 len 32 * _20110] = mem[_5155 + 32 len 32 * _20110]
            return 32, mem[mem[64] + 32 len (32 * _20110) + 32]
        require mem[96] >= 32
        require mem[128] == bool(mem[128])
        if not mem[128]:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        _19919 = mem[ceil32(return_data.size) + 96]
        idx = 0
        while idx < _19919 - 1:
            require idx < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[_5155]
            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                _20236 = mem[(32 * idx + 1) + _5155 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22154 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20236
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22154))
                            call address(_22154).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20236, this.address
                        else:
                            _22156 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22157 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22157 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22157 + 36] = 0
                            mem[_22157 + 68] = _20236
                            mem[_22157 + 100] = this.address
                            mem[_22157 + 132] = 128
                            mem[_22157 + 164] = mem[_22157]
                            s = 0
                            while s < mem[_22157]:
                                mem[s + _22157 + 196] = mem[s + _22157 + 32]
                                _19919 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22157]) > mem[_22157]:
                                mem[mem[_22157] + _22157 + 196] = 0
                            require ext_code.size(address(_22156))
                            call address(_22156).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20236, address(this.address), 128, mem[_22157], mem[_22157 + 196 len ceil32(mem[_22157])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20730 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22806 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20236
                            mem[mem[64] + 68] = address(_20730)
                            require ext_code.size(address(_22806))
                            call address(_22806).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20236, address(_20730)
                        else:
                            _22808 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22809 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22809 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22809 + 36] = 0
                            mem[_22809 + 68] = _20236
                            mem[_22809 + 100] = address(_20730)
                            mem[_22809 + 132] = 128
                            mem[_22809 + 164] = mem[_22809]
                            s = 0
                            while s < mem[_22809]:
                                mem[s + _22809 + 196] = mem[s + _22809 + 32]
                                _19919 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22809]) > mem[_22809]:
                                mem[mem[_22809] + _22809 + 196] = 0
                            require ext_code.size(address(_22808))
                            call address(_22808).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20236, address(_20730), 128, mem[_22809], mem[_22809 + 196 len ceil32(mem[_22809])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22160 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20236
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22160))
                            call address(_22160).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20236, 0, this.address
                        else:
                            _22162 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22163 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22163 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22163 + 36] = _20236
                            mem[_22163 + 68] = 0
                            mem[_22163 + 100] = this.address
                            mem[_22163 + 132] = 128
                            mem[_22163 + 164] = mem[_22163]
                            s = 0
                            while s < mem[_22163]:
                                mem[s + _22163 + 196] = mem[s + _22163 + 32]
                                _19919 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22163]) > mem[_22163]:
                                mem[mem[_22163] + _22163 + 196] = 0
                            require ext_code.size(address(_22162))
                            call address(_22162).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20236, 0, address(this.address), 128, mem[_22163], mem[_22163 + 196 len ceil32(mem[_22163])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20732 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22811 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20236
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_20732)
                            require ext_code.size(address(_22811))
                            call address(_22811).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20236, 0, address(_20732)
                        else:
                            _22813 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22814 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22814 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22814 + 36] = _20236
                            mem[_22814 + 68] = 0
                            mem[_22814 + 100] = address(_20732)
                            mem[_22814 + 132] = 128
                            mem[_22814 + 164] = mem[_22814]
                            s = 0
                            while s < mem[_22814]:
                                mem[s + _22814 + 196] = mem[s + _22814 + 32]
                                _19919 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22814]) > mem[_22814]:
                                mem[mem[_22814] + _22814 + 196] = 0
                            require ext_code.size(address(_22813))
                            call address(_22813).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20236, 0, address(_20732), 128, mem[_22814], mem[_22814 + 196 len ceil32(mem[_22814])]
            else:
                _20237 = mem[(32 * idx + 1) + _5155 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22166 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20237
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22166))
                            call address(_22166).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20237, this.address
                        else:
                            _22168 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22169 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22169 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22169 + 36] = 0
                            mem[_22169 + 68] = _20237
                            mem[_22169 + 100] = this.address
                            mem[_22169 + 132] = 128
                            mem[_22169 + 164] = mem[_22169]
                            s = 0
                            while s < mem[_22169]:
                                mem[s + _22169 + 196] = mem[s + _22169 + 32]
                                _19919 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22169]) > mem[_22169]:
                                mem[mem[_22169] + _22169 + 196] = 0
                            require ext_code.size(address(_22168))
                            call address(_22168).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20237, address(this.address), 128, mem[_22169], mem[_22169 + 196 len ceil32(mem[_22169])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20734 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22816 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20237
                            mem[mem[64] + 68] = address(_20734)
                            require ext_code.size(address(_22816))
                            call address(_22816).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20237, address(_20734)
                        else:
                            _22818 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22819 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22819 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22819 + 36] = 0
                            mem[_22819 + 68] = _20237
                            mem[_22819 + 100] = address(_20734)
                            mem[_22819 + 132] = 128
                            mem[_22819 + 164] = mem[_22819]
                            s = 0
                            while s < mem[_22819]:
                                mem[s + _22819 + 196] = mem[s + _22819 + 32]
                                _19919 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22819]) > mem[_22819]:
                                mem[mem[_22819] + _22819 + 196] = 0
                            require ext_code.size(address(_22818))
                            call address(_22818).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20237, address(_20734), 128, mem[_22819], mem[_22819 + 196 len ceil32(mem[_22819])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22172 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20237
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22172))
                            call address(_22172).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20237, 0, this.address
                        else:
                            _22174 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22175 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22175 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22175 + 36] = _20237
                            mem[_22175 + 68] = 0
                            mem[_22175 + 100] = this.address
                            mem[_22175 + 132] = 128
                            mem[_22175 + 164] = mem[_22175]
                            s = 0
                            while s < mem[_22175]:
                                mem[s + _22175 + 196] = mem[s + _22175 + 32]
                                _19919 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22175]) > mem[_22175]:
                                mem[mem[_22175] + _22175 + 196] = 0
                            require ext_code.size(address(_22174))
                            call address(_22174).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20237, 0, address(this.address), 128, mem[_22175], mem[_22175 + 196 len ceil32(mem[_22175])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20736 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22821 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20237
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_20736)
                            require ext_code.size(address(_22821))
                            call address(_22821).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20237, 0, address(_20736)
                        else:
                            _22823 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22824 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22824 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22824 + 36] = _20237
                            mem[_22824 + 68] = 0
                            mem[_22824 + 100] = address(_20736)
                            mem[_22824 + 132] = 128
                            mem[_22824 + 164] = mem[_22824]
                            s = 0
                            while s < mem[_22824]:
                                mem[s + _22824 + 196] = mem[s + _22824 + 32]
                                _19919 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22824]) > mem[_22824]:
                                mem[mem[_22824] + _22824 + 196] = 0
                            require ext_code.size(address(_22823))
                            call address(_22823).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20237, 0, address(_20736), 128, mem[_22824], mem[_22824 + 196 len ceil32(mem[_22824])]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19919 = mem[ceil32(return_data.size) + 96]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _20111 = mem[_5155]
        mem[mem[64] + 32] = mem[_5155]
        mem[mem[64] + 64 len 32 * _20111] = mem[_5155 + 32 len 32 * _20111]
        return 32, mem[mem[64] + 32 len (32 * _20111) + 32]
    _15393 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size) + 1
    mem[_15393] = return_data.size
    mem[_15393 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
    if not ext_call.success:
        revert with 0, 'TransferHelper::safeTransfer: transfer failed'
    if not return_data.size:
        _19920 = mem[ceil32(return_data.size) + 96]
        idx = 0
        while idx < _19920 - 1:
            require idx < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[_5155]
            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                _20238 = mem[(32 * idx + 1) + _5155 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22179 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20238
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22179))
                            call address(_22179).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20238, this.address
                        else:
                            _22181 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22182 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22182 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22182 + 36] = 0
                            mem[_22182 + 68] = _20238
                            mem[_22182 + 100] = this.address
                            mem[_22182 + 132] = 128
                            mem[_22182 + 164] = mem[_22182]
                            s = 0
                            while s < mem[_22182]:
                                mem[s + _22182 + 196] = mem[s + _22182 + 32]
                                _19920 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22182]) > mem[_22182]:
                                mem[mem[_22182] + _22182 + 196] = 0
                            require ext_code.size(address(_22181))
                            call address(_22181).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20238, address(this.address), 128, mem[_22182], mem[_22182 + 196 len ceil32(mem[_22182])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20738 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22826 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20238
                            mem[mem[64] + 68] = address(_20738)
                            require ext_code.size(address(_22826))
                            call address(_22826).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20238, address(_20738)
                        else:
                            _22828 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22829 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22829 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22829 + 36] = 0
                            mem[_22829 + 68] = _20238
                            mem[_22829 + 100] = address(_20738)
                            mem[_22829 + 132] = 128
                            mem[_22829 + 164] = mem[_22829]
                            s = 0
                            while s < mem[_22829]:
                                mem[s + _22829 + 196] = mem[s + _22829 + 32]
                                _19920 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22829]) > mem[_22829]:
                                mem[mem[_22829] + _22829 + 196] = 0
                            require ext_code.size(address(_22828))
                            call address(_22828).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20238, address(_20738), 128, mem[_22829], mem[_22829 + 196 len ceil32(mem[_22829])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22185 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20238
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22185))
                            call address(_22185).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20238, 0, this.address
                        else:
                            _22187 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22188 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22188 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22188 + 36] = _20238
                            mem[_22188 + 68] = 0
                            mem[_22188 + 100] = this.address
                            mem[_22188 + 132] = 128
                            mem[_22188 + 164] = mem[_22188]
                            s = 0
                            while s < mem[_22188]:
                                mem[s + _22188 + 196] = mem[s + _22188 + 32]
                                _19920 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22188]) > mem[_22188]:
                                mem[mem[_22188] + _22188 + 196] = 0
                            require ext_code.size(address(_22187))
                            call address(_22187).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20238, 0, address(this.address), 128, mem[_22188], mem[_22188 + 196 len ceil32(mem[_22188])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20740 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22831 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20238
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_20740)
                            require ext_code.size(address(_22831))
                            call address(_22831).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20238, 0, address(_20740)
                        else:
                            _22833 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22834 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22834 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22834 + 36] = _20238
                            mem[_22834 + 68] = 0
                            mem[_22834 + 100] = address(_20740)
                            mem[_22834 + 132] = 128
                            mem[_22834 + 164] = mem[_22834]
                            s = 0
                            while s < mem[_22834]:
                                mem[s + _22834 + 196] = mem[s + _22834 + 32]
                                _19920 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22834]) > mem[_22834]:
                                mem[mem[_22834] + _22834 + 196] = 0
                            require ext_code.size(address(_22833))
                            call address(_22833).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20238, 0, address(_20740), 128, mem[_22834], mem[_22834 + 196 len ceil32(mem[_22834])]
            else:
                _20239 = mem[(32 * idx + 1) + _5155 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22191 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20239
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22191))
                            call address(_22191).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20239, this.address
                        else:
                            _22193 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22194 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22194 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22194 + 36] = 0
                            mem[_22194 + 68] = _20239
                            mem[_22194 + 100] = this.address
                            mem[_22194 + 132] = 128
                            mem[_22194 + 164] = mem[_22194]
                            s = 0
                            while s < mem[_22194]:
                                mem[s + _22194 + 196] = mem[s + _22194 + 32]
                                _19920 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22194]) > mem[_22194]:
                                mem[mem[_22194] + _22194 + 196] = 0
                            require ext_code.size(address(_22193))
                            call address(_22193).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20239, address(this.address), 128, mem[_22194], mem[_22194 + 196 len ceil32(mem[_22194])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20742 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22836 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20239
                            mem[mem[64] + 68] = address(_20742)
                            require ext_code.size(address(_22836))
                            call address(_22836).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20239, address(_20742)
                        else:
                            _22838 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22839 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22839 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22839 + 36] = 0
                            mem[_22839 + 68] = _20239
                            mem[_22839 + 100] = address(_20742)
                            mem[_22839 + 132] = 128
                            mem[_22839 + 164] = mem[_22839]
                            s = 0
                            while s < mem[_22839]:
                                mem[s + _22839 + 196] = mem[s + _22839 + 32]
                                _19920 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22839]) > mem[_22839]:
                                mem[mem[_22839] + _22839 + 196] = 0
                            require ext_code.size(address(_22838))
                            call address(_22838).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20239, address(_20742), 128, mem[_22839], mem[_22839 + 196 len ceil32(mem[_22839])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22197 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20239
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22197))
                            call address(_22197).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20239, 0, this.address
                        else:
                            _22199 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22200 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22200 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22200 + 36] = _20239
                            mem[_22200 + 68] = 0
                            mem[_22200 + 100] = this.address
                            mem[_22200 + 132] = 128
                            mem[_22200 + 164] = mem[_22200]
                            s = 0
                            while s < mem[_22200]:
                                mem[s + _22200 + 196] = mem[s + _22200 + 32]
                                _19920 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22200]) > mem[_22200]:
                                mem[mem[_22200] + _22200 + 196] = 0
                            require ext_code.size(address(_22199))
                            call address(_22199).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20239, 0, address(this.address), 128, mem[_22200], mem[_22200 + 196 len ceil32(mem[_22200])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20744 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22841 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20239
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_20744)
                            require ext_code.size(address(_22841))
                            call address(_22841).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20239, 0, address(_20744)
                        else:
                            _22843 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22844 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22844 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22844 + 36] = _20239
                            mem[_22844 + 68] = 0
                            mem[_22844 + 100] = address(_20744)
                            mem[_22844 + 132] = 128
                            mem[_22844 + 164] = mem[_22844]
                            s = 0
                            while s < mem[_22844]:
                                mem[s + _22844 + 196] = mem[s + _22844 + 32]
                                _19920 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22844]) > mem[_22844]:
                                mem[mem[_22844] + _22844 + 196] = 0
                            require ext_code.size(address(_22843))
                            call address(_22843).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20239, 0, address(_20744), 128, mem[_22844], mem[_22844 + 196 len ceil32(mem[_22844])]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19920 = mem[ceil32(return_data.size) + 96]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _20112 = mem[_5155]
        mem[mem[64] + 32] = mem[_5155]
        mem[mem[64] + 64 len 32 * _20112] = mem[_5155 + 32 len 32 * _20112]
        return 32, mem[mem[64] + 32 len (32 * _20112) + 32]
    require return_data.size >= 32
    require mem[_15393 + 32] == bool(mem[_15393 + 32])
    if not mem[_15393 + 32]:
        revert with 0, 'TransferHelper::safeTransfer: transfer failed'
    _19921 = mem[ceil32(return_data.size) + 96]
    idx = 0
    while idx < _19921 - 1:
        require idx < mem[ceil32(return_data.size) + 96]
        require idx + 1 < mem[ceil32(return_data.size) + 96]
        require idx + 1 < mem[_5155]
        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
            _20240 = mem[(32 * idx + 1) + _5155 + 32]
            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                    require idx < mem[ceil32(return_data.size) + 256]
                    require idx < mem[ceil32(return_data.size) + 320]
                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                        _22204 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 0
                        mem[mem[64] + 36] = _20240
                        mem[mem[64] + 68] = this.address
                        require ext_code.size(address(_22204))
                        call address(_22204).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args 0, _20240, this.address
                    else:
                        _22206 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        _22207 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_22207 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_22207 + 36] = 0
                        mem[_22207 + 68] = _20240
                        mem[_22207 + 100] = this.address
                        mem[_22207 + 132] = 128
                        mem[_22207 + 164] = mem[_22207]
                        s = 0
                        while s < mem[_22207]:
                            mem[s + _22207 + 196] = mem[s + _22207 + 32]
                            _19921 = mem[ceil32(return_data.size) + 96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_22207]) > mem[_22207]:
                            mem[mem[_22207] + _22207 + 196] = 0
                        require ext_code.size(address(_22206))
                        call address(_22206).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _20240, address(this.address), 128, mem[_22207], mem[_22207 + 196 len ceil32(mem[_22207])]
                else:
                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                    _20746 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                    require idx < mem[ceil32(return_data.size) + 256]
                    require idx < mem[ceil32(return_data.size) + 320]
                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                        _22846 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 0
                        mem[mem[64] + 36] = _20240
                        mem[mem[64] + 68] = address(_20746)
                        require ext_code.size(address(_22846))
                        call address(_22846).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args 0, _20240, address(_20746)
                    else:
                        _22848 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        _22849 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_22849 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_22849 + 36] = 0
                        mem[_22849 + 68] = _20240
                        mem[_22849 + 100] = address(_20746)
                        mem[_22849 + 132] = 128
                        mem[_22849 + 164] = mem[_22849]
                        s = 0
                        while s < mem[_22849]:
                            mem[s + _22849 + 196] = mem[s + _22849 + 32]
                            _19921 = mem[ceil32(return_data.size) + 96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_22849]) > mem[_22849]:
                            mem[mem[_22849] + _22849 + 196] = 0
                        require ext_code.size(address(_22848))
                        call address(_22848).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _20240, address(_20746), 128, mem[_22849], mem[_22849 + 196 len ceil32(mem[_22849])]
            else:
                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                    require idx < mem[ceil32(return_data.size) + 256]
                    require idx < mem[ceil32(return_data.size) + 320]
                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                        _22210 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _20240
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = this.address
                        require ext_code.size(address(_22210))
                        call address(_22210).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args _20240, 0, this.address
                    else:
                        _22212 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        _22213 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_22213 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_22213 + 36] = _20240
                        mem[_22213 + 68] = 0
                        mem[_22213 + 100] = this.address
                        mem[_22213 + 132] = 128
                        mem[_22213 + 164] = mem[_22213]
                        s = 0
                        while s < mem[_22213]:
                            mem[s + _22213 + 196] = mem[s + _22213 + 32]
                            _19921 = mem[ceil32(return_data.size) + 96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_22213]) > mem[_22213]:
                            mem[mem[_22213] + _22213 + 196] = 0
                        require ext_code.size(address(_22212))
                        call address(_22212).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _20240, 0, address(this.address), 128, mem[_22213], mem[_22213 + 196 len ceil32(mem[_22213])]
                else:
                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                    _20748 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                    require idx < mem[ceil32(return_data.size) + 256]
                    require idx < mem[ceil32(return_data.size) + 320]
                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                        _22851 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _20240
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = address(_20748)
                        require ext_code.size(address(_22851))
                        call address(_22851).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args _20240, 0, address(_20748)
                    else:
                        _22853 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        _22854 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_22854 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_22854 + 36] = _20240
                        mem[_22854 + 68] = 0
                        mem[_22854 + 100] = address(_20748)
                        mem[_22854 + 132] = 128
                        mem[_22854 + 164] = mem[_22854]
                        s = 0
                        while s < mem[_22854]:
                            mem[s + _22854 + 196] = mem[s + _22854 + 32]
                            _19921 = mem[ceil32(return_data.size) + 96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_22854]) > mem[_22854]:
                            mem[mem[_22854] + _22854 + 196] = 0
                        require ext_code.size(address(_22853))
                        call address(_22853).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _20240, 0, address(_20748), 128, mem[_22854], mem[_22854 + 196 len ceil32(mem[_22854])]
        else:
            _20241 = mem[(32 * idx + 1) + _5155 + 32]
            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                    require idx < mem[ceil32(return_data.size) + 256]
                    require idx < mem[ceil32(return_data.size) + 320]
                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                        _22216 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 0
                        mem[mem[64] + 36] = _20241
                        mem[mem[64] + 68] = this.address
                        require ext_code.size(address(_22216))
                        call address(_22216).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args 0, _20241, this.address
                    else:
                        _22218 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        _22219 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_22219 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_22219 + 36] = 0
                        mem[_22219 + 68] = _20241
                        mem[_22219 + 100] = this.address
                        mem[_22219 + 132] = 128
                        mem[_22219 + 164] = mem[_22219]
                        s = 0
                        while s < mem[_22219]:
                            mem[s + _22219 + 196] = mem[s + _22219 + 32]
                            _19921 = mem[ceil32(return_data.size) + 96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_22219]) > mem[_22219]:
                            mem[mem[_22219] + _22219 + 196] = 0
                        require ext_code.size(address(_22218))
                        call address(_22218).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _20241, address(this.address), 128, mem[_22219], mem[_22219 + 196 len ceil32(mem[_22219])]
                else:
                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                    _20750 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                    require idx < mem[ceil32(return_data.size) + 256]
                    require idx < mem[ceil32(return_data.size) + 320]
                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                        _22856 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 0
                        mem[mem[64] + 36] = _20241
                        mem[mem[64] + 68] = address(_20750)
                        require ext_code.size(address(_22856))
                        call address(_22856).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args 0, _20241, address(_20750)
                    else:
                        _22858 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        _22859 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_22859 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_22859 + 36] = 0
                        mem[_22859 + 68] = _20241
                        mem[_22859 + 100] = address(_20750)
                        mem[_22859 + 132] = 128
                        mem[_22859 + 164] = mem[_22859]
                        s = 0
                        while s < mem[_22859]:
                            mem[s + _22859 + 196] = mem[s + _22859 + 32]
                            _19921 = mem[ceil32(return_data.size) + 96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_22859]) > mem[_22859]:
                            mem[mem[_22859] + _22859 + 196] = 0
                        require ext_code.size(address(_22858))
                        call address(_22858).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _20241, address(_20750), 128, mem[_22859], mem[_22859 + 196 len ceil32(mem[_22859])]
            else:
                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                    require idx < mem[ceil32(return_data.size) + 256]
                    require idx < mem[ceil32(return_data.size) + 320]
                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                        _22222 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _20241
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = this.address
                        require ext_code.size(address(_22222))
                        call address(_22222).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args _20241, 0, this.address
                    else:
                        _22224 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        _22225 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_22225 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_22225 + 36] = _20241
                        mem[_22225 + 68] = 0
                        mem[_22225 + 100] = this.address
                        mem[_22225 + 132] = 128
                        mem[_22225 + 164] = mem[_22225]
                        s = 0
                        while s < mem[_22225]:
                            mem[s + _22225 + 196] = mem[s + _22225 + 32]
                            _19921 = mem[ceil32(return_data.size) + 96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_22225]) > mem[_22225]:
                            mem[mem[_22225] + _22225 + 196] = 0
                        require ext_code.size(address(_22224))
                        call address(_22224).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _20241, 0, address(this.address), 128, mem[_22225], mem[_22225 + 196 len ceil32(mem[_22225])]
                else:
                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                    _20752 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                    require idx < mem[ceil32(return_data.size) + 256]
                    require idx < mem[ceil32(return_data.size) + 320]
                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                        _22861 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _20241
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = address(_20752)
                        require ext_code.size(address(_22861))
                        call address(_22861).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args _20241, 0, address(_20752)
                    else:
                        _22863 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        _22864 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_22864 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_22864 + 36] = _20241
                        mem[_22864 + 68] = 0
                        mem[_22864 + 100] = address(_20752)
                        mem[_22864 + 132] = 128
                        mem[_22864 + 164] = mem[_22864]
                        s = 0
                        while s < mem[_22864]:
                            mem[s + _22864 + 196] = mem[s + _22864 + 32]
                            _19921 = mem[ceil32(return_data.size) + 96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_22864]) > mem[_22864]:
                            mem[mem[_22864] + _22864 + 196] = 0
                        require ext_code.size(address(_22863))
                        call address(_22863).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _20241, 0, address(_20752), 128, mem[_22864], mem[_22864 + 196 len ceil32(mem[_22864])]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _19921 = mem[ceil32(return_data.size) + 96]
        idx = idx + 1
        continue 
    mem[mem[64]] = 32
    _20113 = mem[_5155]
    mem[mem[64] + 32] = mem[_5155]
    mem[mem[64] + 64 len 32 * _20113] = mem[_5155 + 32 len 32 * _20113]
    return 32, mem[mem[64] + 32 len (32 * _20113) + 32]
}

function sub_ae44042b(?) {
    require calldata.size - 4 >= 192
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg3 == address(arg3)
    require arg4 == arg4
    require arg5 == bool(arg5)
    require arg6 == arg6
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    mem[100] = this.address
    require ext_code.size(address(arg1))
    staticcall address(arg1).0x70a08231 with:
            gas gas_remaining wei
           args this.address
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    if ext_call.return_data[0] <= 0:
        revert with 0, 'No'
    mem[ceil32(return_data.size) + 96] = 2
    mem[ceil32(return_data.size) + 128] = address(arg1)
    mem[ceil32(return_data.size) + 160] = address(arg2)
    mem[ceil32(return_data.size) + 192] = 1
    mem[ceil32(return_data.size) + 224] = arg4
    mem[ceil32(return_data.size) + 256] = 1
    mem[ceil32(return_data.size) + 288] = bool(arg5)
    mem[ceil32(return_data.size) + 320] = 1
    mem[64] = ceil32(return_data.size) + 384
    mem[ceil32(return_data.size) + 352] = code.data[9720 len 32]
    idx = 0
    while idx < 1:
        require idx < mem[ceil32(return_data.size) + 96]
        require idx + 1 < mem[ceil32(return_data.size) + 96]
        _5182 = mem[(32 * idx + 1) + ceil32(return_data.size) + 128]
        mem[mem[64] + 4] = mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]
        mem[mem[64] + 36] = address(_5182)
        require ext_code.size(address(arg3))
        staticcall address(arg3).getPair(address rg1, address rg2) with:
                gas gas_remaining wei
               args mem[mem[64] + 4], address(_5182)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5293 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_5293] == mem[_5293 + 12 len 20]
        require idx < mem[ceil32(return_data.size) + 320]
        mem[(32 * idx) + ceil32(return_data.size) + 352] = mem[_5293 + 12 len 20]
        idx = idx + 1
        continue 
    _5174 = mem[ceil32(return_data.size) + 96]
    _5175 = mem[64]
    mem[mem[64]] = mem[ceil32(return_data.size) + 96]
    mem[64] = mem[64] + (32 * _5174) + 32
    if not _5174:
        require 0 < mem[_5175]
        mem[_5175 + 32] = ext_call.return_data[0]
        _10316 = mem[ceil32(return_data.size) + 96]
        idx = 0
        while idx < _10316 - 1:
            require idx < mem[ceil32(return_data.size) + 320]
            require idx < mem[ceil32(return_data.size) + 96]
            _10345 = mem[(32 * idx) + ceil32(return_data.size) + 128]
            require idx + 1 < mem[ceil32(return_data.size) + 96]
            _10358 = mem[(32 * idx + 1) + ceil32(return_data.size) + 128]
            require ext_code.size(mem[(32 * idx) + ceil32(return_data.size) + 364 len 20])
            staticcall mem[(32 * idx) + ceil32(return_data.size) + 364 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                _10410 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_10410] == mem[_10410 + 18 len 14]
                require mem[_10410 + 32] == mem[_10410 + 50 len 14]
                require mem[_10410 + 64] == mem[_10410 + 92 len 4]
                require idx < mem[_5175]
                require idx < mem[ceil32(return_data.size) + 192]
                if address(_10345) == address(_10345):
                    if not mem[(32 * idx) + _5175 + 32]:
                        require mem[_10410 + 18 len 14]
                        if 1000 * mem[_10410 + 18 len 14] / mem[_10410 + 18 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_10410 + 18 len 14] < 1000 * mem[_10410 + 18 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_10410 + 18 len 14]
                        require idx + 1 < mem[_5175]
                        mem[(32 * idx + 1) + _5175 + 32] = 0 / 1000 * mem[_10410 + 18 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) / mem[(32 * idx) + _5175 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]):
                            if not mem[_10410 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                                require idx + 1 < mem[_5175]
                                mem[(32 * idx + 1) + _5175 + 32] = 0 / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                            else:
                                if 1000 * mem[_10410 + 18 len 14] / mem[_10410 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10410 + 18 len 14]) < 1000 * mem[_10410 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10410 + 18 len 14])
                                require idx + 1 < mem[_5175]
                                mem[(32 * idx + 1) + _5175 + 32] = 0 / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10410 + 18 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10410 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10410 + 50 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) != mem[_10410 + 50 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_10410 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                                require idx + 1 < mem[_5175]
                                mem[(32 * idx + 1) + _5175 + 32] = (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10410 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10410 + 50 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                            else:
                                if 1000 * mem[_10410 + 18 len 14] / mem[_10410 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10410 + 18 len 14]) < 1000 * mem[_10410 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10410 + 18 len 14])
                                require idx + 1 < mem[_5175]
                                mem[(32 * idx + 1) + _5175 + 32] = (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10410 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10410 + 50 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10410 + 18 len 14])
                else:
                    if not mem[(32 * idx) + _5175 + 32]:
                        require mem[_10410 + 50 len 14]
                        if 1000 * mem[_10410 + 50 len 14] / mem[_10410 + 50 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_10410 + 50 len 14] < 1000 * mem[_10410 + 50 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_10410 + 50 len 14]
                        require idx + 1 < mem[_5175]
                        mem[(32 * idx + 1) + _5175 + 32] = 0 / 1000 * mem[_10410 + 50 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) / mem[(32 * idx) + _5175 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]):
                            if not mem[_10410 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                                require idx + 1 < mem[_5175]
                                mem[(32 * idx + 1) + _5175 + 32] = 0 / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                            else:
                                if 1000 * mem[_10410 + 50 len 14] / mem[_10410 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10410 + 50 len 14]) < 1000 * mem[_10410 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10410 + 50 len 14])
                                require idx + 1 < mem[_5175]
                                mem[(32 * idx + 1) + _5175 + 32] = 0 / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10410 + 50 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10410 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10410 + 18 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) != mem[_10410 + 18 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_10410 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                                require idx + 1 < mem[_5175]
                                mem[(32 * idx + 1) + _5175 + 32] = (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10410 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10410 + 18 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                            else:
                                if 1000 * mem[_10410 + 50 len 14] / mem[_10410 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10410 + 50 len 14]) < 1000 * mem[_10410 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10410 + 50 len 14])
                                require idx + 1 < mem[_5175]
                                mem[(32 * idx + 1) + _5175 + 32] = (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10410 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10410 + 18 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10410 + 50 len 14])
            else:
                _10411 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_10411] == mem[_10411 + 18 len 14]
                require mem[_10411 + 32] == mem[_10411 + 50 len 14]
                require mem[_10411 + 64] == mem[_10411 + 92 len 4]
                require idx < mem[_5175]
                require idx < mem[ceil32(return_data.size) + 192]
                if address(_10345) == address(_10358):
                    if not mem[(32 * idx) + _5175 + 32]:
                        require mem[_10411 + 18 len 14]
                        if 1000 * mem[_10411 + 18 len 14] / mem[_10411 + 18 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_10411 + 18 len 14] < 1000 * mem[_10411 + 18 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_10411 + 18 len 14]
                        require idx + 1 < mem[_5175]
                        mem[(32 * idx + 1) + _5175 + 32] = 0 / 1000 * mem[_10411 + 18 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) / mem[(32 * idx) + _5175 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]):
                            if not mem[_10411 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                                require idx + 1 < mem[_5175]
                                mem[(32 * idx + 1) + _5175 + 32] = 0 / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                            else:
                                if 1000 * mem[_10411 + 18 len 14] / mem[_10411 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10411 + 18 len 14]) < 1000 * mem[_10411 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10411 + 18 len 14])
                                require idx + 1 < mem[_5175]
                                mem[(32 * idx + 1) + _5175 + 32] = 0 / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10411 + 18 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10411 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10411 + 50 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) != mem[_10411 + 50 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_10411 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                                require idx + 1 < mem[_5175]
                                mem[(32 * idx + 1) + _5175 + 32] = (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10411 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10411 + 50 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                            else:
                                if 1000 * mem[_10411 + 18 len 14] / mem[_10411 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10411 + 18 len 14]) < 1000 * mem[_10411 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10411 + 18 len 14])
                                require idx + 1 < mem[_5175]
                                mem[(32 * idx + 1) + _5175 + 32] = (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10411 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10411 + 50 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10411 + 18 len 14])
                else:
                    if not mem[(32 * idx) + _5175 + 32]:
                        require mem[_10411 + 50 len 14]
                        if 1000 * mem[_10411 + 50 len 14] / mem[_10411 + 50 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_10411 + 50 len 14] < 1000 * mem[_10411 + 50 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_10411 + 50 len 14]
                        require idx + 1 < mem[_5175]
                        mem[(32 * idx + 1) + _5175 + 32] = 0 / 1000 * mem[_10411 + 50 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) / mem[(32 * idx) + _5175 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]):
                            if not mem[_10411 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                                require idx + 1 < mem[_5175]
                                mem[(32 * idx + 1) + _5175 + 32] = 0 / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                            else:
                                if 1000 * mem[_10411 + 50 len 14] / mem[_10411 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10411 + 50 len 14]) < 1000 * mem[_10411 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10411 + 50 len 14])
                                require idx + 1 < mem[_5175]
                                mem[(32 * idx + 1) + _5175 + 32] = 0 / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10411 + 50 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10411 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10411 + 18 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) != mem[_10411 + 18 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_10411 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                                require idx + 1 < mem[_5175]
                                mem[(32 * idx + 1) + _5175 + 32] = (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10411 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10411 + 18 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                            else:
                                if 1000 * mem[_10411 + 50 len 14] / mem[_10411 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10411 + 50 len 14]) < 1000 * mem[_10411 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10411 + 50 len 14])
                                require idx + 1 < mem[_5175]
                                mem[(32 * idx + 1) + _5175 + 32] = (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10411 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10411 + 18 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10411 + 50 len 14])
            _10316 = mem[ceil32(return_data.size) + 96]
            idx = idx + 1
            continue 
        require mem[_5175] - 1 < mem[_5175]
        if mem[(32 * mem[_5175] - 1) + _5175 + 32] < arg6:
            revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT'
        require 0 < mem[ceil32(return_data.size) + 96]
        _10366 = mem[ceil32(return_data.size) + 128]
        require 0 < mem[ceil32(return_data.size) + 320]
        require 0 < mem[_5175]
        _10380 = mem[_5175 + 32]
        _10384 = mem[64]
        mem[mem[64] + 36] = mem[ceil32(return_data.size) + 364 len 20]
        mem[mem[64] + 68] = _10380
        _10428 = mem[64]
        mem[mem[64]] = 68
        mem[64] = mem[64] + 100
        mem[_10428 + 32 len 4] = unknown_0xa9059cbb(?????)
        _10444 = mem[_10428]
        mem[_10384 + 100 len ceil32(mem[_10428])] = mem[_10428 + 32 len ceil32(mem[_10428])]
        if ceil32(_10444) <= _10444:
            call address(_10366) with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _10444 + _10384 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                if not mem[96]:
                    _19966 = mem[ceil32(return_data.size) + 96]
                    idx = 0
                    while idx < _19966 - 1:
                        require idx < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[ceil32(return_data.size) + 96]
                        require idx + 1 < mem[_5175]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            _20270 = mem[(32 * idx + 1) + _5175 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _21889 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _20270
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_21889))
                                        call address(_21889).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _20270, this.address
                                    else:
                                        _21891 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _21892 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21892 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21892 + 36] = 0
                                        mem[_21892 + 68] = _20270
                                        mem[_21892 + 100] = this.address
                                        mem[_21892 + 132] = 128
                                        mem[_21892 + 164] = mem[_21892]
                                        s = 0
                                        while s < mem[_21892]:
                                            mem[s + _21892 + 196] = mem[s + _21892 + 32]
                                            _19966 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_21892]) > mem[_21892]:
                                            mem[mem[_21892] + _21892 + 196] = 0
                                        require ext_code.size(address(_21891))
                                        call address(_21891).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _20270, address(this.address), 128, mem[_21892], mem[_21892 + 196 len ceil32(mem[_21892])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _20686 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _22606 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _20270
                                        mem[mem[64] + 68] = address(_20686)
                                        require ext_code.size(address(_22606))
                                        call address(_22606).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _20270, address(_20686)
                                    else:
                                        _22608 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _22609 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22609 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22609 + 36] = 0
                                        mem[_22609 + 68] = _20270
                                        mem[_22609 + 100] = address(_20686)
                                        mem[_22609 + 132] = 128
                                        mem[_22609 + 164] = mem[_22609]
                                        s = 0
                                        while s < mem[_22609]:
                                            mem[s + _22609 + 196] = mem[s + _22609 + 32]
                                            _19966 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_22609]) > mem[_22609]:
                                            mem[mem[_22609] + _22609 + 196] = 0
                                        require ext_code.size(address(_22608))
                                        call address(_22608).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _20270, address(_20686), 128, mem[_22609], mem[_22609 + 196 len ceil32(mem[_22609])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _21895 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _20270
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_21895))
                                        call address(_21895).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _20270, 0, this.address
                                    else:
                                        _21897 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _21898 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21898 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21898 + 36] = _20270
                                        mem[_21898 + 68] = 0
                                        mem[_21898 + 100] = this.address
                                        mem[_21898 + 132] = 128
                                        mem[_21898 + 164] = mem[_21898]
                                        s = 0
                                        while s < mem[_21898]:
                                            mem[s + _21898 + 196] = mem[s + _21898 + 32]
                                            _19966 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_21898]) > mem[_21898]:
                                            mem[mem[_21898] + _21898 + 196] = 0
                                        require ext_code.size(address(_21897))
                                        call address(_21897).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _20270, 0, address(this.address), 128, mem[_21898], mem[_21898 + 196 len ceil32(mem[_21898])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _20688 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _22611 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _20270
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_20688)
                                        require ext_code.size(address(_22611))
                                        call address(_22611).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _20270, 0, address(_20688)
                                    else:
                                        _22613 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _22614 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22614 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22614 + 36] = _20270
                                        mem[_22614 + 68] = 0
                                        mem[_22614 + 100] = address(_20688)
                                        mem[_22614 + 132] = 128
                                        mem[_22614 + 164] = mem[_22614]
                                        s = 0
                                        while s < mem[_22614]:
                                            mem[s + _22614 + 196] = mem[s + _22614 + 32]
                                            _19966 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_22614]) > mem[_22614]:
                                            mem[mem[_22614] + _22614 + 196] = 0
                                        require ext_code.size(address(_22613))
                                        call address(_22613).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _20270, 0, address(_20688), 128, mem[_22614], mem[_22614 + 196 len ceil32(mem[_22614])]
                        else:
                            _20271 = mem[(32 * idx + 1) + _5175 + 32]
                            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _21901 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _20271
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_21901))
                                        call address(_21901).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _20271, this.address
                                    else:
                                        _21903 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _21904 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21904 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21904 + 36] = 0
                                        mem[_21904 + 68] = _20271
                                        mem[_21904 + 100] = this.address
                                        mem[_21904 + 132] = 128
                                        mem[_21904 + 164] = mem[_21904]
                                        s = 0
                                        while s < mem[_21904]:
                                            mem[s + _21904 + 196] = mem[s + _21904 + 32]
                                            _19966 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_21904]) > mem[_21904]:
                                            mem[mem[_21904] + _21904 + 196] = 0
                                        require ext_code.size(address(_21903))
                                        call address(_21903).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _20271, address(this.address), 128, mem[_21904], mem[_21904 + 196 len ceil32(mem[_21904])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _20690 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _22616 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _20271
                                        mem[mem[64] + 68] = address(_20690)
                                        require ext_code.size(address(_22616))
                                        call address(_22616).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _20271, address(_20690)
                                    else:
                                        _22618 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _22619 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22619 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22619 + 36] = 0
                                        mem[_22619 + 68] = _20271
                                        mem[_22619 + 100] = address(_20690)
                                        mem[_22619 + 132] = 128
                                        mem[_22619 + 164] = mem[_22619]
                                        s = 0
                                        while s < mem[_22619]:
                                            mem[s + _22619 + 196] = mem[s + _22619 + 32]
                                            _19966 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_22619]) > mem[_22619]:
                                            mem[mem[_22619] + _22619 + 196] = 0
                                        require ext_code.size(address(_22618))
                                        call address(_22618).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _20271, address(_20690), 128, mem[_22619], mem[_22619 + 196 len ceil32(mem[_22619])]
                            else:
                                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _21907 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _20271
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_21907))
                                        call address(_21907).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _20271, 0, this.address
                                    else:
                                        _21909 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _21910 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_21910 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_21910 + 36] = _20271
                                        mem[_21910 + 68] = 0
                                        mem[_21910 + 100] = this.address
                                        mem[_21910 + 132] = 128
                                        mem[_21910 + 164] = mem[_21910]
                                        s = 0
                                        while s < mem[_21910]:
                                            mem[s + _21910 + 196] = mem[s + _21910 + 32]
                                            _19966 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_21910]) > mem[_21910]:
                                            mem[mem[_21910] + _21910 + 196] = 0
                                        require ext_code.size(address(_21909))
                                        call address(_21909).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _20271, 0, address(this.address), 128, mem[_21910], mem[_21910 + 196 len ceil32(mem[_21910])]
                                else:
                                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                                    _20692 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                    require idx < mem[ceil32(return_data.size) + 256]
                                    require idx < mem[ceil32(return_data.size) + 320]
                                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                        _22621 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _20271
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_20692)
                                        require ext_code.size(address(_22621))
                                        call address(_22621).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _20271, 0, address(_20692)
                                    else:
                                        _22623 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                        _22624 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_22624 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_22624 + 36] = _20271
                                        mem[_22624 + 68] = 0
                                        mem[_22624 + 100] = address(_20692)
                                        mem[_22624 + 132] = 128
                                        mem[_22624 + 164] = mem[_22624]
                                        s = 0
                                        while s < mem[_22624]:
                                            mem[s + _22624 + 196] = mem[s + _22624 + 32]
                                            _19966 = mem[ceil32(return_data.size) + 96]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_22624]) > mem[_22624]:
                                            mem[mem[_22624] + _22624 + 196] = 0
                                        require ext_code.size(address(_22623))
                                        call address(_22623).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _20271, 0, address(_20692), 128, mem[_22624], mem[_22624 + 196 len ceil32(mem[_22624])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19966 = mem[ceil32(return_data.size) + 96]
                        idx = idx + 1
                        continue 
                    mem[mem[64]] = 32
                    _20158 = mem[_5175]
                    mem[mem[64] + 32] = mem[_5175]
                    mem[mem[64] + 64 len 32 * _20158] = mem[_5175 + 32 len 32 * _20158]
                    return 32, mem[mem[64] + 32 len (32 * _20158) + 32]
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                _19967 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _19967 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_5175]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _20272 = mem[(32 * idx + 1) + _5175 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21914 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20272
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21914))
                                    call address(_21914).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20272, this.address
                                else:
                                    _21916 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21917 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21917 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21917 + 36] = 0
                                    mem[_21917 + 68] = _20272
                                    mem[_21917 + 100] = this.address
                                    mem[_21917 + 132] = 128
                                    mem[_21917 + 164] = mem[_21917]
                                    s = 0
                                    while s < mem[_21917]:
                                        mem[s + _21917 + 196] = mem[s + _21917 + 32]
                                        _19967 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21917]) > mem[_21917]:
                                        mem[mem[_21917] + _21917 + 196] = 0
                                    require ext_code.size(address(_21916))
                                    call address(_21916).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20272, address(this.address), 128, mem[_21917], mem[_21917 + 196 len ceil32(mem[_21917])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20694 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22626 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20272
                                    mem[mem[64] + 68] = address(_20694)
                                    require ext_code.size(address(_22626))
                                    call address(_22626).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20272, address(_20694)
                                else:
                                    _22628 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22629 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22629 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22629 + 36] = 0
                                    mem[_22629 + 68] = _20272
                                    mem[_22629 + 100] = address(_20694)
                                    mem[_22629 + 132] = 128
                                    mem[_22629 + 164] = mem[_22629]
                                    s = 0
                                    while s < mem[_22629]:
                                        mem[s + _22629 + 196] = mem[s + _22629 + 32]
                                        _19967 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22629]) > mem[_22629]:
                                        mem[mem[_22629] + _22629 + 196] = 0
                                    require ext_code.size(address(_22628))
                                    call address(_22628).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20272, address(_20694), 128, mem[_22629], mem[_22629 + 196 len ceil32(mem[_22629])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21920 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20272
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21920))
                                    call address(_21920).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20272, 0, this.address
                                else:
                                    _21922 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21923 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21923 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21923 + 36] = _20272
                                    mem[_21923 + 68] = 0
                                    mem[_21923 + 100] = this.address
                                    mem[_21923 + 132] = 128
                                    mem[_21923 + 164] = mem[_21923]
                                    s = 0
                                    while s < mem[_21923]:
                                        mem[s + _21923 + 196] = mem[s + _21923 + 32]
                                        _19967 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21923]) > mem[_21923]:
                                        mem[mem[_21923] + _21923 + 196] = 0
                                    require ext_code.size(address(_21922))
                                    call address(_21922).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20272, 0, address(this.address), 128, mem[_21923], mem[_21923 + 196 len ceil32(mem[_21923])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20696 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22631 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20272
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_20696)
                                    require ext_code.size(address(_22631))
                                    call address(_22631).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20272, 0, address(_20696)
                                else:
                                    _22633 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22634 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22634 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22634 + 36] = _20272
                                    mem[_22634 + 68] = 0
                                    mem[_22634 + 100] = address(_20696)
                                    mem[_22634 + 132] = 128
                                    mem[_22634 + 164] = mem[_22634]
                                    s = 0
                                    while s < mem[_22634]:
                                        mem[s + _22634 + 196] = mem[s + _22634 + 32]
                                        _19967 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22634]) > mem[_22634]:
                                        mem[mem[_22634] + _22634 + 196] = 0
                                    require ext_code.size(address(_22633))
                                    call address(_22633).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20272, 0, address(_20696), 128, mem[_22634], mem[_22634 + 196 len ceil32(mem[_22634])]
                    else:
                        _20273 = mem[(32 * idx + 1) + _5175 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21926 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20273
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21926))
                                    call address(_21926).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20273, this.address
                                else:
                                    _21928 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21929 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21929 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21929 + 36] = 0
                                    mem[_21929 + 68] = _20273
                                    mem[_21929 + 100] = this.address
                                    mem[_21929 + 132] = 128
                                    mem[_21929 + 164] = mem[_21929]
                                    s = 0
                                    while s < mem[_21929]:
                                        mem[s + _21929 + 196] = mem[s + _21929 + 32]
                                        _19967 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21929]) > mem[_21929]:
                                        mem[mem[_21929] + _21929 + 196] = 0
                                    require ext_code.size(address(_21928))
                                    call address(_21928).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20273, address(this.address), 128, mem[_21929], mem[_21929 + 196 len ceil32(mem[_21929])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20698 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22636 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20273
                                    mem[mem[64] + 68] = address(_20698)
                                    require ext_code.size(address(_22636))
                                    call address(_22636).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20273, address(_20698)
                                else:
                                    _22638 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22639 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22639 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22639 + 36] = 0
                                    mem[_22639 + 68] = _20273
                                    mem[_22639 + 100] = address(_20698)
                                    mem[_22639 + 132] = 128
                                    mem[_22639 + 164] = mem[_22639]
                                    s = 0
                                    while s < mem[_22639]:
                                        mem[s + _22639 + 196] = mem[s + _22639 + 32]
                                        _19967 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22639]) > mem[_22639]:
                                        mem[mem[_22639] + _22639 + 196] = 0
                                    require ext_code.size(address(_22638))
                                    call address(_22638).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20273, address(_20698), 128, mem[_22639], mem[_22639 + 196 len ceil32(mem[_22639])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21932 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20273
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21932))
                                    call address(_21932).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20273, 0, this.address
                                else:
                                    _21934 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21935 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21935 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21935 + 36] = _20273
                                    mem[_21935 + 68] = 0
                                    mem[_21935 + 100] = this.address
                                    mem[_21935 + 132] = 128
                                    mem[_21935 + 164] = mem[_21935]
                                    s = 0
                                    while s < mem[_21935]:
                                        mem[s + _21935 + 196] = mem[s + _21935 + 32]
                                        _19967 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21935]) > mem[_21935]:
                                        mem[mem[_21935] + _21935 + 196] = 0
                                    require ext_code.size(address(_21934))
                                    call address(_21934).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20273, 0, address(this.address), 128, mem[_21935], mem[_21935 + 196 len ceil32(mem[_21935])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20700 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22641 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20273
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_20700)
                                    require ext_code.size(address(_22641))
                                    call address(_22641).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20273, 0, address(_20700)
                                else:
                                    _22643 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22644 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22644 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22644 + 36] = _20273
                                    mem[_22644 + 68] = 0
                                    mem[_22644 + 100] = address(_20700)
                                    mem[_22644 + 132] = 128
                                    mem[_22644 + 164] = mem[_22644]
                                    s = 0
                                    while s < mem[_22644]:
                                        mem[s + _22644 + 196] = mem[s + _22644 + 32]
                                        _19967 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22644]) > mem[_22644]:
                                        mem[mem[_22644] + _22644 + 196] = 0
                                    require ext_code.size(address(_22643))
                                    call address(_22643).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20273, 0, address(_20700), 128, mem[_22644], mem[_22644 + 196 len ceil32(mem[_22644])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19967 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                _20159 = mem[_5175]
                mem[mem[64] + 32] = mem[_5175]
                mem[mem[64] + 64 len 32 * _20159] = mem[_5175 + 32 len 32 * _20159]
                return 32, mem[mem[64] + 32 len (32 * _20159) + 32]
            _15450 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_15450] = return_data.size
            mem[_15450 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            if not return_data.size:
                _19968 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _19968 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_5175]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _20274 = mem[(32 * idx + 1) + _5175 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21939 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20274
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21939))
                                    call address(_21939).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20274, this.address
                                else:
                                    _21941 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21942 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21942 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21942 + 36] = 0
                                    mem[_21942 + 68] = _20274
                                    mem[_21942 + 100] = this.address
                                    mem[_21942 + 132] = 128
                                    mem[_21942 + 164] = mem[_21942]
                                    s = 0
                                    while s < mem[_21942]:
                                        mem[s + _21942 + 196] = mem[s + _21942 + 32]
                                        _19968 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21942]) > mem[_21942]:
                                        mem[mem[_21942] + _21942 + 196] = 0
                                    require ext_code.size(address(_21941))
                                    call address(_21941).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20274, address(this.address), 128, mem[_21942], mem[_21942 + 196 len ceil32(mem[_21942])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20702 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22646 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20274
                                    mem[mem[64] + 68] = address(_20702)
                                    require ext_code.size(address(_22646))
                                    call address(_22646).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20274, address(_20702)
                                else:
                                    _22648 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22649 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22649 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22649 + 36] = 0
                                    mem[_22649 + 68] = _20274
                                    mem[_22649 + 100] = address(_20702)
                                    mem[_22649 + 132] = 128
                                    mem[_22649 + 164] = mem[_22649]
                                    s = 0
                                    while s < mem[_22649]:
                                        mem[s + _22649 + 196] = mem[s + _22649 + 32]
                                        _19968 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22649]) > mem[_22649]:
                                        mem[mem[_22649] + _22649 + 196] = 0
                                    require ext_code.size(address(_22648))
                                    call address(_22648).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20274, address(_20702), 128, mem[_22649], mem[_22649 + 196 len ceil32(mem[_22649])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21945 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20274
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21945))
                                    call address(_21945).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20274, 0, this.address
                                else:
                                    _21947 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21948 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21948 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21948 + 36] = _20274
                                    mem[_21948 + 68] = 0
                                    mem[_21948 + 100] = this.address
                                    mem[_21948 + 132] = 128
                                    mem[_21948 + 164] = mem[_21948]
                                    s = 0
                                    while s < mem[_21948]:
                                        mem[s + _21948 + 196] = mem[s + _21948 + 32]
                                        _19968 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21948]) > mem[_21948]:
                                        mem[mem[_21948] + _21948 + 196] = 0
                                    require ext_code.size(address(_21947))
                                    call address(_21947).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20274, 0, address(this.address), 128, mem[_21948], mem[_21948 + 196 len ceil32(mem[_21948])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20704 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22651 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20274
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_20704)
                                    require ext_code.size(address(_22651))
                                    call address(_22651).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20274, 0, address(_20704)
                                else:
                                    _22653 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22654 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22654 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22654 + 36] = _20274
                                    mem[_22654 + 68] = 0
                                    mem[_22654 + 100] = address(_20704)
                                    mem[_22654 + 132] = 128
                                    mem[_22654 + 164] = mem[_22654]
                                    s = 0
                                    while s < mem[_22654]:
                                        mem[s + _22654 + 196] = mem[s + _22654 + 32]
                                        _19968 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22654]) > mem[_22654]:
                                        mem[mem[_22654] + _22654 + 196] = 0
                                    require ext_code.size(address(_22653))
                                    call address(_22653).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20274, 0, address(_20704), 128, mem[_22654], mem[_22654 + 196 len ceil32(mem[_22654])]
                    else:
                        _20275 = mem[(32 * idx + 1) + _5175 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21951 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20275
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21951))
                                    call address(_21951).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20275, this.address
                                else:
                                    _21953 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21954 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21954 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21954 + 36] = 0
                                    mem[_21954 + 68] = _20275
                                    mem[_21954 + 100] = this.address
                                    mem[_21954 + 132] = 128
                                    mem[_21954 + 164] = mem[_21954]
                                    s = 0
                                    while s < mem[_21954]:
                                        mem[s + _21954 + 196] = mem[s + _21954 + 32]
                                        _19968 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21954]) > mem[_21954]:
                                        mem[mem[_21954] + _21954 + 196] = 0
                                    require ext_code.size(address(_21953))
                                    call address(_21953).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20275, address(this.address), 128, mem[_21954], mem[_21954 + 196 len ceil32(mem[_21954])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20706 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22656 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20275
                                    mem[mem[64] + 68] = address(_20706)
                                    require ext_code.size(address(_22656))
                                    call address(_22656).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20275, address(_20706)
                                else:
                                    _22658 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22659 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22659 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22659 + 36] = 0
                                    mem[_22659 + 68] = _20275
                                    mem[_22659 + 100] = address(_20706)
                                    mem[_22659 + 132] = 128
                                    mem[_22659 + 164] = mem[_22659]
                                    s = 0
                                    while s < mem[_22659]:
                                        mem[s + _22659 + 196] = mem[s + _22659 + 32]
                                        _19968 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22659]) > mem[_22659]:
                                        mem[mem[_22659] + _22659 + 196] = 0
                                    require ext_code.size(address(_22658))
                                    call address(_22658).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20275, address(_20706), 128, mem[_22659], mem[_22659 + 196 len ceil32(mem[_22659])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21957 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20275
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21957))
                                    call address(_21957).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20275, 0, this.address
                                else:
                                    _21959 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21960 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21960 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21960 + 36] = _20275
                                    mem[_21960 + 68] = 0
                                    mem[_21960 + 100] = this.address
                                    mem[_21960 + 132] = 128
                                    mem[_21960 + 164] = mem[_21960]
                                    s = 0
                                    while s < mem[_21960]:
                                        mem[s + _21960 + 196] = mem[s + _21960 + 32]
                                        _19968 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21960]) > mem[_21960]:
                                        mem[mem[_21960] + _21960 + 196] = 0
                                    require ext_code.size(address(_21959))
                                    call address(_21959).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20275, 0, address(this.address), 128, mem[_21960], mem[_21960 + 196 len ceil32(mem[_21960])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20708 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22661 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20275
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_20708)
                                    require ext_code.size(address(_22661))
                                    call address(_22661).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20275, 0, address(_20708)
                                else:
                                    _22663 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22664 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22664 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22664 + 36] = _20275
                                    mem[_22664 + 68] = 0
                                    mem[_22664 + 100] = address(_20708)
                                    mem[_22664 + 132] = 128
                                    mem[_22664 + 164] = mem[_22664]
                                    s = 0
                                    while s < mem[_22664]:
                                        mem[s + _22664 + 196] = mem[s + _22664 + 32]
                                        _19968 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22664]) > mem[_22664]:
                                        mem[mem[_22664] + _22664 + 196] = 0
                                    require ext_code.size(address(_22663))
                                    call address(_22663).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20275, 0, address(_20708), 128, mem[_22664], mem[_22664 + 196 len ceil32(mem[_22664])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19968 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                _20160 = mem[_5175]
                mem[mem[64] + 32] = mem[_5175]
                mem[mem[64] + 64 len 32 * _20160] = mem[_5175 + 32 len 32 * _20160]
                return 32, mem[mem[64] + 32 len (32 * _20160) + 32]
            require return_data.size >= 32
            require mem[_15450 + 32] == bool(mem[_15450 + 32])
            if not mem[_15450 + 32]:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            _19969 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _19969 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_5175]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _20276 = mem[(32 * idx + 1) + _5175 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _21964 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20276
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_21964))
                                call address(_21964).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20276, this.address
                            else:
                                _21966 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _21967 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_21967 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_21967 + 36] = 0
                                mem[_21967 + 68] = _20276
                                mem[_21967 + 100] = this.address
                                mem[_21967 + 132] = 128
                                mem[_21967 + 164] = mem[_21967]
                                s = 0
                                while s < mem[_21967]:
                                    mem[s + _21967 + 196] = mem[s + _21967 + 32]
                                    _19969 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_21967]) > mem[_21967]:
                                    mem[mem[_21967] + _21967 + 196] = 0
                                require ext_code.size(address(_21966))
                                call address(_21966).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20276, address(this.address), 128, mem[_21967], mem[_21967 + 196 len ceil32(mem[_21967])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20710 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22666 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20276
                                mem[mem[64] + 68] = address(_20710)
                                require ext_code.size(address(_22666))
                                call address(_22666).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20276, address(_20710)
                            else:
                                _22668 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22669 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22669 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22669 + 36] = 0
                                mem[_22669 + 68] = _20276
                                mem[_22669 + 100] = address(_20710)
                                mem[_22669 + 132] = 128
                                mem[_22669 + 164] = mem[_22669]
                                s = 0
                                while s < mem[_22669]:
                                    mem[s + _22669 + 196] = mem[s + _22669 + 32]
                                    _19969 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22669]) > mem[_22669]:
                                    mem[mem[_22669] + _22669 + 196] = 0
                                require ext_code.size(address(_22668))
                                call address(_22668).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20276, address(_20710), 128, mem[_22669], mem[_22669 + 196 len ceil32(mem[_22669])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _21970 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20276
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_21970))
                                call address(_21970).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20276, 0, this.address
                            else:
                                _21972 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _21973 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_21973 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_21973 + 36] = _20276
                                mem[_21973 + 68] = 0
                                mem[_21973 + 100] = this.address
                                mem[_21973 + 132] = 128
                                mem[_21973 + 164] = mem[_21973]
                                s = 0
                                while s < mem[_21973]:
                                    mem[s + _21973 + 196] = mem[s + _21973 + 32]
                                    _19969 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_21973]) > mem[_21973]:
                                    mem[mem[_21973] + _21973 + 196] = 0
                                require ext_code.size(address(_21972))
                                call address(_21972).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20276, 0, address(this.address), 128, mem[_21973], mem[_21973 + 196 len ceil32(mem[_21973])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20712 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22671 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20276
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20712)
                                require ext_code.size(address(_22671))
                                call address(_22671).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20276, 0, address(_20712)
                            else:
                                _22673 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22674 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22674 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22674 + 36] = _20276
                                mem[_22674 + 68] = 0
                                mem[_22674 + 100] = address(_20712)
                                mem[_22674 + 132] = 128
                                mem[_22674 + 164] = mem[_22674]
                                s = 0
                                while s < mem[_22674]:
                                    mem[s + _22674 + 196] = mem[s + _22674 + 32]
                                    _19969 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22674]) > mem[_22674]:
                                    mem[mem[_22674] + _22674 + 196] = 0
                                require ext_code.size(address(_22673))
                                call address(_22673).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20276, 0, address(_20712), 128, mem[_22674], mem[_22674 + 196 len ceil32(mem[_22674])]
                else:
                    _20277 = mem[(32 * idx + 1) + _5175 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _21976 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20277
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_21976))
                                call address(_21976).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20277, this.address
                            else:
                                _21978 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _21979 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_21979 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_21979 + 36] = 0
                                mem[_21979 + 68] = _20277
                                mem[_21979 + 100] = this.address
                                mem[_21979 + 132] = 128
                                mem[_21979 + 164] = mem[_21979]
                                s = 0
                                while s < mem[_21979]:
                                    mem[s + _21979 + 196] = mem[s + _21979 + 32]
                                    _19969 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_21979]) > mem[_21979]:
                                    mem[mem[_21979] + _21979 + 196] = 0
                                require ext_code.size(address(_21978))
                                call address(_21978).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20277, address(this.address), 128, mem[_21979], mem[_21979 + 196 len ceil32(mem[_21979])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20714 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22676 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20277
                                mem[mem[64] + 68] = address(_20714)
                                require ext_code.size(address(_22676))
                                call address(_22676).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20277, address(_20714)
                            else:
                                _22678 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22679 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22679 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22679 + 36] = 0
                                mem[_22679 + 68] = _20277
                                mem[_22679 + 100] = address(_20714)
                                mem[_22679 + 132] = 128
                                mem[_22679 + 164] = mem[_22679]
                                s = 0
                                while s < mem[_22679]:
                                    mem[s + _22679 + 196] = mem[s + _22679 + 32]
                                    _19969 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22679]) > mem[_22679]:
                                    mem[mem[_22679] + _22679 + 196] = 0
                                require ext_code.size(address(_22678))
                                call address(_22678).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20277, address(_20714), 128, mem[_22679], mem[_22679 + 196 len ceil32(mem[_22679])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _21982 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20277
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_21982))
                                call address(_21982).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20277, 0, this.address
                            else:
                                _21984 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _21985 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_21985 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_21985 + 36] = _20277
                                mem[_21985 + 68] = 0
                                mem[_21985 + 100] = this.address
                                mem[_21985 + 132] = 128
                                mem[_21985 + 164] = mem[_21985]
                                s = 0
                                while s < mem[_21985]:
                                    mem[s + _21985 + 196] = mem[s + _21985 + 32]
                                    _19969 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_21985]) > mem[_21985]:
                                    mem[mem[_21985] + _21985 + 196] = 0
                                require ext_code.size(address(_21984))
                                call address(_21984).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20277, 0, address(this.address), 128, mem[_21985], mem[_21985 + 196 len ceil32(mem[_21985])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20716 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22681 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20277
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20716)
                                require ext_code.size(address(_22681))
                                call address(_22681).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20277, 0, address(_20716)
                            else:
                                _22683 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22684 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22684 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22684 + 36] = _20277
                                mem[_22684 + 68] = 0
                                mem[_22684 + 100] = address(_20716)
                                mem[_22684 + 132] = 128
                                mem[_22684 + 164] = mem[_22684]
                                s = 0
                                while s < mem[_22684]:
                                    mem[s + _22684 + 196] = mem[s + _22684 + 32]
                                    _19969 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22684]) > mem[_22684]:
                                    mem[mem[_22684] + _22684 + 196] = 0
                                require ext_code.size(address(_22683))
                                call address(_22683).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20277, 0, address(_20716), 128, mem[_22684], mem[_22684 + 196 len ceil32(mem[_22684])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19969 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _20161 = mem[_5175]
            mem[mem[64] + 32] = mem[_5175]
            mem[mem[64] + 64 len 32 * _20161] = mem[_5175 + 32 len 32 * _20161]
            return 32, mem[mem[64] + 32 len (32 * _20161) + 32]
        mem[_10444 + _10384 + 100] = 0
        call address(_10366) with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _10444 + _10384 + -mem[64] + 96]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            if not mem[96]:
                _19970 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _19970 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_5175]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _20278 = mem[(32 * idx + 1) + _5175 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21989 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20278
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21989))
                                    call address(_21989).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20278, this.address
                                else:
                                    _21991 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21992 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21992 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21992 + 36] = 0
                                    mem[_21992 + 68] = _20278
                                    mem[_21992 + 100] = this.address
                                    mem[_21992 + 132] = 128
                                    mem[_21992 + 164] = mem[_21992]
                                    s = 0
                                    while s < mem[_21992]:
                                        mem[s + _21992 + 196] = mem[s + _21992 + 32]
                                        _19970 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21992]) > mem[_21992]:
                                        mem[mem[_21992] + _21992 + 196] = 0
                                    require ext_code.size(address(_21991))
                                    call address(_21991).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20278, address(this.address), 128, mem[_21992], mem[_21992 + 196 len ceil32(mem[_21992])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20718 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22686 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20278
                                    mem[mem[64] + 68] = address(_20718)
                                    require ext_code.size(address(_22686))
                                    call address(_22686).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20278, address(_20718)
                                else:
                                    _22688 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22689 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22689 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22689 + 36] = 0
                                    mem[_22689 + 68] = _20278
                                    mem[_22689 + 100] = address(_20718)
                                    mem[_22689 + 132] = 128
                                    mem[_22689 + 164] = mem[_22689]
                                    s = 0
                                    while s < mem[_22689]:
                                        mem[s + _22689 + 196] = mem[s + _22689 + 32]
                                        _19970 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22689]) > mem[_22689]:
                                        mem[mem[_22689] + _22689 + 196] = 0
                                    require ext_code.size(address(_22688))
                                    call address(_22688).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20278, address(_20718), 128, mem[_22689], mem[_22689 + 196 len ceil32(mem[_22689])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _21995 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20278
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_21995))
                                    call address(_21995).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20278, 0, this.address
                                else:
                                    _21997 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _21998 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_21998 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_21998 + 36] = _20278
                                    mem[_21998 + 68] = 0
                                    mem[_21998 + 100] = this.address
                                    mem[_21998 + 132] = 128
                                    mem[_21998 + 164] = mem[_21998]
                                    s = 0
                                    while s < mem[_21998]:
                                        mem[s + _21998 + 196] = mem[s + _21998 + 32]
                                        _19970 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_21998]) > mem[_21998]:
                                        mem[mem[_21998] + _21998 + 196] = 0
                                    require ext_code.size(address(_21997))
                                    call address(_21997).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20278, 0, address(this.address), 128, mem[_21998], mem[_21998 + 196 len ceil32(mem[_21998])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20720 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22691 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20278
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_20720)
                                    require ext_code.size(address(_22691))
                                    call address(_22691).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20278, 0, address(_20720)
                                else:
                                    _22693 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22694 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22694 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22694 + 36] = _20278
                                    mem[_22694 + 68] = 0
                                    mem[_22694 + 100] = address(_20720)
                                    mem[_22694 + 132] = 128
                                    mem[_22694 + 164] = mem[_22694]
                                    s = 0
                                    while s < mem[_22694]:
                                        mem[s + _22694 + 196] = mem[s + _22694 + 32]
                                        _19970 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22694]) > mem[_22694]:
                                        mem[mem[_22694] + _22694 + 196] = 0
                                    require ext_code.size(address(_22693))
                                    call address(_22693).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20278, 0, address(_20720), 128, mem[_22694], mem[_22694 + 196 len ceil32(mem[_22694])]
                    else:
                        _20279 = mem[(32 * idx + 1) + _5175 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22001 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20279
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_22001))
                                    call address(_22001).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20279, this.address
                                else:
                                    _22003 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22004 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22004 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22004 + 36] = 0
                                    mem[_22004 + 68] = _20279
                                    mem[_22004 + 100] = this.address
                                    mem[_22004 + 132] = 128
                                    mem[_22004 + 164] = mem[_22004]
                                    s = 0
                                    while s < mem[_22004]:
                                        mem[s + _22004 + 196] = mem[s + _22004 + 32]
                                        _19970 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22004]) > mem[_22004]:
                                        mem[mem[_22004] + _22004 + 196] = 0
                                    require ext_code.size(address(_22003))
                                    call address(_22003).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20279, address(this.address), 128, mem[_22004], mem[_22004 + 196 len ceil32(mem[_22004])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20722 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22696 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20279
                                    mem[mem[64] + 68] = address(_20722)
                                    require ext_code.size(address(_22696))
                                    call address(_22696).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20279, address(_20722)
                                else:
                                    _22698 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22699 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22699 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22699 + 36] = 0
                                    mem[_22699 + 68] = _20279
                                    mem[_22699 + 100] = address(_20722)
                                    mem[_22699 + 132] = 128
                                    mem[_22699 + 164] = mem[_22699]
                                    s = 0
                                    while s < mem[_22699]:
                                        mem[s + _22699 + 196] = mem[s + _22699 + 32]
                                        _19970 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22699]) > mem[_22699]:
                                        mem[mem[_22699] + _22699 + 196] = 0
                                    require ext_code.size(address(_22698))
                                    call address(_22698).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20279, address(_20722), 128, mem[_22699], mem[_22699 + 196 len ceil32(mem[_22699])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22007 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20279
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_22007))
                                    call address(_22007).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20279, 0, this.address
                                else:
                                    _22009 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22010 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22010 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22010 + 36] = _20279
                                    mem[_22010 + 68] = 0
                                    mem[_22010 + 100] = this.address
                                    mem[_22010 + 132] = 128
                                    mem[_22010 + 164] = mem[_22010]
                                    s = 0
                                    while s < mem[_22010]:
                                        mem[s + _22010 + 196] = mem[s + _22010 + 32]
                                        _19970 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22010]) > mem[_22010]:
                                        mem[mem[_22010] + _22010 + 196] = 0
                                    require ext_code.size(address(_22009))
                                    call address(_22009).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20279, 0, address(this.address), 128, mem[_22010], mem[_22010 + 196 len ceil32(mem[_22010])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20724 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22701 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20279
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_20724)
                                    require ext_code.size(address(_22701))
                                    call address(_22701).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20279, 0, address(_20724)
                                else:
                                    _22703 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22704 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22704 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22704 + 36] = _20279
                                    mem[_22704 + 68] = 0
                                    mem[_22704 + 100] = address(_20724)
                                    mem[_22704 + 132] = 128
                                    mem[_22704 + 164] = mem[_22704]
                                    s = 0
                                    while s < mem[_22704]:
                                        mem[s + _22704 + 196] = mem[s + _22704 + 32]
                                        _19970 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22704]) > mem[_22704]:
                                        mem[mem[_22704] + _22704 + 196] = 0
                                    require ext_code.size(address(_22703))
                                    call address(_22703).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20279, 0, address(_20724), 128, mem[_22704], mem[_22704 + 196 len ceil32(mem[_22704])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19970 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                _20162 = mem[_5175]
                mem[mem[64] + 32] = mem[_5175]
                mem[mem[64] + 64 len 32 * _20162] = mem[_5175 + 32 len 32 * _20162]
                return 32, mem[mem[64] + 32 len (32 * _20162) + 32]
            require mem[96] >= 32
            require mem[128] == bool(mem[128])
            if not mem[128]:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            _19971 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _19971 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_5175]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _20280 = mem[(32 * idx + 1) + _5175 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22014 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20280
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22014))
                                call address(_22014).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20280, this.address
                            else:
                                _22016 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22017 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22017 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22017 + 36] = 0
                                mem[_22017 + 68] = _20280
                                mem[_22017 + 100] = this.address
                                mem[_22017 + 132] = 128
                                mem[_22017 + 164] = mem[_22017]
                                s = 0
                                while s < mem[_22017]:
                                    mem[s + _22017 + 196] = mem[s + _22017 + 32]
                                    _19971 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22017]) > mem[_22017]:
                                    mem[mem[_22017] + _22017 + 196] = 0
                                require ext_code.size(address(_22016))
                                call address(_22016).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20280, address(this.address), 128, mem[_22017], mem[_22017 + 196 len ceil32(mem[_22017])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20726 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22706 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20280
                                mem[mem[64] + 68] = address(_20726)
                                require ext_code.size(address(_22706))
                                call address(_22706).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20280, address(_20726)
                            else:
                                _22708 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22709 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22709 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22709 + 36] = 0
                                mem[_22709 + 68] = _20280
                                mem[_22709 + 100] = address(_20726)
                                mem[_22709 + 132] = 128
                                mem[_22709 + 164] = mem[_22709]
                                s = 0
                                while s < mem[_22709]:
                                    mem[s + _22709 + 196] = mem[s + _22709 + 32]
                                    _19971 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22709]) > mem[_22709]:
                                    mem[mem[_22709] + _22709 + 196] = 0
                                require ext_code.size(address(_22708))
                                call address(_22708).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20280, address(_20726), 128, mem[_22709], mem[_22709 + 196 len ceil32(mem[_22709])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22020 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20280
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22020))
                                call address(_22020).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20280, 0, this.address
                            else:
                                _22022 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22023 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22023 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22023 + 36] = _20280
                                mem[_22023 + 68] = 0
                                mem[_22023 + 100] = this.address
                                mem[_22023 + 132] = 128
                                mem[_22023 + 164] = mem[_22023]
                                s = 0
                                while s < mem[_22023]:
                                    mem[s + _22023 + 196] = mem[s + _22023 + 32]
                                    _19971 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22023]) > mem[_22023]:
                                    mem[mem[_22023] + _22023 + 196] = 0
                                require ext_code.size(address(_22022))
                                call address(_22022).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20280, 0, address(this.address), 128, mem[_22023], mem[_22023 + 196 len ceil32(mem[_22023])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20728 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22711 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20280
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20728)
                                require ext_code.size(address(_22711))
                                call address(_22711).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20280, 0, address(_20728)
                            else:
                                _22713 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22714 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22714 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22714 + 36] = _20280
                                mem[_22714 + 68] = 0
                                mem[_22714 + 100] = address(_20728)
                                mem[_22714 + 132] = 128
                                mem[_22714 + 164] = mem[_22714]
                                s = 0
                                while s < mem[_22714]:
                                    mem[s + _22714 + 196] = mem[s + _22714 + 32]
                                    _19971 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22714]) > mem[_22714]:
                                    mem[mem[_22714] + _22714 + 196] = 0
                                require ext_code.size(address(_22713))
                                call address(_22713).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20280, 0, address(_20728), 128, mem[_22714], mem[_22714 + 196 len ceil32(mem[_22714])]
                else:
                    _20281 = mem[(32 * idx + 1) + _5175 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22026 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20281
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22026))
                                call address(_22026).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20281, this.address
                            else:
                                _22028 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22029 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22029 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22029 + 36] = 0
                                mem[_22029 + 68] = _20281
                                mem[_22029 + 100] = this.address
                                mem[_22029 + 132] = 128
                                mem[_22029 + 164] = mem[_22029]
                                s = 0
                                while s < mem[_22029]:
                                    mem[s + _22029 + 196] = mem[s + _22029 + 32]
                                    _19971 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22029]) > mem[_22029]:
                                    mem[mem[_22029] + _22029 + 196] = 0
                                require ext_code.size(address(_22028))
                                call address(_22028).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20281, address(this.address), 128, mem[_22029], mem[_22029 + 196 len ceil32(mem[_22029])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20730 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22716 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20281
                                mem[mem[64] + 68] = address(_20730)
                                require ext_code.size(address(_22716))
                                call address(_22716).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20281, address(_20730)
                            else:
                                _22718 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22719 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22719 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22719 + 36] = 0
                                mem[_22719 + 68] = _20281
                                mem[_22719 + 100] = address(_20730)
                                mem[_22719 + 132] = 128
                                mem[_22719 + 164] = mem[_22719]
                                s = 0
                                while s < mem[_22719]:
                                    mem[s + _22719 + 196] = mem[s + _22719 + 32]
                                    _19971 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22719]) > mem[_22719]:
                                    mem[mem[_22719] + _22719 + 196] = 0
                                require ext_code.size(address(_22718))
                                call address(_22718).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20281, address(_20730), 128, mem[_22719], mem[_22719 + 196 len ceil32(mem[_22719])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22032 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20281
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22032))
                                call address(_22032).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20281, 0, this.address
                            else:
                                _22034 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22035 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22035 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22035 + 36] = _20281
                                mem[_22035 + 68] = 0
                                mem[_22035 + 100] = this.address
                                mem[_22035 + 132] = 128
                                mem[_22035 + 164] = mem[_22035]
                                s = 0
                                while s < mem[_22035]:
                                    mem[s + _22035 + 196] = mem[s + _22035 + 32]
                                    _19971 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22035]) > mem[_22035]:
                                    mem[mem[_22035] + _22035 + 196] = 0
                                require ext_code.size(address(_22034))
                                call address(_22034).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20281, 0, address(this.address), 128, mem[_22035], mem[_22035 + 196 len ceil32(mem[_22035])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20732 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22721 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20281
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20732)
                                require ext_code.size(address(_22721))
                                call address(_22721).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20281, 0, address(_20732)
                            else:
                                _22723 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22724 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22724 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22724 + 36] = _20281
                                mem[_22724 + 68] = 0
                                mem[_22724 + 100] = address(_20732)
                                mem[_22724 + 132] = 128
                                mem[_22724 + 164] = mem[_22724]
                                s = 0
                                while s < mem[_22724]:
                                    mem[s + _22724 + 196] = mem[s + _22724 + 32]
                                    _19971 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22724]) > mem[_22724]:
                                    mem[mem[_22724] + _22724 + 196] = 0
                                require ext_code.size(address(_22723))
                                call address(_22723).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20281, 0, address(_20732), 128, mem[_22724], mem[_22724 + 196 len ceil32(mem[_22724])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19971 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _20163 = mem[_5175]
            mem[mem[64] + 32] = mem[_5175]
            mem[mem[64] + 64 len 32 * _20163] = mem[_5175 + 32 len 32 * _20163]
            return 32, mem[mem[64] + 32 len (32 * _20163) + 32]
        _15451 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size) + 1
        mem[_15451] = return_data.size
        mem[_15451 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        if not return_data.size:
            _19972 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _19972 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_5175]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _20282 = mem[(32 * idx + 1) + _5175 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22039 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20282
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22039))
                                call address(_22039).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20282, this.address
                            else:
                                _22041 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22042 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22042 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22042 + 36] = 0
                                mem[_22042 + 68] = _20282
                                mem[_22042 + 100] = this.address
                                mem[_22042 + 132] = 128
                                mem[_22042 + 164] = mem[_22042]
                                s = 0
                                while s < mem[_22042]:
                                    mem[s + _22042 + 196] = mem[s + _22042 + 32]
                                    _19972 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22042]) > mem[_22042]:
                                    mem[mem[_22042] + _22042 + 196] = 0
                                require ext_code.size(address(_22041))
                                call address(_22041).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20282, address(this.address), 128, mem[_22042], mem[_22042 + 196 len ceil32(mem[_22042])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20734 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22726 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20282
                                mem[mem[64] + 68] = address(_20734)
                                require ext_code.size(address(_22726))
                                call address(_22726).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20282, address(_20734)
                            else:
                                _22728 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22729 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22729 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22729 + 36] = 0
                                mem[_22729 + 68] = _20282
                                mem[_22729 + 100] = address(_20734)
                                mem[_22729 + 132] = 128
                                mem[_22729 + 164] = mem[_22729]
                                s = 0
                                while s < mem[_22729]:
                                    mem[s + _22729 + 196] = mem[s + _22729 + 32]
                                    _19972 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22729]) > mem[_22729]:
                                    mem[mem[_22729] + _22729 + 196] = 0
                                require ext_code.size(address(_22728))
                                call address(_22728).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20282, address(_20734), 128, mem[_22729], mem[_22729 + 196 len ceil32(mem[_22729])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22045 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20282
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22045))
                                call address(_22045).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20282, 0, this.address
                            else:
                                _22047 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22048 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22048 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22048 + 36] = _20282
                                mem[_22048 + 68] = 0
                                mem[_22048 + 100] = this.address
                                mem[_22048 + 132] = 128
                                mem[_22048 + 164] = mem[_22048]
                                s = 0
                                while s < mem[_22048]:
                                    mem[s + _22048 + 196] = mem[s + _22048 + 32]
                                    _19972 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22048]) > mem[_22048]:
                                    mem[mem[_22048] + _22048 + 196] = 0
                                require ext_code.size(address(_22047))
                                call address(_22047).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20282, 0, address(this.address), 128, mem[_22048], mem[_22048 + 196 len ceil32(mem[_22048])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20736 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22731 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20282
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20736)
                                require ext_code.size(address(_22731))
                                call address(_22731).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20282, 0, address(_20736)
                            else:
                                _22733 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22734 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22734 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22734 + 36] = _20282
                                mem[_22734 + 68] = 0
                                mem[_22734 + 100] = address(_20736)
                                mem[_22734 + 132] = 128
                                mem[_22734 + 164] = mem[_22734]
                                s = 0
                                while s < mem[_22734]:
                                    mem[s + _22734 + 196] = mem[s + _22734 + 32]
                                    _19972 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22734]) > mem[_22734]:
                                    mem[mem[_22734] + _22734 + 196] = 0
                                require ext_code.size(address(_22733))
                                call address(_22733).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20282, 0, address(_20736), 128, mem[_22734], mem[_22734 + 196 len ceil32(mem[_22734])]
                else:
                    _20283 = mem[(32 * idx + 1) + _5175 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22051 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20283
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22051))
                                call address(_22051).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20283, this.address
                            else:
                                _22053 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22054 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22054 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22054 + 36] = 0
                                mem[_22054 + 68] = _20283
                                mem[_22054 + 100] = this.address
                                mem[_22054 + 132] = 128
                                mem[_22054 + 164] = mem[_22054]
                                s = 0
                                while s < mem[_22054]:
                                    mem[s + _22054 + 196] = mem[s + _22054 + 32]
                                    _19972 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22054]) > mem[_22054]:
                                    mem[mem[_22054] + _22054 + 196] = 0
                                require ext_code.size(address(_22053))
                                call address(_22053).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20283, address(this.address), 128, mem[_22054], mem[_22054 + 196 len ceil32(mem[_22054])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20738 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22736 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20283
                                mem[mem[64] + 68] = address(_20738)
                                require ext_code.size(address(_22736))
                                call address(_22736).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20283, address(_20738)
                            else:
                                _22738 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22739 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22739 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22739 + 36] = 0
                                mem[_22739 + 68] = _20283
                                mem[_22739 + 100] = address(_20738)
                                mem[_22739 + 132] = 128
                                mem[_22739 + 164] = mem[_22739]
                                s = 0
                                while s < mem[_22739]:
                                    mem[s + _22739 + 196] = mem[s + _22739 + 32]
                                    _19972 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22739]) > mem[_22739]:
                                    mem[mem[_22739] + _22739 + 196] = 0
                                require ext_code.size(address(_22738))
                                call address(_22738).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20283, address(_20738), 128, mem[_22739], mem[_22739 + 196 len ceil32(mem[_22739])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22057 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20283
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22057))
                                call address(_22057).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20283, 0, this.address
                            else:
                                _22059 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22060 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22060 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22060 + 36] = _20283
                                mem[_22060 + 68] = 0
                                mem[_22060 + 100] = this.address
                                mem[_22060 + 132] = 128
                                mem[_22060 + 164] = mem[_22060]
                                s = 0
                                while s < mem[_22060]:
                                    mem[s + _22060 + 196] = mem[s + _22060 + 32]
                                    _19972 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22060]) > mem[_22060]:
                                    mem[mem[_22060] + _22060 + 196] = 0
                                require ext_code.size(address(_22059))
                                call address(_22059).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20283, 0, address(this.address), 128, mem[_22060], mem[_22060 + 196 len ceil32(mem[_22060])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20740 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22741 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20283
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20740)
                                require ext_code.size(address(_22741))
                                call address(_22741).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20283, 0, address(_20740)
                            else:
                                _22743 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22744 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22744 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22744 + 36] = _20283
                                mem[_22744 + 68] = 0
                                mem[_22744 + 100] = address(_20740)
                                mem[_22744 + 132] = 128
                                mem[_22744 + 164] = mem[_22744]
                                s = 0
                                while s < mem[_22744]:
                                    mem[s + _22744 + 196] = mem[s + _22744 + 32]
                                    _19972 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22744]) > mem[_22744]:
                                    mem[mem[_22744] + _22744 + 196] = 0
                                require ext_code.size(address(_22743))
                                call address(_22743).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20283, 0, address(_20740), 128, mem[_22744], mem[_22744 + 196 len ceil32(mem[_22744])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19972 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _20164 = mem[_5175]
            mem[mem[64] + 32] = mem[_5175]
            mem[mem[64] + 64 len 32 * _20164] = mem[_5175 + 32 len 32 * _20164]
            return 32, mem[mem[64] + 32 len (32 * _20164) + 32]
        require return_data.size >= 32
        require mem[_15451 + 32] == bool(mem[_15451 + 32])
        if not mem[_15451 + 32]:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        _19973 = mem[ceil32(return_data.size) + 96]
        idx = 0
        while idx < _19973 - 1:
            require idx < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[_5175]
            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                _20284 = mem[(32 * idx + 1) + _5175 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22064 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20284
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22064))
                            call address(_22064).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20284, this.address
                        else:
                            _22066 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22067 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22067 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22067 + 36] = 0
                            mem[_22067 + 68] = _20284
                            mem[_22067 + 100] = this.address
                            mem[_22067 + 132] = 128
                            mem[_22067 + 164] = mem[_22067]
                            s = 0
                            while s < mem[_22067]:
                                mem[s + _22067 + 196] = mem[s + _22067 + 32]
                                _19973 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22067]) > mem[_22067]:
                                mem[mem[_22067] + _22067 + 196] = 0
                            require ext_code.size(address(_22066))
                            call address(_22066).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20284, address(this.address), 128, mem[_22067], mem[_22067 + 196 len ceil32(mem[_22067])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20742 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22746 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20284
                            mem[mem[64] + 68] = address(_20742)
                            require ext_code.size(address(_22746))
                            call address(_22746).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20284, address(_20742)
                        else:
                            _22748 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22749 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22749 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22749 + 36] = 0
                            mem[_22749 + 68] = _20284
                            mem[_22749 + 100] = address(_20742)
                            mem[_22749 + 132] = 128
                            mem[_22749 + 164] = mem[_22749]
                            s = 0
                            while s < mem[_22749]:
                                mem[s + _22749 + 196] = mem[s + _22749 + 32]
                                _19973 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22749]) > mem[_22749]:
                                mem[mem[_22749] + _22749 + 196] = 0
                            require ext_code.size(address(_22748))
                            call address(_22748).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20284, address(_20742), 128, mem[_22749], mem[_22749 + 196 len ceil32(mem[_22749])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22070 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20284
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22070))
                            call address(_22070).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20284, 0, this.address
                        else:
                            _22072 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22073 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22073 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22073 + 36] = _20284
                            mem[_22073 + 68] = 0
                            mem[_22073 + 100] = this.address
                            mem[_22073 + 132] = 128
                            mem[_22073 + 164] = mem[_22073]
                            s = 0
                            while s < mem[_22073]:
                                mem[s + _22073 + 196] = mem[s + _22073 + 32]
                                _19973 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22073]) > mem[_22073]:
                                mem[mem[_22073] + _22073 + 196] = 0
                            require ext_code.size(address(_22072))
                            call address(_22072).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20284, 0, address(this.address), 128, mem[_22073], mem[_22073 + 196 len ceil32(mem[_22073])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20744 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22751 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20284
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_20744)
                            require ext_code.size(address(_22751))
                            call address(_22751).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20284, 0, address(_20744)
                        else:
                            _22753 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22754 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22754 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22754 + 36] = _20284
                            mem[_22754 + 68] = 0
                            mem[_22754 + 100] = address(_20744)
                            mem[_22754 + 132] = 128
                            mem[_22754 + 164] = mem[_22754]
                            s = 0
                            while s < mem[_22754]:
                                mem[s + _22754 + 196] = mem[s + _22754 + 32]
                                _19973 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22754]) > mem[_22754]:
                                mem[mem[_22754] + _22754 + 196] = 0
                            require ext_code.size(address(_22753))
                            call address(_22753).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20284, 0, address(_20744), 128, mem[_22754], mem[_22754 + 196 len ceil32(mem[_22754])]
            else:
                _20285 = mem[(32 * idx + 1) + _5175 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22076 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20285
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22076))
                            call address(_22076).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20285, this.address
                        else:
                            _22078 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22079 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22079 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22079 + 36] = 0
                            mem[_22079 + 68] = _20285
                            mem[_22079 + 100] = this.address
                            mem[_22079 + 132] = 128
                            mem[_22079 + 164] = mem[_22079]
                            s = 0
                            while s < mem[_22079]:
                                mem[s + _22079 + 196] = mem[s + _22079 + 32]
                                _19973 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22079]) > mem[_22079]:
                                mem[mem[_22079] + _22079 + 196] = 0
                            require ext_code.size(address(_22078))
                            call address(_22078).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20285, address(this.address), 128, mem[_22079], mem[_22079 + 196 len ceil32(mem[_22079])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20746 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22756 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20285
                            mem[mem[64] + 68] = address(_20746)
                            require ext_code.size(address(_22756))
                            call address(_22756).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20285, address(_20746)
                        else:
                            _22758 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22759 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22759 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22759 + 36] = 0
                            mem[_22759 + 68] = _20285
                            mem[_22759 + 100] = address(_20746)
                            mem[_22759 + 132] = 128
                            mem[_22759 + 164] = mem[_22759]
                            s = 0
                            while s < mem[_22759]:
                                mem[s + _22759 + 196] = mem[s + _22759 + 32]
                                _19973 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22759]) > mem[_22759]:
                                mem[mem[_22759] + _22759 + 196] = 0
                            require ext_code.size(address(_22758))
                            call address(_22758).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20285, address(_20746), 128, mem[_22759], mem[_22759 + 196 len ceil32(mem[_22759])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22082 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20285
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22082))
                            call address(_22082).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20285, 0, this.address
                        else:
                            _22084 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22085 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22085 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22085 + 36] = _20285
                            mem[_22085 + 68] = 0
                            mem[_22085 + 100] = this.address
                            mem[_22085 + 132] = 128
                            mem[_22085 + 164] = mem[_22085]
                            s = 0
                            while s < mem[_22085]:
                                mem[s + _22085 + 196] = mem[s + _22085 + 32]
                                _19973 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22085]) > mem[_22085]:
                                mem[mem[_22085] + _22085 + 196] = 0
                            require ext_code.size(address(_22084))
                            call address(_22084).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20285, 0, address(this.address), 128, mem[_22085], mem[_22085 + 196 len ceil32(mem[_22085])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20748 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22761 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20285
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_20748)
                            require ext_code.size(address(_22761))
                            call address(_22761).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20285, 0, address(_20748)
                        else:
                            _22763 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22764 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22764 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22764 + 36] = _20285
                            mem[_22764 + 68] = 0
                            mem[_22764 + 100] = address(_20748)
                            mem[_22764 + 132] = 128
                            mem[_22764 + 164] = mem[_22764]
                            s = 0
                            while s < mem[_22764]:
                                mem[s + _22764 + 196] = mem[s + _22764 + 32]
                                _19973 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22764]) > mem[_22764]:
                                mem[mem[_22764] + _22764 + 196] = 0
                            require ext_code.size(address(_22763))
                            call address(_22763).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20285, 0, address(_20748), 128, mem[_22764], mem[_22764 + 196 len ceil32(mem[_22764])]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19973 = mem[ceil32(return_data.size) + 96]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _20165 = mem[_5175]
        mem[mem[64] + 32] = mem[_5175]
        mem[mem[64] + 64 len 32 * _20165] = mem[_5175 + 32 len 32 * _20165]
        return 32, mem[mem[64] + 32 len (32 * _20165) + 32]
    mem[_5175 + 32 len 32 * _5174] = code.data[9720 len 32 * _5174]
    require 0 < mem[_5175]
    mem[_5175 + 32] = ext_call.return_data[0]
    _10317 = mem[ceil32(return_data.size) + 96]
    idx = 0
    while idx < _10317 - 1:
        require idx < mem[ceil32(return_data.size) + 320]
        require idx < mem[ceil32(return_data.size) + 96]
        _10348 = mem[(32 * idx) + ceil32(return_data.size) + 128]
        require idx + 1 < mem[ceil32(return_data.size) + 96]
        _10361 = mem[(32 * idx + 1) + ceil32(return_data.size) + 128]
        require ext_code.size(mem[(32 * idx) + ceil32(return_data.size) + 364 len 20])
        staticcall mem[(32 * idx) + ceil32(return_data.size) + 364 len 20].getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
            _10412 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            require mem[_10412] == mem[_10412 + 18 len 14]
            require mem[_10412 + 32] == mem[_10412 + 50 len 14]
            require mem[_10412 + 64] == mem[_10412 + 92 len 4]
            require idx < mem[_5175]
            require idx < mem[ceil32(return_data.size) + 192]
            if address(_10348) == address(_10348):
                if not mem[(32 * idx) + _5175 + 32]:
                    require mem[_10412 + 18 len 14]
                    if 1000 * mem[_10412 + 18 len 14] / mem[_10412 + 18 len 14] != 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if 1000 * mem[_10412 + 18 len 14] < 1000 * mem[_10412 + 18 len 14]:
                        revert with 0, 'SafeMath#add: OVERFLOW'
                    require 1000 * mem[_10412 + 18 len 14]
                    require idx + 1 < mem[_5175]
                    mem[(32 * idx + 1) + _5175 + 32] = 0 / 1000 * mem[_10412 + 18 len 14]
                else:
                    if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) / mem[(32 * idx) + _5175 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if not (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]):
                        if not mem[_10412 + 18 len 14]:
                            if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                            require idx + 1 < mem[_5175]
                            mem[(32 * idx + 1) + _5175 + 32] = 0 / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                        else:
                            if 1000 * mem[_10412 + 18 len 14] / mem[_10412 + 18 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10412 + 18 len 14]) < 1000 * mem[_10412 + 18 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10412 + 18 len 14])
                            require idx + 1 < mem[_5175]
                            mem[(32 * idx + 1) + _5175 + 32] = 0 / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10412 + 18 len 14])
                    else:
                        if (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10412 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10412 + 50 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) != mem[_10412 + 50 len 14]:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not mem[_10412 + 18 len 14]:
                            if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                            require idx + 1 < mem[_5175]
                            mem[(32 * idx + 1) + _5175 + 32] = (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10412 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10412 + 50 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                        else:
                            if 1000 * mem[_10412 + 18 len 14] / mem[_10412 + 18 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10412 + 18 len 14]) < 1000 * mem[_10412 + 18 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10412 + 18 len 14])
                            require idx + 1 < mem[_5175]
                            mem[(32 * idx + 1) + _5175 + 32] = (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10412 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10412 + 50 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10412 + 18 len 14])
            else:
                if not mem[(32 * idx) + _5175 + 32]:
                    require mem[_10412 + 50 len 14]
                    if 1000 * mem[_10412 + 50 len 14] / mem[_10412 + 50 len 14] != 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if 1000 * mem[_10412 + 50 len 14] < 1000 * mem[_10412 + 50 len 14]:
                        revert with 0, 'SafeMath#add: OVERFLOW'
                    require 1000 * mem[_10412 + 50 len 14]
                    require idx + 1 < mem[_5175]
                    mem[(32 * idx + 1) + _5175 + 32] = 0 / 1000 * mem[_10412 + 50 len 14]
                else:
                    if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) / mem[(32 * idx) + _5175 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if not (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]):
                        if not mem[_10412 + 50 len 14]:
                            if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                            require idx + 1 < mem[_5175]
                            mem[(32 * idx + 1) + _5175 + 32] = 0 / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                        else:
                            if 1000 * mem[_10412 + 50 len 14] / mem[_10412 + 50 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10412 + 50 len 14]) < 1000 * mem[_10412 + 50 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10412 + 50 len 14])
                            require idx + 1 < mem[_5175]
                            mem[(32 * idx + 1) + _5175 + 32] = 0 / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10412 + 50 len 14])
                    else:
                        if (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10412 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10412 + 18 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) != mem[_10412 + 18 len 14]:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not mem[_10412 + 50 len 14]:
                            if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                            require idx + 1 < mem[_5175]
                            mem[(32 * idx + 1) + _5175 + 32] = (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10412 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10412 + 18 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                        else:
                            if 1000 * mem[_10412 + 50 len 14] / mem[_10412 + 50 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10412 + 50 len 14]) < 1000 * mem[_10412 + 50 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10412 + 50 len 14])
                            require idx + 1 < mem[_5175]
                            mem[(32 * idx + 1) + _5175 + 32] = (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10412 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10412 + 18 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10412 + 50 len 14])
        else:
            _10413 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            require mem[_10413] == mem[_10413 + 18 len 14]
            require mem[_10413 + 32] == mem[_10413 + 50 len 14]
            require mem[_10413 + 64] == mem[_10413 + 92 len 4]
            require idx < mem[_5175]
            require idx < mem[ceil32(return_data.size) + 192]
            if address(_10348) == address(_10361):
                if not mem[(32 * idx) + _5175 + 32]:
                    require mem[_10413 + 18 len 14]
                    if 1000 * mem[_10413 + 18 len 14] / mem[_10413 + 18 len 14] != 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if 1000 * mem[_10413 + 18 len 14] < 1000 * mem[_10413 + 18 len 14]:
                        revert with 0, 'SafeMath#add: OVERFLOW'
                    require 1000 * mem[_10413 + 18 len 14]
                    require idx + 1 < mem[_5175]
                    mem[(32 * idx + 1) + _5175 + 32] = 0 / 1000 * mem[_10413 + 18 len 14]
                else:
                    if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) / mem[(32 * idx) + _5175 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if not (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]):
                        if not mem[_10413 + 18 len 14]:
                            if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                            require idx + 1 < mem[_5175]
                            mem[(32 * idx + 1) + _5175 + 32] = 0 / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                        else:
                            if 1000 * mem[_10413 + 18 len 14] / mem[_10413 + 18 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10413 + 18 len 14]) < 1000 * mem[_10413 + 18 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10413 + 18 len 14])
                            require idx + 1 < mem[_5175]
                            mem[(32 * idx + 1) + _5175 + 32] = 0 / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10413 + 18 len 14])
                    else:
                        if (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10413 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10413 + 50 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) != mem[_10413 + 50 len 14]:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not mem[_10413 + 18 len 14]:
                            if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                            require idx + 1 < mem[_5175]
                            mem[(32 * idx + 1) + _5175 + 32] = (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10413 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10413 + 50 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                        else:
                            if 1000 * mem[_10413 + 18 len 14] / mem[_10413 + 18 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10413 + 18 len 14]) < 1000 * mem[_10413 + 18 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10413 + 18 len 14])
                            require idx + 1 < mem[_5175]
                            mem[(32 * idx + 1) + _5175 + 32] = (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10413 + 50 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10413 + 50 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10413 + 18 len 14])
            else:
                if not mem[(32 * idx) + _5175 + 32]:
                    require mem[_10413 + 50 len 14]
                    if 1000 * mem[_10413 + 50 len 14] / mem[_10413 + 50 len 14] != 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if 1000 * mem[_10413 + 50 len 14] < 1000 * mem[_10413 + 50 len 14]:
                        revert with 0, 'SafeMath#add: OVERFLOW'
                    require 1000 * mem[_10413 + 50 len 14]
                    require idx + 1 < mem[_5175]
                    mem[(32 * idx + 1) + _5175 + 32] = 0 / 1000 * mem[_10413 + 50 len 14]
                else:
                    if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) / mem[(32 * idx) + _5175 + 32] != -mem[(32 * idx) + ceil32(return_data.size) + 224] + 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if not (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]):
                        if not mem[_10413 + 50 len 14]:
                            if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                            require idx + 1 < mem[_5175]
                            mem[(32 * idx + 1) + _5175 + 32] = 0 / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                        else:
                            if 1000 * mem[_10413 + 50 len 14] / mem[_10413 + 50 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10413 + 50 len 14]) < 1000 * mem[_10413 + 50 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10413 + 50 len 14])
                            require idx + 1 < mem[_5175]
                            mem[(32 * idx + 1) + _5175 + 32] = 0 / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10413 + 50 len 14])
                    else:
                        if (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10413 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10413 + 18 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) != mem[_10413 + 18 len 14]:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not mem[_10413 + 50 len 14]:
                            if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                            require idx + 1 < mem[_5175]
                            mem[(32 * idx + 1) + _5175 + 32] = (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10413 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10413 + 18 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32])
                        else:
                            if 1000 * mem[_10413 + 50 len 14] / mem[_10413 + 50 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10413 + 50 len 14]) < 1000 * mem[_10413 + 50 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10413 + 50 len 14])
                            require idx + 1 < mem[_5175]
                            mem[(32 * idx + 1) + _5175 + 32] = (1000 * mem[(32 * idx) + _5175 + 32] * mem[_10413 + 18 len 14]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32] * mem[_10413 + 18 len 14]) / (1000 * mem[(32 * idx) + _5175 + 32]) - (mem[(32 * idx) + ceil32(return_data.size) + 224] * mem[(32 * idx) + _5175 + 32]) + (1000 * mem[_10413 + 50 len 14])
        _10317 = mem[ceil32(return_data.size) + 96]
        idx = idx + 1
        continue 
    require mem[_5175] - 1 < mem[_5175]
    if mem[(32 * mem[_5175] - 1) + _5175 + 32] < arg6:
        revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT'
    require 0 < mem[ceil32(return_data.size) + 96]
    _10368 = mem[ceil32(return_data.size) + 128]
    require 0 < mem[ceil32(return_data.size) + 320]
    require 0 < mem[_5175]
    _10381 = mem[_5175 + 32]
    _10385 = mem[64]
    mem[mem[64] + 36] = mem[ceil32(return_data.size) + 364 len 20]
    mem[mem[64] + 68] = _10381
    _10431 = mem[64]
    mem[mem[64]] = 68
    mem[64] = mem[64] + 100
    mem[_10431 + 32 len 4] = unknown_0xa9059cbb(?????)
    _10445 = mem[_10431]
    mem[_10385 + 100 len ceil32(mem[_10431])] = mem[_10431 + 32 len ceil32(mem[_10431])]
    if ceil32(_10445) <= _10445:
        call address(_10368) with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _10445 + _10385 + -mem[64] + 96]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            if not mem[96]:
                _19974 = mem[ceil32(return_data.size) + 96]
                idx = 0
                while idx < _19974 - 1:
                    require idx < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[ceil32(return_data.size) + 96]
                    require idx + 1 < mem[_5175]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        _20286 = mem[(32 * idx + 1) + _5175 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22089 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20286
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_22089))
                                    call address(_22089).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20286, this.address
                                else:
                                    _22091 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22092 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22092 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22092 + 36] = 0
                                    mem[_22092 + 68] = _20286
                                    mem[_22092 + 100] = this.address
                                    mem[_22092 + 132] = 128
                                    mem[_22092 + 164] = mem[_22092]
                                    s = 0
                                    while s < mem[_22092]:
                                        mem[s + _22092 + 196] = mem[s + _22092 + 32]
                                        _19974 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22092]) > mem[_22092]:
                                        mem[mem[_22092] + _22092 + 196] = 0
                                    require ext_code.size(address(_22091))
                                    call address(_22091).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20286, address(this.address), 128, mem[_22092], mem[_22092 + 196 len ceil32(mem[_22092])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20750 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22766 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20286
                                    mem[mem[64] + 68] = address(_20750)
                                    require ext_code.size(address(_22766))
                                    call address(_22766).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20286, address(_20750)
                                else:
                                    _22768 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22769 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22769 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22769 + 36] = 0
                                    mem[_22769 + 68] = _20286
                                    mem[_22769 + 100] = address(_20750)
                                    mem[_22769 + 132] = 128
                                    mem[_22769 + 164] = mem[_22769]
                                    s = 0
                                    while s < mem[_22769]:
                                        mem[s + _22769 + 196] = mem[s + _22769 + 32]
                                        _19974 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22769]) > mem[_22769]:
                                        mem[mem[_22769] + _22769 + 196] = 0
                                    require ext_code.size(address(_22768))
                                    call address(_22768).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20286, address(_20750), 128, mem[_22769], mem[_22769 + 196 len ceil32(mem[_22769])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22095 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20286
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_22095))
                                    call address(_22095).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20286, 0, this.address
                                else:
                                    _22097 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22098 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22098 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22098 + 36] = _20286
                                    mem[_22098 + 68] = 0
                                    mem[_22098 + 100] = this.address
                                    mem[_22098 + 132] = 128
                                    mem[_22098 + 164] = mem[_22098]
                                    s = 0
                                    while s < mem[_22098]:
                                        mem[s + _22098 + 196] = mem[s + _22098 + 32]
                                        _19974 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22098]) > mem[_22098]:
                                        mem[mem[_22098] + _22098 + 196] = 0
                                    require ext_code.size(address(_22097))
                                    call address(_22097).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20286, 0, address(this.address), 128, mem[_22098], mem[_22098 + 196 len ceil32(mem[_22098])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20752 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22771 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20286
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_20752)
                                    require ext_code.size(address(_22771))
                                    call address(_22771).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20286, 0, address(_20752)
                                else:
                                    _22773 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22774 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22774 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22774 + 36] = _20286
                                    mem[_22774 + 68] = 0
                                    mem[_22774 + 100] = address(_20752)
                                    mem[_22774 + 132] = 128
                                    mem[_22774 + 164] = mem[_22774]
                                    s = 0
                                    while s < mem[_22774]:
                                        mem[s + _22774 + 196] = mem[s + _22774 + 32]
                                        _19974 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22774]) > mem[_22774]:
                                        mem[mem[_22774] + _22774 + 196] = 0
                                    require ext_code.size(address(_22773))
                                    call address(_22773).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20286, 0, address(_20752), 128, mem[_22774], mem[_22774 + 196 len ceil32(mem[_22774])]
                    else:
                        _20287 = mem[(32 * idx + 1) + _5175 + 32]
                        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22101 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20287
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_22101))
                                    call address(_22101).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20287, this.address
                                else:
                                    _22103 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22104 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22104 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22104 + 36] = 0
                                    mem[_22104 + 68] = _20287
                                    mem[_22104 + 100] = this.address
                                    mem[_22104 + 132] = 128
                                    mem[_22104 + 164] = mem[_22104]
                                    s = 0
                                    while s < mem[_22104]:
                                        mem[s + _22104 + 196] = mem[s + _22104 + 32]
                                        _19974 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22104]) > mem[_22104]:
                                        mem[mem[_22104] + _22104 + 196] = 0
                                    require ext_code.size(address(_22103))
                                    call address(_22103).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20287, address(this.address), 128, mem[_22104], mem[_22104 + 196 len ceil32(mem[_22104])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20754 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22776 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _20287
                                    mem[mem[64] + 68] = address(_20754)
                                    require ext_code.size(address(_22776))
                                    call address(_22776).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _20287, address(_20754)
                                else:
                                    _22778 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22779 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22779 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22779 + 36] = 0
                                    mem[_22779 + 68] = _20287
                                    mem[_22779 + 100] = address(_20754)
                                    mem[_22779 + 132] = 128
                                    mem[_22779 + 164] = mem[_22779]
                                    s = 0
                                    while s < mem[_22779]:
                                        mem[s + _22779 + 196] = mem[s + _22779 + 32]
                                        _19974 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22779]) > mem[_22779]:
                                        mem[mem[_22779] + _22779 + 196] = 0
                                    require ext_code.size(address(_22778))
                                    call address(_22778).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _20287, address(_20754), 128, mem[_22779], mem[_22779 + 196 len ceil32(mem[_22779])]
                        else:
                            if idx >= mem[ceil32(return_data.size) + 96] - 2:
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22107 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20287
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_22107))
                                    call address(_22107).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20287, 0, this.address
                                else:
                                    _22109 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22110 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22110 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22110 + 36] = _20287
                                    mem[_22110 + 68] = 0
                                    mem[_22110 + 100] = this.address
                                    mem[_22110 + 132] = 128
                                    mem[_22110 + 164] = mem[_22110]
                                    s = 0
                                    while s < mem[_22110]:
                                        mem[s + _22110 + 196] = mem[s + _22110 + 32]
                                        _19974 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22110]) > mem[_22110]:
                                        mem[mem[_22110] + _22110 + 196] = 0
                                    require ext_code.size(address(_22109))
                                    call address(_22109).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20287, 0, address(this.address), 128, mem[_22110], mem[_22110 + 196 len ceil32(mem[_22110])]
                            else:
                                require idx + 1 < mem[ceil32(return_data.size) + 320]
                                _20756 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                                require idx < mem[ceil32(return_data.size) + 256]
                                require idx < mem[ceil32(return_data.size) + 320]
                                if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                    _22781 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _20287
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_20756)
                                    require ext_code.size(address(_22781))
                                    call address(_22781).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _20287, 0, address(_20756)
                                else:
                                    _22783 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                    _22784 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_22784 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_22784 + 36] = _20287
                                    mem[_22784 + 68] = 0
                                    mem[_22784 + 100] = address(_20756)
                                    mem[_22784 + 132] = 128
                                    mem[_22784 + 164] = mem[_22784]
                                    s = 0
                                    while s < mem[_22784]:
                                        mem[s + _22784 + 196] = mem[s + _22784 + 32]
                                        _19974 = mem[ceil32(return_data.size) + 96]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_22784]) > mem[_22784]:
                                        mem[mem[_22784] + _22784 + 196] = 0
                                    require ext_code.size(address(_22783))
                                    call address(_22783).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _20287, 0, address(_20756), 128, mem[_22784], mem[_22784 + 196 len ceil32(mem[_22784])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19974 = mem[ceil32(return_data.size) + 96]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                _20166 = mem[_5175]
                mem[mem[64] + 32] = mem[_5175]
                mem[mem[64] + 64 len 32 * _20166] = mem[_5175 + 32 len 32 * _20166]
                return 32, mem[mem[64] + 32 len (32 * _20166) + 32]
            require mem[96] >= 32
            require mem[128] == bool(mem[128])
            if not mem[128]:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            _19975 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _19975 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_5175]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _20288 = mem[(32 * idx + 1) + _5175 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22114 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20288
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22114))
                                call address(_22114).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20288, this.address
                            else:
                                _22116 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22117 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22117 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22117 + 36] = 0
                                mem[_22117 + 68] = _20288
                                mem[_22117 + 100] = this.address
                                mem[_22117 + 132] = 128
                                mem[_22117 + 164] = mem[_22117]
                                s = 0
                                while s < mem[_22117]:
                                    mem[s + _22117 + 196] = mem[s + _22117 + 32]
                                    _19975 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22117]) > mem[_22117]:
                                    mem[mem[_22117] + _22117 + 196] = 0
                                require ext_code.size(address(_22116))
                                call address(_22116).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20288, address(this.address), 128, mem[_22117], mem[_22117 + 196 len ceil32(mem[_22117])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20758 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22786 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20288
                                mem[mem[64] + 68] = address(_20758)
                                require ext_code.size(address(_22786))
                                call address(_22786).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20288, address(_20758)
                            else:
                                _22788 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22789 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22789 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22789 + 36] = 0
                                mem[_22789 + 68] = _20288
                                mem[_22789 + 100] = address(_20758)
                                mem[_22789 + 132] = 128
                                mem[_22789 + 164] = mem[_22789]
                                s = 0
                                while s < mem[_22789]:
                                    mem[s + _22789 + 196] = mem[s + _22789 + 32]
                                    _19975 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22789]) > mem[_22789]:
                                    mem[mem[_22789] + _22789 + 196] = 0
                                require ext_code.size(address(_22788))
                                call address(_22788).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20288, address(_20758), 128, mem[_22789], mem[_22789 + 196 len ceil32(mem[_22789])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22120 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20288
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22120))
                                call address(_22120).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20288, 0, this.address
                            else:
                                _22122 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22123 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22123 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22123 + 36] = _20288
                                mem[_22123 + 68] = 0
                                mem[_22123 + 100] = this.address
                                mem[_22123 + 132] = 128
                                mem[_22123 + 164] = mem[_22123]
                                s = 0
                                while s < mem[_22123]:
                                    mem[s + _22123 + 196] = mem[s + _22123 + 32]
                                    _19975 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22123]) > mem[_22123]:
                                    mem[mem[_22123] + _22123 + 196] = 0
                                require ext_code.size(address(_22122))
                                call address(_22122).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20288, 0, address(this.address), 128, mem[_22123], mem[_22123 + 196 len ceil32(mem[_22123])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20760 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22791 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20288
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20760)
                                require ext_code.size(address(_22791))
                                call address(_22791).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20288, 0, address(_20760)
                            else:
                                _22793 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22794 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22794 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22794 + 36] = _20288
                                mem[_22794 + 68] = 0
                                mem[_22794 + 100] = address(_20760)
                                mem[_22794 + 132] = 128
                                mem[_22794 + 164] = mem[_22794]
                                s = 0
                                while s < mem[_22794]:
                                    mem[s + _22794 + 196] = mem[s + _22794 + 32]
                                    _19975 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22794]) > mem[_22794]:
                                    mem[mem[_22794] + _22794 + 196] = 0
                                require ext_code.size(address(_22793))
                                call address(_22793).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20288, 0, address(_20760), 128, mem[_22794], mem[_22794 + 196 len ceil32(mem[_22794])]
                else:
                    _20289 = mem[(32 * idx + 1) + _5175 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22126 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20289
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22126))
                                call address(_22126).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20289, this.address
                            else:
                                _22128 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22129 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22129 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22129 + 36] = 0
                                mem[_22129 + 68] = _20289
                                mem[_22129 + 100] = this.address
                                mem[_22129 + 132] = 128
                                mem[_22129 + 164] = mem[_22129]
                                s = 0
                                while s < mem[_22129]:
                                    mem[s + _22129 + 196] = mem[s + _22129 + 32]
                                    _19975 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22129]) > mem[_22129]:
                                    mem[mem[_22129] + _22129 + 196] = 0
                                require ext_code.size(address(_22128))
                                call address(_22128).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20289, address(this.address), 128, mem[_22129], mem[_22129 + 196 len ceil32(mem[_22129])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20762 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22796 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20289
                                mem[mem[64] + 68] = address(_20762)
                                require ext_code.size(address(_22796))
                                call address(_22796).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20289, address(_20762)
                            else:
                                _22798 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22799 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22799 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22799 + 36] = 0
                                mem[_22799 + 68] = _20289
                                mem[_22799 + 100] = address(_20762)
                                mem[_22799 + 132] = 128
                                mem[_22799 + 164] = mem[_22799]
                                s = 0
                                while s < mem[_22799]:
                                    mem[s + _22799 + 196] = mem[s + _22799 + 32]
                                    _19975 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22799]) > mem[_22799]:
                                    mem[mem[_22799] + _22799 + 196] = 0
                                require ext_code.size(address(_22798))
                                call address(_22798).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20289, address(_20762), 128, mem[_22799], mem[_22799 + 196 len ceil32(mem[_22799])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22132 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20289
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22132))
                                call address(_22132).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20289, 0, this.address
                            else:
                                _22134 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22135 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22135 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22135 + 36] = _20289
                                mem[_22135 + 68] = 0
                                mem[_22135 + 100] = this.address
                                mem[_22135 + 132] = 128
                                mem[_22135 + 164] = mem[_22135]
                                s = 0
                                while s < mem[_22135]:
                                    mem[s + _22135 + 196] = mem[s + _22135 + 32]
                                    _19975 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22135]) > mem[_22135]:
                                    mem[mem[_22135] + _22135 + 196] = 0
                                require ext_code.size(address(_22134))
                                call address(_22134).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20289, 0, address(this.address), 128, mem[_22135], mem[_22135 + 196 len ceil32(mem[_22135])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20764 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22801 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20289
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20764)
                                require ext_code.size(address(_22801))
                                call address(_22801).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20289, 0, address(_20764)
                            else:
                                _22803 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22804 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22804 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22804 + 36] = _20289
                                mem[_22804 + 68] = 0
                                mem[_22804 + 100] = address(_20764)
                                mem[_22804 + 132] = 128
                                mem[_22804 + 164] = mem[_22804]
                                s = 0
                                while s < mem[_22804]:
                                    mem[s + _22804 + 196] = mem[s + _22804 + 32]
                                    _19975 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22804]) > mem[_22804]:
                                    mem[mem[_22804] + _22804 + 196] = 0
                                require ext_code.size(address(_22803))
                                call address(_22803).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20289, 0, address(_20764), 128, mem[_22804], mem[_22804 + 196 len ceil32(mem[_22804])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19975 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _20167 = mem[_5175]
            mem[mem[64] + 32] = mem[_5175]
            mem[mem[64] + 64 len 32 * _20167] = mem[_5175 + 32 len 32 * _20167]
            return 32, mem[mem[64] + 32 len (32 * _20167) + 32]
        _15452 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size) + 1
        mem[_15452] = return_data.size
        mem[_15452 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        if not return_data.size:
            _19976 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _19976 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_5175]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _20290 = mem[(32 * idx + 1) + _5175 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22139 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20290
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22139))
                                call address(_22139).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20290, this.address
                            else:
                                _22141 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22142 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22142 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22142 + 36] = 0
                                mem[_22142 + 68] = _20290
                                mem[_22142 + 100] = this.address
                                mem[_22142 + 132] = 128
                                mem[_22142 + 164] = mem[_22142]
                                s = 0
                                while s < mem[_22142]:
                                    mem[s + _22142 + 196] = mem[s + _22142 + 32]
                                    _19976 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22142]) > mem[_22142]:
                                    mem[mem[_22142] + _22142 + 196] = 0
                                require ext_code.size(address(_22141))
                                call address(_22141).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20290, address(this.address), 128, mem[_22142], mem[_22142 + 196 len ceil32(mem[_22142])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20766 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22806 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20290
                                mem[mem[64] + 68] = address(_20766)
                                require ext_code.size(address(_22806))
                                call address(_22806).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20290, address(_20766)
                            else:
                                _22808 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22809 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22809 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22809 + 36] = 0
                                mem[_22809 + 68] = _20290
                                mem[_22809 + 100] = address(_20766)
                                mem[_22809 + 132] = 128
                                mem[_22809 + 164] = mem[_22809]
                                s = 0
                                while s < mem[_22809]:
                                    mem[s + _22809 + 196] = mem[s + _22809 + 32]
                                    _19976 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22809]) > mem[_22809]:
                                    mem[mem[_22809] + _22809 + 196] = 0
                                require ext_code.size(address(_22808))
                                call address(_22808).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20290, address(_20766), 128, mem[_22809], mem[_22809 + 196 len ceil32(mem[_22809])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22145 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20290
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22145))
                                call address(_22145).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20290, 0, this.address
                            else:
                                _22147 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22148 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22148 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22148 + 36] = _20290
                                mem[_22148 + 68] = 0
                                mem[_22148 + 100] = this.address
                                mem[_22148 + 132] = 128
                                mem[_22148 + 164] = mem[_22148]
                                s = 0
                                while s < mem[_22148]:
                                    mem[s + _22148 + 196] = mem[s + _22148 + 32]
                                    _19976 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22148]) > mem[_22148]:
                                    mem[mem[_22148] + _22148 + 196] = 0
                                require ext_code.size(address(_22147))
                                call address(_22147).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20290, 0, address(this.address), 128, mem[_22148], mem[_22148 + 196 len ceil32(mem[_22148])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20768 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22811 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20290
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20768)
                                require ext_code.size(address(_22811))
                                call address(_22811).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20290, 0, address(_20768)
                            else:
                                _22813 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22814 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22814 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22814 + 36] = _20290
                                mem[_22814 + 68] = 0
                                mem[_22814 + 100] = address(_20768)
                                mem[_22814 + 132] = 128
                                mem[_22814 + 164] = mem[_22814]
                                s = 0
                                while s < mem[_22814]:
                                    mem[s + _22814 + 196] = mem[s + _22814 + 32]
                                    _19976 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22814]) > mem[_22814]:
                                    mem[mem[_22814] + _22814 + 196] = 0
                                require ext_code.size(address(_22813))
                                call address(_22813).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20290, 0, address(_20768), 128, mem[_22814], mem[_22814 + 196 len ceil32(mem[_22814])]
                else:
                    _20291 = mem[(32 * idx + 1) + _5175 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22151 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20291
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22151))
                                call address(_22151).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20291, this.address
                            else:
                                _22153 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22154 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22154 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22154 + 36] = 0
                                mem[_22154 + 68] = _20291
                                mem[_22154 + 100] = this.address
                                mem[_22154 + 132] = 128
                                mem[_22154 + 164] = mem[_22154]
                                s = 0
                                while s < mem[_22154]:
                                    mem[s + _22154 + 196] = mem[s + _22154 + 32]
                                    _19976 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22154]) > mem[_22154]:
                                    mem[mem[_22154] + _22154 + 196] = 0
                                require ext_code.size(address(_22153))
                                call address(_22153).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20291, address(this.address), 128, mem[_22154], mem[_22154 + 196 len ceil32(mem[_22154])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20770 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22816 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20291
                                mem[mem[64] + 68] = address(_20770)
                                require ext_code.size(address(_22816))
                                call address(_22816).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20291, address(_20770)
                            else:
                                _22818 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22819 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22819 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22819 + 36] = 0
                                mem[_22819 + 68] = _20291
                                mem[_22819 + 100] = address(_20770)
                                mem[_22819 + 132] = 128
                                mem[_22819 + 164] = mem[_22819]
                                s = 0
                                while s < mem[_22819]:
                                    mem[s + _22819 + 196] = mem[s + _22819 + 32]
                                    _19976 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22819]) > mem[_22819]:
                                    mem[mem[_22819] + _22819 + 196] = 0
                                require ext_code.size(address(_22818))
                                call address(_22818).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20291, address(_20770), 128, mem[_22819], mem[_22819 + 196 len ceil32(mem[_22819])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22157 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20291
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22157))
                                call address(_22157).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20291, 0, this.address
                            else:
                                _22159 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22160 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22160 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22160 + 36] = _20291
                                mem[_22160 + 68] = 0
                                mem[_22160 + 100] = this.address
                                mem[_22160 + 132] = 128
                                mem[_22160 + 164] = mem[_22160]
                                s = 0
                                while s < mem[_22160]:
                                    mem[s + _22160 + 196] = mem[s + _22160 + 32]
                                    _19976 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22160]) > mem[_22160]:
                                    mem[mem[_22160] + _22160 + 196] = 0
                                require ext_code.size(address(_22159))
                                call address(_22159).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20291, 0, address(this.address), 128, mem[_22160], mem[_22160 + 196 len ceil32(mem[_22160])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20772 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22821 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20291
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20772)
                                require ext_code.size(address(_22821))
                                call address(_22821).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20291, 0, address(_20772)
                            else:
                                _22823 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22824 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22824 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22824 + 36] = _20291
                                mem[_22824 + 68] = 0
                                mem[_22824 + 100] = address(_20772)
                                mem[_22824 + 132] = 128
                                mem[_22824 + 164] = mem[_22824]
                                s = 0
                                while s < mem[_22824]:
                                    mem[s + _22824 + 196] = mem[s + _22824 + 32]
                                    _19976 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22824]) > mem[_22824]:
                                    mem[mem[_22824] + _22824 + 196] = 0
                                require ext_code.size(address(_22823))
                                call address(_22823).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20291, 0, address(_20772), 128, mem[_22824], mem[_22824 + 196 len ceil32(mem[_22824])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19976 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _20168 = mem[_5175]
            mem[mem[64] + 32] = mem[_5175]
            mem[mem[64] + 64 len 32 * _20168] = mem[_5175 + 32 len 32 * _20168]
            return 32, mem[mem[64] + 32 len (32 * _20168) + 32]
        require return_data.size >= 32
        require mem[_15452 + 32] == bool(mem[_15452 + 32])
        if not mem[_15452 + 32]:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        _19977 = mem[ceil32(return_data.size) + 96]
        idx = 0
        while idx < _19977 - 1:
            require idx < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[_5175]
            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                _20292 = mem[(32 * idx + 1) + _5175 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22164 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20292
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22164))
                            call address(_22164).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20292, this.address
                        else:
                            _22166 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22167 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22167 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22167 + 36] = 0
                            mem[_22167 + 68] = _20292
                            mem[_22167 + 100] = this.address
                            mem[_22167 + 132] = 128
                            mem[_22167 + 164] = mem[_22167]
                            s = 0
                            while s < mem[_22167]:
                                mem[s + _22167 + 196] = mem[s + _22167 + 32]
                                _19977 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22167]) > mem[_22167]:
                                mem[mem[_22167] + _22167 + 196] = 0
                            require ext_code.size(address(_22166))
                            call address(_22166).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20292, address(this.address), 128, mem[_22167], mem[_22167 + 196 len ceil32(mem[_22167])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20774 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22826 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20292
                            mem[mem[64] + 68] = address(_20774)
                            require ext_code.size(address(_22826))
                            call address(_22826).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20292, address(_20774)
                        else:
                            _22828 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22829 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22829 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22829 + 36] = 0
                            mem[_22829 + 68] = _20292
                            mem[_22829 + 100] = address(_20774)
                            mem[_22829 + 132] = 128
                            mem[_22829 + 164] = mem[_22829]
                            s = 0
                            while s < mem[_22829]:
                                mem[s + _22829 + 196] = mem[s + _22829 + 32]
                                _19977 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22829]) > mem[_22829]:
                                mem[mem[_22829] + _22829 + 196] = 0
                            require ext_code.size(address(_22828))
                            call address(_22828).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20292, address(_20774), 128, mem[_22829], mem[_22829 + 196 len ceil32(mem[_22829])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22170 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20292
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22170))
                            call address(_22170).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20292, 0, this.address
                        else:
                            _22172 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22173 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22173 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22173 + 36] = _20292
                            mem[_22173 + 68] = 0
                            mem[_22173 + 100] = this.address
                            mem[_22173 + 132] = 128
                            mem[_22173 + 164] = mem[_22173]
                            s = 0
                            while s < mem[_22173]:
                                mem[s + _22173 + 196] = mem[s + _22173 + 32]
                                _19977 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22173]) > mem[_22173]:
                                mem[mem[_22173] + _22173 + 196] = 0
                            require ext_code.size(address(_22172))
                            call address(_22172).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20292, 0, address(this.address), 128, mem[_22173], mem[_22173 + 196 len ceil32(mem[_22173])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20776 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22831 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20292
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_20776)
                            require ext_code.size(address(_22831))
                            call address(_22831).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20292, 0, address(_20776)
                        else:
                            _22833 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22834 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22834 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22834 + 36] = _20292
                            mem[_22834 + 68] = 0
                            mem[_22834 + 100] = address(_20776)
                            mem[_22834 + 132] = 128
                            mem[_22834 + 164] = mem[_22834]
                            s = 0
                            while s < mem[_22834]:
                                mem[s + _22834 + 196] = mem[s + _22834 + 32]
                                _19977 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22834]) > mem[_22834]:
                                mem[mem[_22834] + _22834 + 196] = 0
                            require ext_code.size(address(_22833))
                            call address(_22833).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20292, 0, address(_20776), 128, mem[_22834], mem[_22834 + 196 len ceil32(mem[_22834])]
            else:
                _20293 = mem[(32 * idx + 1) + _5175 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22176 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20293
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22176))
                            call address(_22176).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20293, this.address
                        else:
                            _22178 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22179 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22179 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22179 + 36] = 0
                            mem[_22179 + 68] = _20293
                            mem[_22179 + 100] = this.address
                            mem[_22179 + 132] = 128
                            mem[_22179 + 164] = mem[_22179]
                            s = 0
                            while s < mem[_22179]:
                                mem[s + _22179 + 196] = mem[s + _22179 + 32]
                                _19977 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22179]) > mem[_22179]:
                                mem[mem[_22179] + _22179 + 196] = 0
                            require ext_code.size(address(_22178))
                            call address(_22178).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20293, address(this.address), 128, mem[_22179], mem[_22179 + 196 len ceil32(mem[_22179])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20778 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22836 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20293
                            mem[mem[64] + 68] = address(_20778)
                            require ext_code.size(address(_22836))
                            call address(_22836).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20293, address(_20778)
                        else:
                            _22838 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22839 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22839 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22839 + 36] = 0
                            mem[_22839 + 68] = _20293
                            mem[_22839 + 100] = address(_20778)
                            mem[_22839 + 132] = 128
                            mem[_22839 + 164] = mem[_22839]
                            s = 0
                            while s < mem[_22839]:
                                mem[s + _22839 + 196] = mem[s + _22839 + 32]
                                _19977 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22839]) > mem[_22839]:
                                mem[mem[_22839] + _22839 + 196] = 0
                            require ext_code.size(address(_22838))
                            call address(_22838).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20293, address(_20778), 128, mem[_22839], mem[_22839 + 196 len ceil32(mem[_22839])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22182 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20293
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22182))
                            call address(_22182).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20293, 0, this.address
                        else:
                            _22184 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22185 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22185 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22185 + 36] = _20293
                            mem[_22185 + 68] = 0
                            mem[_22185 + 100] = this.address
                            mem[_22185 + 132] = 128
                            mem[_22185 + 164] = mem[_22185]
                            s = 0
                            while s < mem[_22185]:
                                mem[s + _22185 + 196] = mem[s + _22185 + 32]
                                _19977 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22185]) > mem[_22185]:
                                mem[mem[_22185] + _22185 + 196] = 0
                            require ext_code.size(address(_22184))
                            call address(_22184).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20293, 0, address(this.address), 128, mem[_22185], mem[_22185 + 196 len ceil32(mem[_22185])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20780 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22841 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20293
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_20780)
                            require ext_code.size(address(_22841))
                            call address(_22841).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20293, 0, address(_20780)
                        else:
                            _22843 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22844 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22844 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22844 + 36] = _20293
                            mem[_22844 + 68] = 0
                            mem[_22844 + 100] = address(_20780)
                            mem[_22844 + 132] = 128
                            mem[_22844 + 164] = mem[_22844]
                            s = 0
                            while s < mem[_22844]:
                                mem[s + _22844 + 196] = mem[s + _22844 + 32]
                                _19977 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22844]) > mem[_22844]:
                                mem[mem[_22844] + _22844 + 196] = 0
                            require ext_code.size(address(_22843))
                            call address(_22843).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20293, 0, address(_20780), 128, mem[_22844], mem[_22844 + 196 len ceil32(mem[_22844])]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19977 = mem[ceil32(return_data.size) + 96]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _20169 = mem[_5175]
        mem[mem[64] + 32] = mem[_5175]
        mem[mem[64] + 64 len 32 * _20169] = mem[_5175 + 32 len 32 * _20169]
        return 32, mem[mem[64] + 32 len (32 * _20169) + 32]
    mem[_10445 + _10385 + 100] = 0
    call address(_10368) with:
         gas gas_remaining wei
        args mem[mem[64] + 4 len _10445 + _10385 + -mem[64] + 96]
    if not return_data.size:
        if not ext_call.success:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        if not mem[96]:
            _19978 = mem[ceil32(return_data.size) + 96]
            idx = 0
            while idx < _19978 - 1:
                require idx < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[ceil32(return_data.size) + 96]
                require idx + 1 < mem[_5175]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    _20294 = mem[(32 * idx + 1) + _5175 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22189 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20294
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22189))
                                call address(_22189).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20294, this.address
                            else:
                                _22191 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22192 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22192 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22192 + 36] = 0
                                mem[_22192 + 68] = _20294
                                mem[_22192 + 100] = this.address
                                mem[_22192 + 132] = 128
                                mem[_22192 + 164] = mem[_22192]
                                s = 0
                                while s < mem[_22192]:
                                    mem[s + _22192 + 196] = mem[s + _22192 + 32]
                                    _19978 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22192]) > mem[_22192]:
                                    mem[mem[_22192] + _22192 + 196] = 0
                                require ext_code.size(address(_22191))
                                call address(_22191).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20294, address(this.address), 128, mem[_22192], mem[_22192 + 196 len ceil32(mem[_22192])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20782 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22846 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20294
                                mem[mem[64] + 68] = address(_20782)
                                require ext_code.size(address(_22846))
                                call address(_22846).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20294, address(_20782)
                            else:
                                _22848 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22849 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22849 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22849 + 36] = 0
                                mem[_22849 + 68] = _20294
                                mem[_22849 + 100] = address(_20782)
                                mem[_22849 + 132] = 128
                                mem[_22849 + 164] = mem[_22849]
                                s = 0
                                while s < mem[_22849]:
                                    mem[s + _22849 + 196] = mem[s + _22849 + 32]
                                    _19978 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22849]) > mem[_22849]:
                                    mem[mem[_22849] + _22849 + 196] = 0
                                require ext_code.size(address(_22848))
                                call address(_22848).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20294, address(_20782), 128, mem[_22849], mem[_22849 + 196 len ceil32(mem[_22849])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22195 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20294
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22195))
                                call address(_22195).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20294, 0, this.address
                            else:
                                _22197 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22198 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22198 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22198 + 36] = _20294
                                mem[_22198 + 68] = 0
                                mem[_22198 + 100] = this.address
                                mem[_22198 + 132] = 128
                                mem[_22198 + 164] = mem[_22198]
                                s = 0
                                while s < mem[_22198]:
                                    mem[s + _22198 + 196] = mem[s + _22198 + 32]
                                    _19978 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22198]) > mem[_22198]:
                                    mem[mem[_22198] + _22198 + 196] = 0
                                require ext_code.size(address(_22197))
                                call address(_22197).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20294, 0, address(this.address), 128, mem[_22198], mem[_22198 + 196 len ceil32(mem[_22198])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20784 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22851 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20294
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20784)
                                require ext_code.size(address(_22851))
                                call address(_22851).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20294, 0, address(_20784)
                            else:
                                _22853 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22854 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22854 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22854 + 36] = _20294
                                mem[_22854 + 68] = 0
                                mem[_22854 + 100] = address(_20784)
                                mem[_22854 + 132] = 128
                                mem[_22854 + 164] = mem[_22854]
                                s = 0
                                while s < mem[_22854]:
                                    mem[s + _22854 + 196] = mem[s + _22854 + 32]
                                    _19978 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22854]) > mem[_22854]:
                                    mem[mem[_22854] + _22854 + 196] = 0
                                require ext_code.size(address(_22853))
                                call address(_22853).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20294, 0, address(_20784), 128, mem[_22854], mem[_22854 + 196 len ceil32(mem[_22854])]
                else:
                    _20295 = mem[(32 * idx + 1) + _5175 + 32]
                    if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22201 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20295
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22201))
                                call address(_22201).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20295, this.address
                            else:
                                _22203 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22204 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22204 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22204 + 36] = 0
                                mem[_22204 + 68] = _20295
                                mem[_22204 + 100] = this.address
                                mem[_22204 + 132] = 128
                                mem[_22204 + 164] = mem[_22204]
                                s = 0
                                while s < mem[_22204]:
                                    mem[s + _22204 + 196] = mem[s + _22204 + 32]
                                    _19978 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22204]) > mem[_22204]:
                                    mem[mem[_22204] + _22204 + 196] = 0
                                require ext_code.size(address(_22203))
                                call address(_22203).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20295, address(this.address), 128, mem[_22204], mem[_22204 + 196 len ceil32(mem[_22204])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20786 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22856 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _20295
                                mem[mem[64] + 68] = address(_20786)
                                require ext_code.size(address(_22856))
                                call address(_22856).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _20295, address(_20786)
                            else:
                                _22858 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22859 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22859 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22859 + 36] = 0
                                mem[_22859 + 68] = _20295
                                mem[_22859 + 100] = address(_20786)
                                mem[_22859 + 132] = 128
                                mem[_22859 + 164] = mem[_22859]
                                s = 0
                                while s < mem[_22859]:
                                    mem[s + _22859 + 196] = mem[s + _22859 + 32]
                                    _19978 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22859]) > mem[_22859]:
                                    mem[mem[_22859] + _22859 + 196] = 0
                                require ext_code.size(address(_22858))
                                call address(_22858).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _20295, address(_20786), 128, mem[_22859], mem[_22859 + 196 len ceil32(mem[_22859])]
                    else:
                        if idx >= mem[ceil32(return_data.size) + 96] - 2:
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22207 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20295
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_22207))
                                call address(_22207).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20295, 0, this.address
                            else:
                                _22209 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22210 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22210 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22210 + 36] = _20295
                                mem[_22210 + 68] = 0
                                mem[_22210 + 100] = this.address
                                mem[_22210 + 132] = 128
                                mem[_22210 + 164] = mem[_22210]
                                s = 0
                                while s < mem[_22210]:
                                    mem[s + _22210 + 196] = mem[s + _22210 + 32]
                                    _19978 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22210]) > mem[_22210]:
                                    mem[mem[_22210] + _22210 + 196] = 0
                                require ext_code.size(address(_22209))
                                call address(_22209).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20295, 0, address(this.address), 128, mem[_22210], mem[_22210 + 196 len ceil32(mem[_22210])]
                        else:
                            require idx + 1 < mem[ceil32(return_data.size) + 320]
                            _20788 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                            require idx < mem[ceil32(return_data.size) + 256]
                            require idx < mem[ceil32(return_data.size) + 320]
                            if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                                _22861 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _20295
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_20788)
                                require ext_code.size(address(_22861))
                                call address(_22861).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _20295, 0, address(_20788)
                            else:
                                _22863 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                                _22864 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_22864 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_22864 + 36] = _20295
                                mem[_22864 + 68] = 0
                                mem[_22864 + 100] = address(_20788)
                                mem[_22864 + 132] = 128
                                mem[_22864 + 164] = mem[_22864]
                                s = 0
                                while s < mem[_22864]:
                                    mem[s + _22864 + 196] = mem[s + _22864 + 32]
                                    _19978 = mem[ceil32(return_data.size) + 96]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_22864]) > mem[_22864]:
                                    mem[mem[_22864] + _22864 + 196] = 0
                                require ext_code.size(address(_22863))
                                call address(_22863).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _20295, 0, address(_20788), 128, mem[_22864], mem[_22864 + 196 len ceil32(mem[_22864])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19978 = mem[ceil32(return_data.size) + 96]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _20170 = mem[_5175]
            mem[mem[64] + 32] = mem[_5175]
            mem[mem[64] + 64 len 32 * _20170] = mem[_5175 + 32 len 32 * _20170]
            return 32, mem[mem[64] + 32 len (32 * _20170) + 32]
        require mem[96] >= 32
        require mem[128] == bool(mem[128])
        if not mem[128]:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        _19979 = mem[ceil32(return_data.size) + 96]
        idx = 0
        while idx < _19979 - 1:
            require idx < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[_5175]
            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                _20296 = mem[(32 * idx + 1) + _5175 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22214 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20296
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22214))
                            call address(_22214).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20296, this.address
                        else:
                            _22216 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22217 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22217 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22217 + 36] = 0
                            mem[_22217 + 68] = _20296
                            mem[_22217 + 100] = this.address
                            mem[_22217 + 132] = 128
                            mem[_22217 + 164] = mem[_22217]
                            s = 0
                            while s < mem[_22217]:
                                mem[s + _22217 + 196] = mem[s + _22217 + 32]
                                _19979 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22217]) > mem[_22217]:
                                mem[mem[_22217] + _22217 + 196] = 0
                            require ext_code.size(address(_22216))
                            call address(_22216).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20296, address(this.address), 128, mem[_22217], mem[_22217 + 196 len ceil32(mem[_22217])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20790 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22866 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20296
                            mem[mem[64] + 68] = address(_20790)
                            require ext_code.size(address(_22866))
                            call address(_22866).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20296, address(_20790)
                        else:
                            _22868 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22869 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22869 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22869 + 36] = 0
                            mem[_22869 + 68] = _20296
                            mem[_22869 + 100] = address(_20790)
                            mem[_22869 + 132] = 128
                            mem[_22869 + 164] = mem[_22869]
                            s = 0
                            while s < mem[_22869]:
                                mem[s + _22869 + 196] = mem[s + _22869 + 32]
                                _19979 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22869]) > mem[_22869]:
                                mem[mem[_22869] + _22869 + 196] = 0
                            require ext_code.size(address(_22868))
                            call address(_22868).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20296, address(_20790), 128, mem[_22869], mem[_22869 + 196 len ceil32(mem[_22869])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22220 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20296
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22220))
                            call address(_22220).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20296, 0, this.address
                        else:
                            _22222 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22223 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22223 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22223 + 36] = _20296
                            mem[_22223 + 68] = 0
                            mem[_22223 + 100] = this.address
                            mem[_22223 + 132] = 128
                            mem[_22223 + 164] = mem[_22223]
                            s = 0
                            while s < mem[_22223]:
                                mem[s + _22223 + 196] = mem[s + _22223 + 32]
                                _19979 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22223]) > mem[_22223]:
                                mem[mem[_22223] + _22223 + 196] = 0
                            require ext_code.size(address(_22222))
                            call address(_22222).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20296, 0, address(this.address), 128, mem[_22223], mem[_22223 + 196 len ceil32(mem[_22223])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20792 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22871 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20296
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_20792)
                            require ext_code.size(address(_22871))
                            call address(_22871).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20296, 0, address(_20792)
                        else:
                            _22873 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22874 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22874 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22874 + 36] = _20296
                            mem[_22874 + 68] = 0
                            mem[_22874 + 100] = address(_20792)
                            mem[_22874 + 132] = 128
                            mem[_22874 + 164] = mem[_22874]
                            s = 0
                            while s < mem[_22874]:
                                mem[s + _22874 + 196] = mem[s + _22874 + 32]
                                _19979 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22874]) > mem[_22874]:
                                mem[mem[_22874] + _22874 + 196] = 0
                            require ext_code.size(address(_22873))
                            call address(_22873).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20296, 0, address(_20792), 128, mem[_22874], mem[_22874 + 196 len ceil32(mem[_22874])]
            else:
                _20297 = mem[(32 * idx + 1) + _5175 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22226 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20297
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22226))
                            call address(_22226).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20297, this.address
                        else:
                            _22228 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22229 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22229 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22229 + 36] = 0
                            mem[_22229 + 68] = _20297
                            mem[_22229 + 100] = this.address
                            mem[_22229 + 132] = 128
                            mem[_22229 + 164] = mem[_22229]
                            s = 0
                            while s < mem[_22229]:
                                mem[s + _22229 + 196] = mem[s + _22229 + 32]
                                _19979 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22229]) > mem[_22229]:
                                mem[mem[_22229] + _22229 + 196] = 0
                            require ext_code.size(address(_22228))
                            call address(_22228).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20297, address(this.address), 128, mem[_22229], mem[_22229 + 196 len ceil32(mem[_22229])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20794 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22876 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20297
                            mem[mem[64] + 68] = address(_20794)
                            require ext_code.size(address(_22876))
                            call address(_22876).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20297, address(_20794)
                        else:
                            _22878 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22879 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22879 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22879 + 36] = 0
                            mem[_22879 + 68] = _20297
                            mem[_22879 + 100] = address(_20794)
                            mem[_22879 + 132] = 128
                            mem[_22879 + 164] = mem[_22879]
                            s = 0
                            while s < mem[_22879]:
                                mem[s + _22879 + 196] = mem[s + _22879 + 32]
                                _19979 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22879]) > mem[_22879]:
                                mem[mem[_22879] + _22879 + 196] = 0
                            require ext_code.size(address(_22878))
                            call address(_22878).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20297, address(_20794), 128, mem[_22879], mem[_22879 + 196 len ceil32(mem[_22879])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22232 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20297
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22232))
                            call address(_22232).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20297, 0, this.address
                        else:
                            _22234 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22235 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22235 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22235 + 36] = _20297
                            mem[_22235 + 68] = 0
                            mem[_22235 + 100] = this.address
                            mem[_22235 + 132] = 128
                            mem[_22235 + 164] = mem[_22235]
                            s = 0
                            while s < mem[_22235]:
                                mem[s + _22235 + 196] = mem[s + _22235 + 32]
                                _19979 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22235]) > mem[_22235]:
                                mem[mem[_22235] + _22235 + 196] = 0
                            require ext_code.size(address(_22234))
                            call address(_22234).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20297, 0, address(this.address), 128, mem[_22235], mem[_22235 + 196 len ceil32(mem[_22235])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20796 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22881 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20297
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_20796)
                            require ext_code.size(address(_22881))
                            call address(_22881).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20297, 0, address(_20796)
                        else:
                            _22883 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22884 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22884 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22884 + 36] = _20297
                            mem[_22884 + 68] = 0
                            mem[_22884 + 100] = address(_20796)
                            mem[_22884 + 132] = 128
                            mem[_22884 + 164] = mem[_22884]
                            s = 0
                            while s < mem[_22884]:
                                mem[s + _22884 + 196] = mem[s + _22884 + 32]
                                _19979 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22884]) > mem[_22884]:
                                mem[mem[_22884] + _22884 + 196] = 0
                            require ext_code.size(address(_22883))
                            call address(_22883).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20297, 0, address(_20796), 128, mem[_22884], mem[_22884 + 196 len ceil32(mem[_22884])]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19979 = mem[ceil32(return_data.size) + 96]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _20171 = mem[_5175]
        mem[mem[64] + 32] = mem[_5175]
        mem[mem[64] + 64 len 32 * _20171] = mem[_5175 + 32 len 32 * _20171]
        return 32, mem[mem[64] + 32 len (32 * _20171) + 32]
    _15453 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size) + 1
    mem[_15453] = return_data.size
    mem[_15453 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
    if not ext_call.success:
        revert with 0, 'TransferHelper::safeTransfer: transfer failed'
    if not return_data.size:
        _19980 = mem[ceil32(return_data.size) + 96]
        idx = 0
        while idx < _19980 - 1:
            require idx < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[ceil32(return_data.size) + 96]
            require idx + 1 < mem[_5175]
            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                _20298 = mem[(32 * idx + 1) + _5175 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22239 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20298
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22239))
                            call address(_22239).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20298, this.address
                        else:
                            _22241 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22242 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22242 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22242 + 36] = 0
                            mem[_22242 + 68] = _20298
                            mem[_22242 + 100] = this.address
                            mem[_22242 + 132] = 128
                            mem[_22242 + 164] = mem[_22242]
                            s = 0
                            while s < mem[_22242]:
                                mem[s + _22242 + 196] = mem[s + _22242 + 32]
                                _19980 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22242]) > mem[_22242]:
                                mem[mem[_22242] + _22242 + 196] = 0
                            require ext_code.size(address(_22241))
                            call address(_22241).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20298, address(this.address), 128, mem[_22242], mem[_22242 + 196 len ceil32(mem[_22242])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20798 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22886 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20298
                            mem[mem[64] + 68] = address(_20798)
                            require ext_code.size(address(_22886))
                            call address(_22886).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20298, address(_20798)
                        else:
                            _22888 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22889 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22889 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22889 + 36] = 0
                            mem[_22889 + 68] = _20298
                            mem[_22889 + 100] = address(_20798)
                            mem[_22889 + 132] = 128
                            mem[_22889 + 164] = mem[_22889]
                            s = 0
                            while s < mem[_22889]:
                                mem[s + _22889 + 196] = mem[s + _22889 + 32]
                                _19980 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22889]) > mem[_22889]:
                                mem[mem[_22889] + _22889 + 196] = 0
                            require ext_code.size(address(_22888))
                            call address(_22888).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20298, address(_20798), 128, mem[_22889], mem[_22889 + 196 len ceil32(mem[_22889])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22245 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20298
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22245))
                            call address(_22245).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20298, 0, this.address
                        else:
                            _22247 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22248 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22248 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22248 + 36] = _20298
                            mem[_22248 + 68] = 0
                            mem[_22248 + 100] = this.address
                            mem[_22248 + 132] = 128
                            mem[_22248 + 164] = mem[_22248]
                            s = 0
                            while s < mem[_22248]:
                                mem[s + _22248 + 196] = mem[s + _22248 + 32]
                                _19980 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22248]) > mem[_22248]:
                                mem[mem[_22248] + _22248 + 196] = 0
                            require ext_code.size(address(_22247))
                            call address(_22247).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20298, 0, address(this.address), 128, mem[_22248], mem[_22248 + 196 len ceil32(mem[_22248])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20800 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22891 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20298
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_20800)
                            require ext_code.size(address(_22891))
                            call address(_22891).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20298, 0, address(_20800)
                        else:
                            _22893 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22894 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22894 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22894 + 36] = _20298
                            mem[_22894 + 68] = 0
                            mem[_22894 + 100] = address(_20800)
                            mem[_22894 + 132] = 128
                            mem[_22894 + 164] = mem[_22894]
                            s = 0
                            while s < mem[_22894]:
                                mem[s + _22894 + 196] = mem[s + _22894 + 32]
                                _19980 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22894]) > mem[_22894]:
                                mem[mem[_22894] + _22894 + 196] = 0
                            require ext_code.size(address(_22893))
                            call address(_22893).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20298, 0, address(_20800), 128, mem[_22894], mem[_22894 + 196 len ceil32(mem[_22894])]
            else:
                _20299 = mem[(32 * idx + 1) + _5175 + 32]
                if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22251 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20299
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22251))
                            call address(_22251).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20299, this.address
                        else:
                            _22253 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22254 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22254 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22254 + 36] = 0
                            mem[_22254 + 68] = _20299
                            mem[_22254 + 100] = this.address
                            mem[_22254 + 132] = 128
                            mem[_22254 + 164] = mem[_22254]
                            s = 0
                            while s < mem[_22254]:
                                mem[s + _22254 + 196] = mem[s + _22254 + 32]
                                _19980 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22254]) > mem[_22254]:
                                mem[mem[_22254] + _22254 + 196] = 0
                            require ext_code.size(address(_22253))
                            call address(_22253).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20299, address(this.address), 128, mem[_22254], mem[_22254 + 196 len ceil32(mem[_22254])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20802 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22896 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _20299
                            mem[mem[64] + 68] = address(_20802)
                            require ext_code.size(address(_22896))
                            call address(_22896).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _20299, address(_20802)
                        else:
                            _22898 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22899 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22899 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22899 + 36] = 0
                            mem[_22899 + 68] = _20299
                            mem[_22899 + 100] = address(_20802)
                            mem[_22899 + 132] = 128
                            mem[_22899 + 164] = mem[_22899]
                            s = 0
                            while s < mem[_22899]:
                                mem[s + _22899 + 196] = mem[s + _22899 + 32]
                                _19980 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22899]) > mem[_22899]:
                                mem[mem[_22899] + _22899 + 196] = 0
                            require ext_code.size(address(_22898))
                            call address(_22898).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _20299, address(_20802), 128, mem[_22899], mem[_22899 + 196 len ceil32(mem[_22899])]
                else:
                    if idx >= mem[ceil32(return_data.size) + 96] - 2:
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22257 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20299
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_22257))
                            call address(_22257).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20299, 0, this.address
                        else:
                            _22259 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22260 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22260 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22260 + 36] = _20299
                            mem[_22260 + 68] = 0
                            mem[_22260 + 100] = this.address
                            mem[_22260 + 132] = 128
                            mem[_22260 + 164] = mem[_22260]
                            s = 0
                            while s < mem[_22260]:
                                mem[s + _22260 + 196] = mem[s + _22260 + 32]
                                _19980 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22260]) > mem[_22260]:
                                mem[mem[_22260] + _22260 + 196] = 0
                            require ext_code.size(address(_22259))
                            call address(_22259).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20299, 0, address(this.address), 128, mem[_22260], mem[_22260 + 196 len ceil32(mem[_22260])]
                    else:
                        require idx + 1 < mem[ceil32(return_data.size) + 320]
                        _20804 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                        require idx < mem[ceil32(return_data.size) + 256]
                        require idx < mem[ceil32(return_data.size) + 320]
                        if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                            _22901 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _20299
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_20804)
                            require ext_code.size(address(_22901))
                            call address(_22901).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _20299, 0, address(_20804)
                        else:
                            _22903 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                            _22904 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_22904 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_22904 + 36] = _20299
                            mem[_22904 + 68] = 0
                            mem[_22904 + 100] = address(_20804)
                            mem[_22904 + 132] = 128
                            mem[_22904 + 164] = mem[_22904]
                            s = 0
                            while s < mem[_22904]:
                                mem[s + _22904 + 196] = mem[s + _22904 + 32]
                                _19980 = mem[ceil32(return_data.size) + 96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_22904]) > mem[_22904]:
                                mem[mem[_22904] + _22904 + 196] = 0
                            require ext_code.size(address(_22903))
                            call address(_22903).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _20299, 0, address(_20804), 128, mem[_22904], mem[_22904 + 196 len ceil32(mem[_22904])]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19980 = mem[ceil32(return_data.size) + 96]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _20172 = mem[_5175]
        mem[mem[64] + 32] = mem[_5175]
        mem[mem[64] + 64 len 32 * _20172] = mem[_5175 + 32 len 32 * _20172]
        return 32, mem[mem[64] + 32 len (32 * _20172) + 32]
    require return_data.size >= 32
    require mem[_15453 + 32] == bool(mem[_15453 + 32])
    if not mem[_15453 + 32]:
        revert with 0, 'TransferHelper::safeTransfer: transfer failed'
    _19981 = mem[ceil32(return_data.size) + 96]
    idx = 0
    while idx < _19981 - 1:
        require idx < mem[ceil32(return_data.size) + 96]
        require idx + 1 < mem[ceil32(return_data.size) + 96]
        require idx + 1 < mem[_5175]
        if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] < mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
            _20300 = mem[(32 * idx + 1) + _5175 + 32]
            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx) + ceil32(return_data.size) + 140 len 20]:
                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                    require idx < mem[ceil32(return_data.size) + 256]
                    require idx < mem[ceil32(return_data.size) + 320]
                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                        _22264 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 0
                        mem[mem[64] + 36] = _20300
                        mem[mem[64] + 68] = this.address
                        require ext_code.size(address(_22264))
                        call address(_22264).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args 0, _20300, this.address
                    else:
                        _22266 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        _22267 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_22267 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_22267 + 36] = 0
                        mem[_22267 + 68] = _20300
                        mem[_22267 + 100] = this.address
                        mem[_22267 + 132] = 128
                        mem[_22267 + 164] = mem[_22267]
                        s = 0
                        while s < mem[_22267]:
                            mem[s + _22267 + 196] = mem[s + _22267 + 32]
                            _19981 = mem[ceil32(return_data.size) + 96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_22267]) > mem[_22267]:
                            mem[mem[_22267] + _22267 + 196] = 0
                        require ext_code.size(address(_22266))
                        call address(_22266).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _20300, address(this.address), 128, mem[_22267], mem[_22267 + 196 len ceil32(mem[_22267])]
                else:
                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                    _20806 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                    require idx < mem[ceil32(return_data.size) + 256]
                    require idx < mem[ceil32(return_data.size) + 320]
                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                        _22906 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 0
                        mem[mem[64] + 36] = _20300
                        mem[mem[64] + 68] = address(_20806)
                        require ext_code.size(address(_22906))
                        call address(_22906).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args 0, _20300, address(_20806)
                    else:
                        _22908 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        _22909 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_22909 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_22909 + 36] = 0
                        mem[_22909 + 68] = _20300
                        mem[_22909 + 100] = address(_20806)
                        mem[_22909 + 132] = 128
                        mem[_22909 + 164] = mem[_22909]
                        s = 0
                        while s < mem[_22909]:
                            mem[s + _22909 + 196] = mem[s + _22909 + 32]
                            _19981 = mem[ceil32(return_data.size) + 96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_22909]) > mem[_22909]:
                            mem[mem[_22909] + _22909 + 196] = 0
                        require ext_code.size(address(_22908))
                        call address(_22908).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _20300, address(_20806), 128, mem[_22909], mem[_22909 + 196 len ceil32(mem[_22909])]
            else:
                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                    require idx < mem[ceil32(return_data.size) + 256]
                    require idx < mem[ceil32(return_data.size) + 320]
                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                        _22270 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _20300
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = this.address
                        require ext_code.size(address(_22270))
                        call address(_22270).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args _20300, 0, this.address
                    else:
                        _22272 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        _22273 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_22273 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_22273 + 36] = _20300
                        mem[_22273 + 68] = 0
                        mem[_22273 + 100] = this.address
                        mem[_22273 + 132] = 128
                        mem[_22273 + 164] = mem[_22273]
                        s = 0
                        while s < mem[_22273]:
                            mem[s + _22273 + 196] = mem[s + _22273 + 32]
                            _19981 = mem[ceil32(return_data.size) + 96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_22273]) > mem[_22273]:
                            mem[mem[_22273] + _22273 + 196] = 0
                        require ext_code.size(address(_22272))
                        call address(_22272).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _20300, 0, address(this.address), 128, mem[_22273], mem[_22273 + 196 len ceil32(mem[_22273])]
                else:
                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                    _20808 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                    require idx < mem[ceil32(return_data.size) + 256]
                    require idx < mem[ceil32(return_data.size) + 320]
                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                        _22911 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _20300
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = address(_20808)
                        require ext_code.size(address(_22911))
                        call address(_22911).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args _20300, 0, address(_20808)
                    else:
                        _22913 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        _22914 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_22914 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_22914 + 36] = _20300
                        mem[_22914 + 68] = 0
                        mem[_22914 + 100] = address(_20808)
                        mem[_22914 + 132] = 128
                        mem[_22914 + 164] = mem[_22914]
                        s = 0
                        while s < mem[_22914]:
                            mem[s + _22914 + 196] = mem[s + _22914 + 32]
                            _19981 = mem[ceil32(return_data.size) + 96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_22914]) > mem[_22914]:
                            mem[mem[_22914] + _22914 + 196] = 0
                        require ext_code.size(address(_22913))
                        call address(_22913).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _20300, 0, address(_20808), 128, mem[_22914], mem[_22914 + 196 len ceil32(mem[_22914])]
        else:
            _20301 = mem[(32 * idx + 1) + _5175 + 32]
            if mem[(32 * idx) + ceil32(return_data.size) + 140 len 20] == mem[(32 * idx + 1) + ceil32(return_data.size) + 140 len 20]:
                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                    require idx < mem[ceil32(return_data.size) + 256]
                    require idx < mem[ceil32(return_data.size) + 320]
                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                        _22276 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 0
                        mem[mem[64] + 36] = _20301
                        mem[mem[64] + 68] = this.address
                        require ext_code.size(address(_22276))
                        call address(_22276).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args 0, _20301, this.address
                    else:
                        _22278 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        _22279 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_22279 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_22279 + 36] = 0
                        mem[_22279 + 68] = _20301
                        mem[_22279 + 100] = this.address
                        mem[_22279 + 132] = 128
                        mem[_22279 + 164] = mem[_22279]
                        s = 0
                        while s < mem[_22279]:
                            mem[s + _22279 + 196] = mem[s + _22279 + 32]
                            _19981 = mem[ceil32(return_data.size) + 96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_22279]) > mem[_22279]:
                            mem[mem[_22279] + _22279 + 196] = 0
                        require ext_code.size(address(_22278))
                        call address(_22278).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _20301, address(this.address), 128, mem[_22279], mem[_22279 + 196 len ceil32(mem[_22279])]
                else:
                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                    _20810 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                    require idx < mem[ceil32(return_data.size) + 256]
                    require idx < mem[ceil32(return_data.size) + 320]
                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                        _22916 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 0
                        mem[mem[64] + 36] = _20301
                        mem[mem[64] + 68] = address(_20810)
                        require ext_code.size(address(_22916))
                        call address(_22916).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args 0, _20301, address(_20810)
                    else:
                        _22918 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        _22919 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_22919 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_22919 + 36] = 0
                        mem[_22919 + 68] = _20301
                        mem[_22919 + 100] = address(_20810)
                        mem[_22919 + 132] = 128
                        mem[_22919 + 164] = mem[_22919]
                        s = 0
                        while s < mem[_22919]:
                            mem[s + _22919 + 196] = mem[s + _22919 + 32]
                            _19981 = mem[ceil32(return_data.size) + 96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_22919]) > mem[_22919]:
                            mem[mem[_22919] + _22919 + 196] = 0
                        require ext_code.size(address(_22918))
                        call address(_22918).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _20301, address(_20810), 128, mem[_22919], mem[_22919 + 196 len ceil32(mem[_22919])]
            else:
                if idx >= mem[ceil32(return_data.size) + 96] - 2:
                    require idx < mem[ceil32(return_data.size) + 256]
                    require idx < mem[ceil32(return_data.size) + 320]
                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                        _22282 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _20301
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = this.address
                        require ext_code.size(address(_22282))
                        call address(_22282).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args _20301, 0, this.address
                    else:
                        _22284 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        _22285 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_22285 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_22285 + 36] = _20301
                        mem[_22285 + 68] = 0
                        mem[_22285 + 100] = this.address
                        mem[_22285 + 132] = 128
                        mem[_22285 + 164] = mem[_22285]
                        s = 0
                        while s < mem[_22285]:
                            mem[s + _22285 + 196] = mem[s + _22285 + 32]
                            _19981 = mem[ceil32(return_data.size) + 96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_22285]) > mem[_22285]:
                            mem[mem[_22285] + _22285 + 196] = 0
                        require ext_code.size(address(_22284))
                        call address(_22284).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _20301, 0, address(this.address), 128, mem[_22285], mem[_22285 + 196 len ceil32(mem[_22285])]
                else:
                    require idx + 1 < mem[ceil32(return_data.size) + 320]
                    _20812 = mem[(32 * idx + 1) + ceil32(return_data.size) + 352]
                    require idx < mem[ceil32(return_data.size) + 256]
                    require idx < mem[ceil32(return_data.size) + 320]
                    if not mem[(32 * idx) + ceil32(return_data.size) + 288]:
                        _22921 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _20301
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = address(_20812)
                        require ext_code.size(address(_22921))
                        call address(_22921).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args _20301, 0, address(_20812)
                    else:
                        _22923 = mem[(32 * idx) + ceil32(return_data.size) + 352]
                        _22924 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_22924 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_22924 + 36] = _20301
                        mem[_22924 + 68] = 0
                        mem[_22924 + 100] = address(_20812)
                        mem[_22924 + 132] = 128
                        mem[_22924 + 164] = mem[_22924]
                        s = 0
                        while s < mem[_22924]:
                            mem[s + _22924 + 196] = mem[s + _22924 + 32]
                            _19981 = mem[ceil32(return_data.size) + 96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_22924]) > mem[_22924]:
                            mem[mem[_22924] + _22924 + 196] = 0
                        require ext_code.size(address(_22923))
                        call address(_22923).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _20301, 0, address(_20812), 128, mem[_22924], mem[_22924 + 196 len ceil32(mem[_22924])]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _19981 = mem[ceil32(return_data.size) + 96]
        idx = idx + 1
        continue 
    mem[mem[64]] = 32
    _20173 = mem[_5175]
    mem[mem[64] + 32] = mem[_5175]
    mem[mem[64] + 64 len 32 * _20173] = mem[_5175 + 32 len 32 * _20173]
    return 32, mem[mem[64] + 32 len (32 * _20173) + 32]
}

function sub_bbd83fff(?) {
    require calldata.size - 4 >= 192
    require cd[4] == cd[4]
    require cd[36] == cd[36]
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require cd[68] + (32 * ('cd', 68).length) + 36 <= calldata.size
    require cd[100] <= test266151307()
    require cd[100] + 35 < calldata.size
    require ('cd', 100).length <= test266151307()
    require cd[100] + (32 * ('cd', 100).length) + 36 <= calldata.size
    require cd[132] <= test266151307()
    require cd[132] + 35 < calldata.size
    require ('cd', 132).length <= test266151307()
    require cd[132] + (32 * ('cd', 132).length) + 36 <= calldata.size
    require cd[164] <= test266151307()
    require cd[164] + 35 < calldata.size
    require ('cd', 164).length <= test266151307()
    require cd[164] + (32 * ('cd', 164).length) + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    mem[96] = ('cd', 68).length
    mem[128 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
    mem[(32 * ('cd', 68).length) + 128] = ('cd', 100).length
    mem[(32 * ('cd', 68).length) + 160 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
    mem[(32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 160] = ('cd', 132).length
    mem[(32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192 len 32 * ('cd', 132).length] = call.data[cd[132] + 36 len 32 * ('cd', 132).length]
    mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] = ('cd', 68).length
    mem[64] = (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (64 * ('cd', 68).length) + 224
    if not ('cd', 68).length:
        require 0 < ('cd', 68).length
        mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = cd[4]
        idx = 0
        while idx < ('cd', 68).length - 1:
            require idx < mem[(32 * ('cd', 68).length) + 128]
            require idx < mem[96]
            _2637 = mem[(32 * idx) + 128]
            require idx + 1 < mem[96]
            _2644 = mem[(32 * idx + 1) + 128]
            require ext_code.size(mem[(32 * idx) + (32 * ('cd', 68).length) + 172 len 20])
            staticcall mem[(32 * idx) + (32 * ('cd', 68).length) + 172 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                _2668 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_2668] == mem[_2668 + 18 len 14]
                require mem[_2668 + 32] == mem[_2668 + 50 len 14]
                require mem[_2668 + 64] == mem[_2668 + 92 len 4]
                require idx < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                require idx < mem[(32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 160]
                if address(_2637) == address(_2637):
                    if not mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]:
                        require mem[_2668 + 18 len 14]
                        if 1000 * mem[_2668 + 18 len 14] / mem[_2668 + 18 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_2668 + 18 len 14] < 1000 * mem[_2668 + 18 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_2668 + 18 len 14]
                        require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                        mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / 1000 * mem[_2668 + 18 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) / mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] != -mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]):
                            if not mem[_2668 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                            else:
                                if 1000 * mem[_2668 + 18 len 14] / mem[_2668 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2668 + 18 len 14]) < 1000 * mem[_2668 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2668 + 18 len 14])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2668 + 18 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2668 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2668 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) != mem[_2668 + 50 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_2668 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2668 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2668 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                            else:
                                if 1000 * mem[_2668 + 18 len 14] / mem[_2668 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2668 + 18 len 14]) < 1000 * mem[_2668 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2668 + 18 len 14])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2668 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2668 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2668 + 18 len 14])
                else:
                    if not mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]:
                        require mem[_2668 + 50 len 14]
                        if 1000 * mem[_2668 + 50 len 14] / mem[_2668 + 50 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_2668 + 50 len 14] < 1000 * mem[_2668 + 50 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_2668 + 50 len 14]
                        require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                        mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / 1000 * mem[_2668 + 50 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) / mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] != -mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]):
                            if not mem[_2668 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                            else:
                                if 1000 * mem[_2668 + 50 len 14] / mem[_2668 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2668 + 50 len 14]) < 1000 * mem[_2668 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2668 + 50 len 14])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2668 + 50 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2668 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2668 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) != mem[_2668 + 18 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_2668 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2668 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2668 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                            else:
                                if 1000 * mem[_2668 + 50 len 14] / mem[_2668 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2668 + 50 len 14]) < 1000 * mem[_2668 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2668 + 50 len 14])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2668 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2668 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2668 + 50 len 14])
            else:
                _2669 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_2669] == mem[_2669 + 18 len 14]
                require mem[_2669 + 32] == mem[_2669 + 50 len 14]
                require mem[_2669 + 64] == mem[_2669 + 92 len 4]
                require idx < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                require idx < mem[(32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 160]
                if address(_2637) == address(_2644):
                    if not mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]:
                        require mem[_2669 + 18 len 14]
                        if 1000 * mem[_2669 + 18 len 14] / mem[_2669 + 18 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_2669 + 18 len 14] < 1000 * mem[_2669 + 18 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_2669 + 18 len 14]
                        require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                        mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / 1000 * mem[_2669 + 18 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) / mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] != -mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]):
                            if not mem[_2669 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                            else:
                                if 1000 * mem[_2669 + 18 len 14] / mem[_2669 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2669 + 18 len 14]) < 1000 * mem[_2669 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2669 + 18 len 14])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2669 + 18 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2669 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2669 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) != mem[_2669 + 50 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_2669 + 18 len 14]:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2669 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2669 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                            else:
                                if 1000 * mem[_2669 + 18 len 14] / mem[_2669 + 18 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2669 + 18 len 14]) < 1000 * mem[_2669 + 18 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2669 + 18 len 14])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2669 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2669 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2669 + 18 len 14])
                else:
                    if not mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]:
                        require mem[_2669 + 50 len 14]
                        if 1000 * mem[_2669 + 50 len 14] / mem[_2669 + 50 len 14] != 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if 1000 * mem[_2669 + 50 len 14] < 1000 * mem[_2669 + 50 len 14]:
                            revert with 0, 'SafeMath#add: OVERFLOW'
                        require 1000 * mem[_2669 + 50 len 14]
                        require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                        mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / 1000 * mem[_2669 + 50 len 14]
                    else:
                        if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) / mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] != -mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] + 1000:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]):
                            if not mem[_2669 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                            else:
                                if 1000 * mem[_2669 + 50 len 14] / mem[_2669 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2669 + 50 len 14]) < 1000 * mem[_2669 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2669 + 50 len 14])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2669 + 50 len 14])
                        else:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2669 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2669 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) != mem[_2669 + 18 len 14]:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if not mem[_2669 + 50 len 14]:
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) < 0:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2669 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2669 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                            else:
                                if 1000 * mem[_2669 + 50 len 14] / mem[_2669 + 50 len 14] != 1000:
                                    revert with 0, 'SafeMath#mul: OVERFLOW'
                                if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2669 + 50 len 14]) < 1000 * mem[_2669 + 50 len 14]:
                                    revert with 0, 'SafeMath#add: OVERFLOW'
                                require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2669 + 50 len 14])
                                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                                mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2669 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2669 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2669 + 50 len 14])
            idx = idx + 1
            continue 
        require mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] - 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
        if mem[(32 * mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] - 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] < cd[36]:
            revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT'
        require 0 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
        require mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] - 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
        if mem[(32 * mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] - 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]:
            revert with 0, 'Sorry bruh'
        require 0 < ('cd', 68).length
        require ('cd', 68)[0] == address(('cd', 68)[0])
        require 0 < ('cd', 100).length
        require ('cd', 100)[0] == address(('cd', 100)[0])
        require 0 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
        _2688 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
        _2690 = mem[64]
        mem[mem[64] + 36] = address(('cd', 100)[0])
        mem[mem[64] + 68] = _2688
        _2732 = mem[64]
        mem[mem[64]] = 68
        mem[64] = mem[64] + 100
        mem[_2732 + 32 len 4] = unknown_0xa9059cbb(?????)
        _2738 = mem[_2732]
        mem[_2690 + 100 len ceil32(mem[_2732])] = mem[_2732 + 32 len ceil32(mem[_2732])]
        if ceil32(_2738) <= _2738:
            call address(('cd', 68)[0]) with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _2738 + _2690 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                if not mem[96]:
                    _5272 = mem[64]
                    mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
                    mem[_5272] = ('cd', 68).length
                    mem[_5272 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
                    mem[_5272 + (32 * ('cd', 68).length) + 32] = 0
                    _5273 = mem[64]
                    mem[64] = (32 * ('cd', 100).length) + mem[64] + 32
                    mem[_5273] = ('cd', 100).length
                    mem[_5273 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
                    mem[_5273 + (32 * ('cd', 100).length) + 32] = 0
                    _5274 = mem[64]
                    mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
                    mem[_5274] = ('cd', 164).length
                    mem[_5274 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
                    mem[_5274 + (32 * ('cd', 164).length) + 32] = 0
                    idx = 0
                    while idx < ('cd', 68).length - 1:
                        require idx < mem[_5272]
                        require idx + 1 < mem[_5272]
                        require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                        if mem[(32 * idx) + _5272 + 44 len 20] < mem[(32 * idx + 1) + _5272 + 44 len 20]:
                            _7688 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                            if mem[(32 * idx) + _5272 + 44 len 20] == mem[(32 * idx) + _5272 + 44 len 20]:
                                if idx >= mem[_5272] - 2:
                                    require idx < mem[_5274]
                                    require idx < mem[_5273]
                                    if not mem[(32 * idx) + _5274 + 32]:
                                        _8315 = mem[(32 * idx) + _5273 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _7688
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_8315))
                                        call address(_8315).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _7688, this.address
                                    else:
                                        _8317 = mem[(32 * idx) + _5273 + 32]
                                        _8318 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_8318 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_8318 + 36] = 0
                                        mem[_8318 + 68] = _7688
                                        mem[_8318 + 100] = this.address
                                        mem[_8318 + 132] = 128
                                        mem[_8318 + 164] = mem[_8318]
                                        s = 0
                                        while s < mem[_8318]:
                                            mem[s + _8318 + 196] = mem[s + _8318 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_8318]) > mem[_8318]:
                                            mem[mem[_8318] + _8318 + 196] = 0
                                        require ext_code.size(address(_8317))
                                        call address(_8317).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _7688, address(this.address), 128, mem[_8318], mem[_8318 + 196 len ceil32(mem[_8318])]
                                else:
                                    require idx + 1 < mem[_5273]
                                    _7848 = mem[(32 * idx + 1) + _5273 + 32]
                                    require idx < mem[_5274]
                                    require idx < mem[_5273]
                                    if not mem[(32 * idx) + _5274 + 32]:
                                        _8712 = mem[(32 * idx) + _5273 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _7688
                                        mem[mem[64] + 68] = address(_7848)
                                        require ext_code.size(address(_8712))
                                        call address(_8712).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _7688, address(_7848)
                                    else:
                                        _8714 = mem[(32 * idx) + _5273 + 32]
                                        _8715 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_8715 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_8715 + 36] = 0
                                        mem[_8715 + 68] = _7688
                                        mem[_8715 + 100] = address(_7848)
                                        mem[_8715 + 132] = 128
                                        mem[_8715 + 164] = mem[_8715]
                                        s = 0
                                        while s < mem[_8715]:
                                            mem[s + _8715 + 196] = mem[s + _8715 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_8715]) > mem[_8715]:
                                            mem[mem[_8715] + _8715 + 196] = 0
                                        require ext_code.size(address(_8714))
                                        call address(_8714).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _7688, address(_7848), 128, mem[_8715], mem[_8715 + 196 len ceil32(mem[_8715])]
                            else:
                                if idx >= mem[_5272] - 2:
                                    require idx < mem[_5274]
                                    require idx < mem[_5273]
                                    if not mem[(32 * idx) + _5274 + 32]:
                                        _8321 = mem[(32 * idx) + _5273 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _7688
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_8321))
                                        call address(_8321).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _7688, 0, this.address
                                    else:
                                        _8323 = mem[(32 * idx) + _5273 + 32]
                                        _8324 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_8324 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_8324 + 36] = _7688
                                        mem[_8324 + 68] = 0
                                        mem[_8324 + 100] = this.address
                                        mem[_8324 + 132] = 128
                                        mem[_8324 + 164] = mem[_8324]
                                        s = 0
                                        while s < mem[_8324]:
                                            mem[s + _8324 + 196] = mem[s + _8324 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_8324]) > mem[_8324]:
                                            mem[mem[_8324] + _8324 + 196] = 0
                                        require ext_code.size(address(_8323))
                                        call address(_8323).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _7688, 0, address(this.address), 128, mem[_8324], mem[_8324 + 196 len ceil32(mem[_8324])]
                                else:
                                    require idx + 1 < mem[_5273]
                                    _7850 = mem[(32 * idx + 1) + _5273 + 32]
                                    require idx < mem[_5274]
                                    require idx < mem[_5273]
                                    if not mem[(32 * idx) + _5274 + 32]:
                                        _8717 = mem[(32 * idx) + _5273 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _7688
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_7850)
                                        require ext_code.size(address(_8717))
                                        call address(_8717).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _7688, 0, address(_7850)
                                    else:
                                        _8719 = mem[(32 * idx) + _5273 + 32]
                                        _8720 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_8720 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_8720 + 36] = _7688
                                        mem[_8720 + 68] = 0
                                        mem[_8720 + 100] = address(_7850)
                                        mem[_8720 + 132] = 128
                                        mem[_8720 + 164] = mem[_8720]
                                        s = 0
                                        while s < mem[_8720]:
                                            mem[s + _8720 + 196] = mem[s + _8720 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_8720]) > mem[_8720]:
                                            mem[mem[_8720] + _8720 + 196] = 0
                                        require ext_code.size(address(_8719))
                                        call address(_8719).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _7688, 0, address(_7850), 128, mem[_8720], mem[_8720 + 196 len ceil32(mem[_8720])]
                        else:
                            _7689 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                            if mem[(32 * idx) + _5272 + 44 len 20] == mem[(32 * idx + 1) + _5272 + 44 len 20]:
                                if idx >= mem[_5272] - 2:
                                    require idx < mem[_5274]
                                    require idx < mem[_5273]
                                    if not mem[(32 * idx) + _5274 + 32]:
                                        _8327 = mem[(32 * idx) + _5273 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _7689
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_8327))
                                        call address(_8327).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _7689, this.address
                                    else:
                                        _8329 = mem[(32 * idx) + _5273 + 32]
                                        _8330 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_8330 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_8330 + 36] = 0
                                        mem[_8330 + 68] = _7689
                                        mem[_8330 + 100] = this.address
                                        mem[_8330 + 132] = 128
                                        mem[_8330 + 164] = mem[_8330]
                                        s = 0
                                        while s < mem[_8330]:
                                            mem[s + _8330 + 196] = mem[s + _8330 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_8330]) > mem[_8330]:
                                            mem[mem[_8330] + _8330 + 196] = 0
                                        require ext_code.size(address(_8329))
                                        call address(_8329).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _7689, address(this.address), 128, mem[_8330], mem[_8330 + 196 len ceil32(mem[_8330])]
                                else:
                                    require idx + 1 < mem[_5273]
                                    _7852 = mem[(32 * idx + 1) + _5273 + 32]
                                    require idx < mem[_5274]
                                    require idx < mem[_5273]
                                    if not mem[(32 * idx) + _5274 + 32]:
                                        _8722 = mem[(32 * idx) + _5273 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 0
                                        mem[mem[64] + 36] = _7689
                                        mem[mem[64] + 68] = address(_7852)
                                        require ext_code.size(address(_8722))
                                        call address(_8722).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args 0, _7689, address(_7852)
                                    else:
                                        _8724 = mem[(32 * idx) + _5273 + 32]
                                        _8725 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_8725 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_8725 + 36] = 0
                                        mem[_8725 + 68] = _7689
                                        mem[_8725 + 100] = address(_7852)
                                        mem[_8725 + 132] = 128
                                        mem[_8725 + 164] = mem[_8725]
                                        s = 0
                                        while s < mem[_8725]:
                                            mem[s + _8725 + 196] = mem[s + _8725 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_8725]) > mem[_8725]:
                                            mem[mem[_8725] + _8725 + 196] = 0
                                        require ext_code.size(address(_8724))
                                        call address(_8724).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args 0, _7689, address(_7852), 128, mem[_8725], mem[_8725 + 196 len ceil32(mem[_8725])]
                            else:
                                if idx >= mem[_5272] - 2:
                                    require idx < mem[_5274]
                                    require idx < mem[_5273]
                                    if not mem[(32 * idx) + _5274 + 32]:
                                        _8333 = mem[(32 * idx) + _5273 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _7689
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(_8333))
                                        call address(_8333).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _7689, 0, this.address
                                    else:
                                        _8335 = mem[(32 * idx) + _5273 + 32]
                                        _8336 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_8336 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_8336 + 36] = _7689
                                        mem[_8336 + 68] = 0
                                        mem[_8336 + 100] = this.address
                                        mem[_8336 + 132] = 128
                                        mem[_8336 + 164] = mem[_8336]
                                        s = 0
                                        while s < mem[_8336]:
                                            mem[s + _8336 + 196] = mem[s + _8336 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_8336]) > mem[_8336]:
                                            mem[mem[_8336] + _8336 + 196] = 0
                                        require ext_code.size(address(_8335))
                                        call address(_8335).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _7689, 0, address(this.address), 128, mem[_8336], mem[_8336 + 196 len ceil32(mem[_8336])]
                                else:
                                    require idx + 1 < mem[_5273]
                                    _7854 = mem[(32 * idx + 1) + _5273 + 32]
                                    require idx < mem[_5274]
                                    require idx < mem[_5273]
                                    if not mem[(32 * idx) + _5274 + 32]:
                                        _8727 = mem[(32 * idx) + _5273 + 32]
                                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = _7689
                                        mem[mem[64] + 36] = 0
                                        mem[mem[64] + 68] = address(_7854)
                                        require ext_code.size(address(_8727))
                                        call address(_8727).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                             gas gas_remaining wei
                                            args _7689, 0, address(_7854)
                                    else:
                                        _8729 = mem[(32 * idx) + _5273 + 32]
                                        _8730 = mem[64]
                                        mem[64] = mem[64] + 32
                                        mem[_8730 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                        mem[_8730 + 36] = _7689
                                        mem[_8730 + 68] = 0
                                        mem[_8730 + 100] = address(_7854)
                                        mem[_8730 + 132] = 128
                                        mem[_8730 + 164] = mem[_8730]
                                        s = 0
                                        while s < mem[_8730]:
                                            mem[s + _8730 + 196] = mem[s + _8730 + 32]
                                            s = s + 32
                                            continue 
                                        if ceil32(mem[_8730]) > mem[_8730]:
                                            mem[mem[_8730] + _8730 + 196] = 0
                                        require ext_code.size(address(_8729))
                                        call address(_8729).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                             gas gas_remaining wei
                                            args _7689, 0, address(_7854), 128, mem[_8730], mem[_8730 + 196 len ceil32(mem[_8730])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        continue 
                    mem[mem[64]] = 32
                    _7640 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                    mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                    mem[mem[64] + 64 len 32 * _7640] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224 len 32 * _7640]
                    return 32, mem[mem[64] + 32 len (32 * _7640) + 32]
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper::safeTransfer: transfer failed'
                _5394 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
                mem[_5394] = ('cd', 68).length
                mem[_5394 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
                mem[_5394 + (32 * ('cd', 68).length) + 32] = 0
                _5395 = mem[64]
                mem[64] = (32 * ('cd', 100).length) + mem[64] + 32
                mem[_5395] = ('cd', 100).length
                mem[_5395 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
                mem[_5395 + (32 * ('cd', 100).length) + 32] = 0
                _5396 = mem[64]
                mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
                mem[_5396] = ('cd', 164).length
                mem[_5396 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
                mem[_5396 + (32 * ('cd', 164).length) + 32] = 0
                idx = 0
                while idx < ('cd', 68).length - 1:
                    require idx < mem[_5394]
                    require idx + 1 < mem[_5394]
                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                    if mem[(32 * idx) + _5394 + 44 len 20] < mem[(32 * idx + 1) + _5394 + 44 len 20]:
                        _7690 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                        if mem[(32 * idx) + _5394 + 44 len 20] == mem[(32 * idx) + _5394 + 44 len 20]:
                            if idx >= mem[_5394] - 2:
                                require idx < mem[_5396]
                                require idx < mem[_5395]
                                if not mem[(32 * idx) + _5396 + 32]:
                                    _8340 = mem[(32 * idx) + _5395 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _7690
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_8340))
                                    call address(_8340).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _7690, this.address
                                else:
                                    _8342 = mem[(32 * idx) + _5395 + 32]
                                    _8343 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8343 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8343 + 36] = 0
                                    mem[_8343 + 68] = _7690
                                    mem[_8343 + 100] = this.address
                                    mem[_8343 + 132] = 128
                                    mem[_8343 + 164] = mem[_8343]
                                    s = 0
                                    while s < mem[_8343]:
                                        mem[s + _8343 + 196] = mem[s + _8343 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8343]) > mem[_8343]:
                                        mem[mem[_8343] + _8343 + 196] = 0
                                    require ext_code.size(address(_8342))
                                    call address(_8342).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _7690, address(this.address), 128, mem[_8343], mem[_8343 + 196 len ceil32(mem[_8343])]
                            else:
                                require idx + 1 < mem[_5395]
                                _7856 = mem[(32 * idx + 1) + _5395 + 32]
                                require idx < mem[_5396]
                                require idx < mem[_5395]
                                if not mem[(32 * idx) + _5396 + 32]:
                                    _8732 = mem[(32 * idx) + _5395 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _7690
                                    mem[mem[64] + 68] = address(_7856)
                                    require ext_code.size(address(_8732))
                                    call address(_8732).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _7690, address(_7856)
                                else:
                                    _8734 = mem[(32 * idx) + _5395 + 32]
                                    _8735 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8735 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8735 + 36] = 0
                                    mem[_8735 + 68] = _7690
                                    mem[_8735 + 100] = address(_7856)
                                    mem[_8735 + 132] = 128
                                    mem[_8735 + 164] = mem[_8735]
                                    s = 0
                                    while s < mem[_8735]:
                                        mem[s + _8735 + 196] = mem[s + _8735 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8735]) > mem[_8735]:
                                        mem[mem[_8735] + _8735 + 196] = 0
                                    require ext_code.size(address(_8734))
                                    call address(_8734).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _7690, address(_7856), 128, mem[_8735], mem[_8735 + 196 len ceil32(mem[_8735])]
                        else:
                            if idx >= mem[_5394] - 2:
                                require idx < mem[_5396]
                                require idx < mem[_5395]
                                if not mem[(32 * idx) + _5396 + 32]:
                                    _8346 = mem[(32 * idx) + _5395 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _7690
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_8346))
                                    call address(_8346).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _7690, 0, this.address
                                else:
                                    _8348 = mem[(32 * idx) + _5395 + 32]
                                    _8349 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8349 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8349 + 36] = _7690
                                    mem[_8349 + 68] = 0
                                    mem[_8349 + 100] = this.address
                                    mem[_8349 + 132] = 128
                                    mem[_8349 + 164] = mem[_8349]
                                    s = 0
                                    while s < mem[_8349]:
                                        mem[s + _8349 + 196] = mem[s + _8349 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8349]) > mem[_8349]:
                                        mem[mem[_8349] + _8349 + 196] = 0
                                    require ext_code.size(address(_8348))
                                    call address(_8348).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _7690, 0, address(this.address), 128, mem[_8349], mem[_8349 + 196 len ceil32(mem[_8349])]
                            else:
                                require idx + 1 < mem[_5395]
                                _7858 = mem[(32 * idx + 1) + _5395 + 32]
                                require idx < mem[_5396]
                                require idx < mem[_5395]
                                if not mem[(32 * idx) + _5396 + 32]:
                                    _8737 = mem[(32 * idx) + _5395 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _7690
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_7858)
                                    require ext_code.size(address(_8737))
                                    call address(_8737).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _7690, 0, address(_7858)
                                else:
                                    _8739 = mem[(32 * idx) + _5395 + 32]
                                    _8740 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8740 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8740 + 36] = _7690
                                    mem[_8740 + 68] = 0
                                    mem[_8740 + 100] = address(_7858)
                                    mem[_8740 + 132] = 128
                                    mem[_8740 + 164] = mem[_8740]
                                    s = 0
                                    while s < mem[_8740]:
                                        mem[s + _8740 + 196] = mem[s + _8740 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8740]) > mem[_8740]:
                                        mem[mem[_8740] + _8740 + 196] = 0
                                    require ext_code.size(address(_8739))
                                    call address(_8739).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _7690, 0, address(_7858), 128, mem[_8740], mem[_8740 + 196 len ceil32(mem[_8740])]
                    else:
                        _7691 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                        if mem[(32 * idx) + _5394 + 44 len 20] == mem[(32 * idx + 1) + _5394 + 44 len 20]:
                            if idx >= mem[_5394] - 2:
                                require idx < mem[_5396]
                                require idx < mem[_5395]
                                if not mem[(32 * idx) + _5396 + 32]:
                                    _8352 = mem[(32 * idx) + _5395 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _7691
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_8352))
                                    call address(_8352).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _7691, this.address
                                else:
                                    _8354 = mem[(32 * idx) + _5395 + 32]
                                    _8355 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8355 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8355 + 36] = 0
                                    mem[_8355 + 68] = _7691
                                    mem[_8355 + 100] = this.address
                                    mem[_8355 + 132] = 128
                                    mem[_8355 + 164] = mem[_8355]
                                    s = 0
                                    while s < mem[_8355]:
                                        mem[s + _8355 + 196] = mem[s + _8355 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8355]) > mem[_8355]:
                                        mem[mem[_8355] + _8355 + 196] = 0
                                    require ext_code.size(address(_8354))
                                    call address(_8354).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _7691, address(this.address), 128, mem[_8355], mem[_8355 + 196 len ceil32(mem[_8355])]
                            else:
                                require idx + 1 < mem[_5395]
                                _7860 = mem[(32 * idx + 1) + _5395 + 32]
                                require idx < mem[_5396]
                                require idx < mem[_5395]
                                if not mem[(32 * idx) + _5396 + 32]:
                                    _8742 = mem[(32 * idx) + _5395 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _7691
                                    mem[mem[64] + 68] = address(_7860)
                                    require ext_code.size(address(_8742))
                                    call address(_8742).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _7691, address(_7860)
                                else:
                                    _8744 = mem[(32 * idx) + _5395 + 32]
                                    _8745 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8745 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8745 + 36] = 0
                                    mem[_8745 + 68] = _7691
                                    mem[_8745 + 100] = address(_7860)
                                    mem[_8745 + 132] = 128
                                    mem[_8745 + 164] = mem[_8745]
                                    s = 0
                                    while s < mem[_8745]:
                                        mem[s + _8745 + 196] = mem[s + _8745 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8745]) > mem[_8745]:
                                        mem[mem[_8745] + _8745 + 196] = 0
                                    require ext_code.size(address(_8744))
                                    call address(_8744).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _7691, address(_7860), 128, mem[_8745], mem[_8745 + 196 len ceil32(mem[_8745])]
                        else:
                            if idx >= mem[_5394] - 2:
                                require idx < mem[_5396]
                                require idx < mem[_5395]
                                if not mem[(32 * idx) + _5396 + 32]:
                                    _8358 = mem[(32 * idx) + _5395 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _7691
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_8358))
                                    call address(_8358).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _7691, 0, this.address
                                else:
                                    _8360 = mem[(32 * idx) + _5395 + 32]
                                    _8361 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8361 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8361 + 36] = _7691
                                    mem[_8361 + 68] = 0
                                    mem[_8361 + 100] = this.address
                                    mem[_8361 + 132] = 128
                                    mem[_8361 + 164] = mem[_8361]
                                    s = 0
                                    while s < mem[_8361]:
                                        mem[s + _8361 + 196] = mem[s + _8361 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8361]) > mem[_8361]:
                                        mem[mem[_8361] + _8361 + 196] = 0
                                    require ext_code.size(address(_8360))
                                    call address(_8360).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _7691, 0, address(this.address), 128, mem[_8361], mem[_8361 + 196 len ceil32(mem[_8361])]
                            else:
                                require idx + 1 < mem[_5395]
                                _7862 = mem[(32 * idx + 1) + _5395 + 32]
                                require idx < mem[_5396]
                                require idx < mem[_5395]
                                if not mem[(32 * idx) + _5396 + 32]:
                                    _8747 = mem[(32 * idx) + _5395 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _7691
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_7862)
                                    require ext_code.size(address(_8747))
                                    call address(_8747).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _7691, 0, address(_7862)
                                else:
                                    _8749 = mem[(32 * idx) + _5395 + 32]
                                    _8750 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8750 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8750 + 36] = _7691
                                    mem[_8750 + 68] = 0
                                    mem[_8750 + 100] = address(_7862)
                                    mem[_8750 + 132] = 128
                                    mem[_8750 + 164] = mem[_8750]
                                    s = 0
                                    while s < mem[_8750]:
                                        mem[s + _8750 + 196] = mem[s + _8750 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8750]) > mem[_8750]:
                                        mem[mem[_8750] + _8750 + 196] = 0
                                    require ext_code.size(address(_8749))
                                    call address(_8749).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _7691, 0, address(_7862), 128, mem[_8750], mem[_8750 + 196 len ceil32(mem[_8750])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                _7641 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                mem[mem[64] + 64 len 32 * _7641] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224 len 32 * _7641]
                return 32, mem[mem[64] + 32 len (32 * _7641) + 32]
            _5244 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_5244] = return_data.size
            mem[_5244 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            if not return_data.size:
                _5275 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
                mem[_5275] = ('cd', 68).length
                mem[_5275 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
                mem[_5275 + (32 * ('cd', 68).length) + 32] = 0
                _5276 = mem[64]
                mem[64] = (32 * ('cd', 100).length) + mem[64] + 32
                mem[_5276] = ('cd', 100).length
                mem[_5276 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
                mem[_5276 + (32 * ('cd', 100).length) + 32] = 0
                _5277 = mem[64]
                mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
                mem[_5277] = ('cd', 164).length
                mem[_5277 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
                mem[_5277 + (32 * ('cd', 164).length) + 32] = 0
                idx = 0
                while idx < ('cd', 68).length - 1:
                    require idx < mem[_5275]
                    require idx + 1 < mem[_5275]
                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                    if mem[(32 * idx) + _5275 + 44 len 20] < mem[(32 * idx + 1) + _5275 + 44 len 20]:
                        _7692 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                        if mem[(32 * idx) + _5275 + 44 len 20] == mem[(32 * idx) + _5275 + 44 len 20]:
                            if idx >= mem[_5275] - 2:
                                require idx < mem[_5277]
                                require idx < mem[_5276]
                                if not mem[(32 * idx) + _5277 + 32]:
                                    _8365 = mem[(32 * idx) + _5276 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _7692
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_8365))
                                    call address(_8365).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _7692, this.address
                                else:
                                    _8367 = mem[(32 * idx) + _5276 + 32]
                                    _8368 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8368 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8368 + 36] = 0
                                    mem[_8368 + 68] = _7692
                                    mem[_8368 + 100] = this.address
                                    mem[_8368 + 132] = 128
                                    mem[_8368 + 164] = mem[_8368]
                                    s = 0
                                    while s < mem[_8368]:
                                        mem[s + _8368 + 196] = mem[s + _8368 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8368]) > mem[_8368]:
                                        mem[mem[_8368] + _8368 + 196] = 0
                                    require ext_code.size(address(_8367))
                                    call address(_8367).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _7692, address(this.address), 128, mem[_8368], mem[_8368 + 196 len ceil32(mem[_8368])]
                            else:
                                require idx + 1 < mem[_5276]
                                _7864 = mem[(32 * idx + 1) + _5276 + 32]
                                require idx < mem[_5277]
                                require idx < mem[_5276]
                                if not mem[(32 * idx) + _5277 + 32]:
                                    _8752 = mem[(32 * idx) + _5276 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _7692
                                    mem[mem[64] + 68] = address(_7864)
                                    require ext_code.size(address(_8752))
                                    call address(_8752).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _7692, address(_7864)
                                else:
                                    _8754 = mem[(32 * idx) + _5276 + 32]
                                    _8755 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8755 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8755 + 36] = 0
                                    mem[_8755 + 68] = _7692
                                    mem[_8755 + 100] = address(_7864)
                                    mem[_8755 + 132] = 128
                                    mem[_8755 + 164] = mem[_8755]
                                    s = 0
                                    while s < mem[_8755]:
                                        mem[s + _8755 + 196] = mem[s + _8755 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8755]) > mem[_8755]:
                                        mem[mem[_8755] + _8755 + 196] = 0
                                    require ext_code.size(address(_8754))
                                    call address(_8754).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _7692, address(_7864), 128, mem[_8755], mem[_8755 + 196 len ceil32(mem[_8755])]
                        else:
                            if idx >= mem[_5275] - 2:
                                require idx < mem[_5277]
                                require idx < mem[_5276]
                                if not mem[(32 * idx) + _5277 + 32]:
                                    _8371 = mem[(32 * idx) + _5276 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _7692
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_8371))
                                    call address(_8371).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _7692, 0, this.address
                                else:
                                    _8373 = mem[(32 * idx) + _5276 + 32]
                                    _8374 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8374 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8374 + 36] = _7692
                                    mem[_8374 + 68] = 0
                                    mem[_8374 + 100] = this.address
                                    mem[_8374 + 132] = 128
                                    mem[_8374 + 164] = mem[_8374]
                                    s = 0
                                    while s < mem[_8374]:
                                        mem[s + _8374 + 196] = mem[s + _8374 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8374]) > mem[_8374]:
                                        mem[mem[_8374] + _8374 + 196] = 0
                                    require ext_code.size(address(_8373))
                                    call address(_8373).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _7692, 0, address(this.address), 128, mem[_8374], mem[_8374 + 196 len ceil32(mem[_8374])]
                            else:
                                require idx + 1 < mem[_5276]
                                _7866 = mem[(32 * idx + 1) + _5276 + 32]
                                require idx < mem[_5277]
                                require idx < mem[_5276]
                                if not mem[(32 * idx) + _5277 + 32]:
                                    _8757 = mem[(32 * idx) + _5276 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _7692
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_7866)
                                    require ext_code.size(address(_8757))
                                    call address(_8757).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _7692, 0, address(_7866)
                                else:
                                    _8759 = mem[(32 * idx) + _5276 + 32]
                                    _8760 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8760 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8760 + 36] = _7692
                                    mem[_8760 + 68] = 0
                                    mem[_8760 + 100] = address(_7866)
                                    mem[_8760 + 132] = 128
                                    mem[_8760 + 164] = mem[_8760]
                                    s = 0
                                    while s < mem[_8760]:
                                        mem[s + _8760 + 196] = mem[s + _8760 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8760]) > mem[_8760]:
                                        mem[mem[_8760] + _8760 + 196] = 0
                                    require ext_code.size(address(_8759))
                                    call address(_8759).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _7692, 0, address(_7866), 128, mem[_8760], mem[_8760 + 196 len ceil32(mem[_8760])]
                    else:
                        _7693 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                        if mem[(32 * idx) + _5275 + 44 len 20] == mem[(32 * idx + 1) + _5275 + 44 len 20]:
                            if idx >= mem[_5275] - 2:
                                require idx < mem[_5277]
                                require idx < mem[_5276]
                                if not mem[(32 * idx) + _5277 + 32]:
                                    _8377 = mem[(32 * idx) + _5276 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _7693
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_8377))
                                    call address(_8377).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _7693, this.address
                                else:
                                    _8379 = mem[(32 * idx) + _5276 + 32]
                                    _8380 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8380 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8380 + 36] = 0
                                    mem[_8380 + 68] = _7693
                                    mem[_8380 + 100] = this.address
                                    mem[_8380 + 132] = 128
                                    mem[_8380 + 164] = mem[_8380]
                                    s = 0
                                    while s < mem[_8380]:
                                        mem[s + _8380 + 196] = mem[s + _8380 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8380]) > mem[_8380]:
                                        mem[mem[_8380] + _8380 + 196] = 0
                                    require ext_code.size(address(_8379))
                                    call address(_8379).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _7693, address(this.address), 128, mem[_8380], mem[_8380 + 196 len ceil32(mem[_8380])]
                            else:
                                require idx + 1 < mem[_5276]
                                _7868 = mem[(32 * idx + 1) + _5276 + 32]
                                require idx < mem[_5277]
                                require idx < mem[_5276]
                                if not mem[(32 * idx) + _5277 + 32]:
                                    _8762 = mem[(32 * idx) + _5276 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _7693
                                    mem[mem[64] + 68] = address(_7868)
                                    require ext_code.size(address(_8762))
                                    call address(_8762).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _7693, address(_7868)
                                else:
                                    _8764 = mem[(32 * idx) + _5276 + 32]
                                    _8765 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8765 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8765 + 36] = 0
                                    mem[_8765 + 68] = _7693
                                    mem[_8765 + 100] = address(_7868)
                                    mem[_8765 + 132] = 128
                                    mem[_8765 + 164] = mem[_8765]
                                    s = 0
                                    while s < mem[_8765]:
                                        mem[s + _8765 + 196] = mem[s + _8765 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8765]) > mem[_8765]:
                                        mem[mem[_8765] + _8765 + 196] = 0
                                    require ext_code.size(address(_8764))
                                    call address(_8764).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _7693, address(_7868), 128, mem[_8765], mem[_8765 + 196 len ceil32(mem[_8765])]
                        else:
                            if idx >= mem[_5275] - 2:
                                require idx < mem[_5277]
                                require idx < mem[_5276]
                                if not mem[(32 * idx) + _5277 + 32]:
                                    _8383 = mem[(32 * idx) + _5276 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _7693
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_8383))
                                    call address(_8383).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _7693, 0, this.address
                                else:
                                    _8385 = mem[(32 * idx) + _5276 + 32]
                                    _8386 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8386 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8386 + 36] = _7693
                                    mem[_8386 + 68] = 0
                                    mem[_8386 + 100] = this.address
                                    mem[_8386 + 132] = 128
                                    mem[_8386 + 164] = mem[_8386]
                                    s = 0
                                    while s < mem[_8386]:
                                        mem[s + _8386 + 196] = mem[s + _8386 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8386]) > mem[_8386]:
                                        mem[mem[_8386] + _8386 + 196] = 0
                                    require ext_code.size(address(_8385))
                                    call address(_8385).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _7693, 0, address(this.address), 128, mem[_8386], mem[_8386 + 196 len ceil32(mem[_8386])]
                            else:
                                require idx + 1 < mem[_5276]
                                _7870 = mem[(32 * idx + 1) + _5276 + 32]
                                require idx < mem[_5277]
                                require idx < mem[_5276]
                                if not mem[(32 * idx) + _5277 + 32]:
                                    _8767 = mem[(32 * idx) + _5276 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _7693
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_7870)
                                    require ext_code.size(address(_8767))
                                    call address(_8767).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _7693, 0, address(_7870)
                                else:
                                    _8769 = mem[(32 * idx) + _5276 + 32]
                                    _8770 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8770 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8770 + 36] = _7693
                                    mem[_8770 + 68] = 0
                                    mem[_8770 + 100] = address(_7870)
                                    mem[_8770 + 132] = 128
                                    mem[_8770 + 164] = mem[_8770]
                                    s = 0
                                    while s < mem[_8770]:
                                        mem[s + _8770 + 196] = mem[s + _8770 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8770]) > mem[_8770]:
                                        mem[mem[_8770] + _8770 + 196] = 0
                                    require ext_code.size(address(_8769))
                                    call address(_8769).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _7693, 0, address(_7870), 128, mem[_8770], mem[_8770 + 196 len ceil32(mem[_8770])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                _7642 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                mem[mem[64] + 64 len 32 * _7642] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224 len 32 * _7642]
                return 32, mem[mem[64] + 32 len (32 * _7642) + 32]
            require return_data.size >= 32
            require mem[_5244 + 32] == bool(mem[_5244 + 32])
            if not mem[_5244 + 32]:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            _5399 = mem[64]
            mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
            mem[_5399] = ('cd', 68).length
            mem[_5399 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
            mem[_5399 + (32 * ('cd', 68).length) + 32] = 0
            _5400 = mem[64]
            mem[64] = (32 * ('cd', 100).length) + mem[64] + 32
            mem[_5400] = ('cd', 100).length
            mem[_5400 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
            mem[_5400 + (32 * ('cd', 100).length) + 32] = 0
            _5401 = mem[64]
            mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
            mem[_5401] = ('cd', 164).length
            mem[_5401 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
            mem[_5401 + (32 * ('cd', 164).length) + 32] = 0
            idx = 0
            while idx < ('cd', 68).length - 1:
                require idx < mem[_5399]
                require idx + 1 < mem[_5399]
                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                if mem[(32 * idx) + _5399 + 44 len 20] < mem[(32 * idx + 1) + _5399 + 44 len 20]:
                    _7694 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                    if mem[(32 * idx) + _5399 + 44 len 20] == mem[(32 * idx) + _5399 + 44 len 20]:
                        if idx >= mem[_5399] - 2:
                            require idx < mem[_5401]
                            require idx < mem[_5400]
                            if not mem[(32 * idx) + _5401 + 32]:
                                _8390 = mem[(32 * idx) + _5400 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7694
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8390))
                                call address(_8390).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7694, this.address
                            else:
                                _8392 = mem[(32 * idx) + _5400 + 32]
                                _8393 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8393 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8393 + 36] = 0
                                mem[_8393 + 68] = _7694
                                mem[_8393 + 100] = this.address
                                mem[_8393 + 132] = 128
                                mem[_8393 + 164] = mem[_8393]
                                s = 0
                                while s < mem[_8393]:
                                    mem[s + _8393 + 196] = mem[s + _8393 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8393]) > mem[_8393]:
                                    mem[mem[_8393] + _8393 + 196] = 0
                                require ext_code.size(address(_8392))
                                call address(_8392).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7694, address(this.address), 128, mem[_8393], mem[_8393 + 196 len ceil32(mem[_8393])]
                        else:
                            require idx + 1 < mem[_5400]
                            _7872 = mem[(32 * idx + 1) + _5400 + 32]
                            require idx < mem[_5401]
                            require idx < mem[_5400]
                            if not mem[(32 * idx) + _5401 + 32]:
                                _8772 = mem[(32 * idx) + _5400 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7694
                                mem[mem[64] + 68] = address(_7872)
                                require ext_code.size(address(_8772))
                                call address(_8772).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7694, address(_7872)
                            else:
                                _8774 = mem[(32 * idx) + _5400 + 32]
                                _8775 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8775 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8775 + 36] = 0
                                mem[_8775 + 68] = _7694
                                mem[_8775 + 100] = address(_7872)
                                mem[_8775 + 132] = 128
                                mem[_8775 + 164] = mem[_8775]
                                s = 0
                                while s < mem[_8775]:
                                    mem[s + _8775 + 196] = mem[s + _8775 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8775]) > mem[_8775]:
                                    mem[mem[_8775] + _8775 + 196] = 0
                                require ext_code.size(address(_8774))
                                call address(_8774).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7694, address(_7872), 128, mem[_8775], mem[_8775 + 196 len ceil32(mem[_8775])]
                    else:
                        if idx >= mem[_5399] - 2:
                            require idx < mem[_5401]
                            require idx < mem[_5400]
                            if not mem[(32 * idx) + _5401 + 32]:
                                _8396 = mem[(32 * idx) + _5400 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7694
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8396))
                                call address(_8396).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7694, 0, this.address
                            else:
                                _8398 = mem[(32 * idx) + _5400 + 32]
                                _8399 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8399 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8399 + 36] = _7694
                                mem[_8399 + 68] = 0
                                mem[_8399 + 100] = this.address
                                mem[_8399 + 132] = 128
                                mem[_8399 + 164] = mem[_8399]
                                s = 0
                                while s < mem[_8399]:
                                    mem[s + _8399 + 196] = mem[s + _8399 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8399]) > mem[_8399]:
                                    mem[mem[_8399] + _8399 + 196] = 0
                                require ext_code.size(address(_8398))
                                call address(_8398).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7694, 0, address(this.address), 128, mem[_8399], mem[_8399 + 196 len ceil32(mem[_8399])]
                        else:
                            require idx + 1 < mem[_5400]
                            _7874 = mem[(32 * idx + 1) + _5400 + 32]
                            require idx < mem[_5401]
                            require idx < mem[_5400]
                            if not mem[(32 * idx) + _5401 + 32]:
                                _8777 = mem[(32 * idx) + _5400 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7694
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_7874)
                                require ext_code.size(address(_8777))
                                call address(_8777).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7694, 0, address(_7874)
                            else:
                                _8779 = mem[(32 * idx) + _5400 + 32]
                                _8780 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8780 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8780 + 36] = _7694
                                mem[_8780 + 68] = 0
                                mem[_8780 + 100] = address(_7874)
                                mem[_8780 + 132] = 128
                                mem[_8780 + 164] = mem[_8780]
                                s = 0
                                while s < mem[_8780]:
                                    mem[s + _8780 + 196] = mem[s + _8780 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8780]) > mem[_8780]:
                                    mem[mem[_8780] + _8780 + 196] = 0
                                require ext_code.size(address(_8779))
                                call address(_8779).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7694, 0, address(_7874), 128, mem[_8780], mem[_8780 + 196 len ceil32(mem[_8780])]
                else:
                    _7695 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                    if mem[(32 * idx) + _5399 + 44 len 20] == mem[(32 * idx + 1) + _5399 + 44 len 20]:
                        if idx >= mem[_5399] - 2:
                            require idx < mem[_5401]
                            require idx < mem[_5400]
                            if not mem[(32 * idx) + _5401 + 32]:
                                _8402 = mem[(32 * idx) + _5400 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7695
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8402))
                                call address(_8402).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7695, this.address
                            else:
                                _8404 = mem[(32 * idx) + _5400 + 32]
                                _8405 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8405 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8405 + 36] = 0
                                mem[_8405 + 68] = _7695
                                mem[_8405 + 100] = this.address
                                mem[_8405 + 132] = 128
                                mem[_8405 + 164] = mem[_8405]
                                s = 0
                                while s < mem[_8405]:
                                    mem[s + _8405 + 196] = mem[s + _8405 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8405]) > mem[_8405]:
                                    mem[mem[_8405] + _8405 + 196] = 0
                                require ext_code.size(address(_8404))
                                call address(_8404).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7695, address(this.address), 128, mem[_8405], mem[_8405 + 196 len ceil32(mem[_8405])]
                        else:
                            require idx + 1 < mem[_5400]
                            _7876 = mem[(32 * idx + 1) + _5400 + 32]
                            require idx < mem[_5401]
                            require idx < mem[_5400]
                            if not mem[(32 * idx) + _5401 + 32]:
                                _8782 = mem[(32 * idx) + _5400 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7695
                                mem[mem[64] + 68] = address(_7876)
                                require ext_code.size(address(_8782))
                                call address(_8782).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7695, address(_7876)
                            else:
                                _8784 = mem[(32 * idx) + _5400 + 32]
                                _8785 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8785 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8785 + 36] = 0
                                mem[_8785 + 68] = _7695
                                mem[_8785 + 100] = address(_7876)
                                mem[_8785 + 132] = 128
                                mem[_8785 + 164] = mem[_8785]
                                s = 0
                                while s < mem[_8785]:
                                    mem[s + _8785 + 196] = mem[s + _8785 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8785]) > mem[_8785]:
                                    mem[mem[_8785] + _8785 + 196] = 0
                                require ext_code.size(address(_8784))
                                call address(_8784).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7695, address(_7876), 128, mem[_8785], mem[_8785 + 196 len ceil32(mem[_8785])]
                    else:
                        if idx >= mem[_5399] - 2:
                            require idx < mem[_5401]
                            require idx < mem[_5400]
                            if not mem[(32 * idx) + _5401 + 32]:
                                _8408 = mem[(32 * idx) + _5400 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7695
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8408))
                                call address(_8408).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7695, 0, this.address
                            else:
                                _8410 = mem[(32 * idx) + _5400 + 32]
                                _8411 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8411 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8411 + 36] = _7695
                                mem[_8411 + 68] = 0
                                mem[_8411 + 100] = this.address
                                mem[_8411 + 132] = 128
                                mem[_8411 + 164] = mem[_8411]
                                s = 0
                                while s < mem[_8411]:
                                    mem[s + _8411 + 196] = mem[s + _8411 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8411]) > mem[_8411]:
                                    mem[mem[_8411] + _8411 + 196] = 0
                                require ext_code.size(address(_8410))
                                call address(_8410).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7695, 0, address(this.address), 128, mem[_8411], mem[_8411 + 196 len ceil32(mem[_8411])]
                        else:
                            require idx + 1 < mem[_5400]
                            _7878 = mem[(32 * idx + 1) + _5400 + 32]
                            require idx < mem[_5401]
                            require idx < mem[_5400]
                            if not mem[(32 * idx) + _5401 + 32]:
                                _8787 = mem[(32 * idx) + _5400 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7695
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_7878)
                                require ext_code.size(address(_8787))
                                call address(_8787).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7695, 0, address(_7878)
                            else:
                                _8789 = mem[(32 * idx) + _5400 + 32]
                                _8790 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8790 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8790 + 36] = _7695
                                mem[_8790 + 68] = 0
                                mem[_8790 + 100] = address(_7878)
                                mem[_8790 + 132] = 128
                                mem[_8790 + 164] = mem[_8790]
                                s = 0
                                while s < mem[_8790]:
                                    mem[s + _8790 + 196] = mem[s + _8790 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8790]) > mem[_8790]:
                                    mem[mem[_8790] + _8790 + 196] = 0
                                require ext_code.size(address(_8789))
                                call address(_8789).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7695, 0, address(_7878), 128, mem[_8790], mem[_8790 + 196 len ceil32(mem[_8790])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _7643 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
            mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
            mem[mem[64] + 64 len 32 * _7643] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224 len 32 * _7643]
            return 32, mem[mem[64] + 32 len (32 * _7643) + 32]
        mem[_2738 + _2690 + 100] = 0
        call address(('cd', 68)[0]) with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _2738 + _2690 + -mem[64] + 96]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            if not mem[96]:
                _5278 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
                mem[_5278] = ('cd', 68).length
                mem[_5278 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
                mem[_5278 + (32 * ('cd', 68).length) + 32] = 0
                _5279 = mem[64]
                mem[64] = (32 * ('cd', 100).length) + mem[64] + 32
                mem[_5279] = ('cd', 100).length
                mem[_5279 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
                mem[_5279 + (32 * ('cd', 100).length) + 32] = 0
                _5280 = mem[64]
                mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
                mem[_5280] = ('cd', 164).length
                mem[_5280 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
                mem[_5280 + (32 * ('cd', 164).length) + 32] = 0
                idx = 0
                while idx < ('cd', 68).length - 1:
                    require idx < mem[_5278]
                    require idx + 1 < mem[_5278]
                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                    if mem[(32 * idx) + _5278 + 44 len 20] < mem[(32 * idx + 1) + _5278 + 44 len 20]:
                        _7696 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                        if mem[(32 * idx) + _5278 + 44 len 20] == mem[(32 * idx) + _5278 + 44 len 20]:
                            if idx >= mem[_5278] - 2:
                                require idx < mem[_5280]
                                require idx < mem[_5279]
                                if not mem[(32 * idx) + _5280 + 32]:
                                    _8415 = mem[(32 * idx) + _5279 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _7696
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_8415))
                                    call address(_8415).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _7696, this.address
                                else:
                                    _8417 = mem[(32 * idx) + _5279 + 32]
                                    _8418 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8418 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8418 + 36] = 0
                                    mem[_8418 + 68] = _7696
                                    mem[_8418 + 100] = this.address
                                    mem[_8418 + 132] = 128
                                    mem[_8418 + 164] = mem[_8418]
                                    s = 0
                                    while s < mem[_8418]:
                                        mem[s + _8418 + 196] = mem[s + _8418 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8418]) > mem[_8418]:
                                        mem[mem[_8418] + _8418 + 196] = 0
                                    require ext_code.size(address(_8417))
                                    call address(_8417).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _7696, address(this.address), 128, mem[_8418], mem[_8418 + 196 len ceil32(mem[_8418])]
                            else:
                                require idx + 1 < mem[_5279]
                                _7880 = mem[(32 * idx + 1) + _5279 + 32]
                                require idx < mem[_5280]
                                require idx < mem[_5279]
                                if not mem[(32 * idx) + _5280 + 32]:
                                    _8792 = mem[(32 * idx) + _5279 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _7696
                                    mem[mem[64] + 68] = address(_7880)
                                    require ext_code.size(address(_8792))
                                    call address(_8792).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _7696, address(_7880)
                                else:
                                    _8794 = mem[(32 * idx) + _5279 + 32]
                                    _8795 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8795 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8795 + 36] = 0
                                    mem[_8795 + 68] = _7696
                                    mem[_8795 + 100] = address(_7880)
                                    mem[_8795 + 132] = 128
                                    mem[_8795 + 164] = mem[_8795]
                                    s = 0
                                    while s < mem[_8795]:
                                        mem[s + _8795 + 196] = mem[s + _8795 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8795]) > mem[_8795]:
                                        mem[mem[_8795] + _8795 + 196] = 0
                                    require ext_code.size(address(_8794))
                                    call address(_8794).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _7696, address(_7880), 128, mem[_8795], mem[_8795 + 196 len ceil32(mem[_8795])]
                        else:
                            if idx >= mem[_5278] - 2:
                                require idx < mem[_5280]
                                require idx < mem[_5279]
                                if not mem[(32 * idx) + _5280 + 32]:
                                    _8421 = mem[(32 * idx) + _5279 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _7696
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_8421))
                                    call address(_8421).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _7696, 0, this.address
                                else:
                                    _8423 = mem[(32 * idx) + _5279 + 32]
                                    _8424 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8424 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8424 + 36] = _7696
                                    mem[_8424 + 68] = 0
                                    mem[_8424 + 100] = this.address
                                    mem[_8424 + 132] = 128
                                    mem[_8424 + 164] = mem[_8424]
                                    s = 0
                                    while s < mem[_8424]:
                                        mem[s + _8424 + 196] = mem[s + _8424 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8424]) > mem[_8424]:
                                        mem[mem[_8424] + _8424 + 196] = 0
                                    require ext_code.size(address(_8423))
                                    call address(_8423).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _7696, 0, address(this.address), 128, mem[_8424], mem[_8424 + 196 len ceil32(mem[_8424])]
                            else:
                                require idx + 1 < mem[_5279]
                                _7882 = mem[(32 * idx + 1) + _5279 + 32]
                                require idx < mem[_5280]
                                require idx < mem[_5279]
                                if not mem[(32 * idx) + _5280 + 32]:
                                    _8797 = mem[(32 * idx) + _5279 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _7696
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_7882)
                                    require ext_code.size(address(_8797))
                                    call address(_8797).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _7696, 0, address(_7882)
                                else:
                                    _8799 = mem[(32 * idx) + _5279 + 32]
                                    _8800 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8800 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8800 + 36] = _7696
                                    mem[_8800 + 68] = 0
                                    mem[_8800 + 100] = address(_7882)
                                    mem[_8800 + 132] = 128
                                    mem[_8800 + 164] = mem[_8800]
                                    s = 0
                                    while s < mem[_8800]:
                                        mem[s + _8800 + 196] = mem[s + _8800 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8800]) > mem[_8800]:
                                        mem[mem[_8800] + _8800 + 196] = 0
                                    require ext_code.size(address(_8799))
                                    call address(_8799).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _7696, 0, address(_7882), 128, mem[_8800], mem[_8800 + 196 len ceil32(mem[_8800])]
                    else:
                        _7697 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                        if mem[(32 * idx) + _5278 + 44 len 20] == mem[(32 * idx + 1) + _5278 + 44 len 20]:
                            if idx >= mem[_5278] - 2:
                                require idx < mem[_5280]
                                require idx < mem[_5279]
                                if not mem[(32 * idx) + _5280 + 32]:
                                    _8427 = mem[(32 * idx) + _5279 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _7697
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_8427))
                                    call address(_8427).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _7697, this.address
                                else:
                                    _8429 = mem[(32 * idx) + _5279 + 32]
                                    _8430 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8430 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8430 + 36] = 0
                                    mem[_8430 + 68] = _7697
                                    mem[_8430 + 100] = this.address
                                    mem[_8430 + 132] = 128
                                    mem[_8430 + 164] = mem[_8430]
                                    s = 0
                                    while s < mem[_8430]:
                                        mem[s + _8430 + 196] = mem[s + _8430 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8430]) > mem[_8430]:
                                        mem[mem[_8430] + _8430 + 196] = 0
                                    require ext_code.size(address(_8429))
                                    call address(_8429).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _7697, address(this.address), 128, mem[_8430], mem[_8430 + 196 len ceil32(mem[_8430])]
                            else:
                                require idx + 1 < mem[_5279]
                                _7884 = mem[(32 * idx + 1) + _5279 + 32]
                                require idx < mem[_5280]
                                require idx < mem[_5279]
                                if not mem[(32 * idx) + _5280 + 32]:
                                    _8802 = mem[(32 * idx) + _5279 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _7697
                                    mem[mem[64] + 68] = address(_7884)
                                    require ext_code.size(address(_8802))
                                    call address(_8802).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _7697, address(_7884)
                                else:
                                    _8804 = mem[(32 * idx) + _5279 + 32]
                                    _8805 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8805 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8805 + 36] = 0
                                    mem[_8805 + 68] = _7697
                                    mem[_8805 + 100] = address(_7884)
                                    mem[_8805 + 132] = 128
                                    mem[_8805 + 164] = mem[_8805]
                                    s = 0
                                    while s < mem[_8805]:
                                        mem[s + _8805 + 196] = mem[s + _8805 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8805]) > mem[_8805]:
                                        mem[mem[_8805] + _8805 + 196] = 0
                                    require ext_code.size(address(_8804))
                                    call address(_8804).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _7697, address(_7884), 128, mem[_8805], mem[_8805 + 196 len ceil32(mem[_8805])]
                        else:
                            if idx >= mem[_5278] - 2:
                                require idx < mem[_5280]
                                require idx < mem[_5279]
                                if not mem[(32 * idx) + _5280 + 32]:
                                    _8433 = mem[(32 * idx) + _5279 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _7697
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_8433))
                                    call address(_8433).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _7697, 0, this.address
                                else:
                                    _8435 = mem[(32 * idx) + _5279 + 32]
                                    _8436 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8436 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8436 + 36] = _7697
                                    mem[_8436 + 68] = 0
                                    mem[_8436 + 100] = this.address
                                    mem[_8436 + 132] = 128
                                    mem[_8436 + 164] = mem[_8436]
                                    s = 0
                                    while s < mem[_8436]:
                                        mem[s + _8436 + 196] = mem[s + _8436 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8436]) > mem[_8436]:
                                        mem[mem[_8436] + _8436 + 196] = 0
                                    require ext_code.size(address(_8435))
                                    call address(_8435).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _7697, 0, address(this.address), 128, mem[_8436], mem[_8436 + 196 len ceil32(mem[_8436])]
                            else:
                                require idx + 1 < mem[_5279]
                                _7886 = mem[(32 * idx + 1) + _5279 + 32]
                                require idx < mem[_5280]
                                require idx < mem[_5279]
                                if not mem[(32 * idx) + _5280 + 32]:
                                    _8807 = mem[(32 * idx) + _5279 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _7697
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_7886)
                                    require ext_code.size(address(_8807))
                                    call address(_8807).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _7697, 0, address(_7886)
                                else:
                                    _8809 = mem[(32 * idx) + _5279 + 32]
                                    _8810 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8810 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8810 + 36] = _7697
                                    mem[_8810 + 68] = 0
                                    mem[_8810 + 100] = address(_7886)
                                    mem[_8810 + 132] = 128
                                    mem[_8810 + 164] = mem[_8810]
                                    s = 0
                                    while s < mem[_8810]:
                                        mem[s + _8810 + 196] = mem[s + _8810 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8810]) > mem[_8810]:
                                        mem[mem[_8810] + _8810 + 196] = 0
                                    require ext_code.size(address(_8809))
                                    call address(_8809).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _7697, 0, address(_7886), 128, mem[_8810], mem[_8810 + 196 len ceil32(mem[_8810])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                _7644 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                mem[mem[64] + 64 len 32 * _7644] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224 len 32 * _7644]
                return 32, mem[mem[64] + 32 len (32 * _7644) + 32]
            require mem[96] >= 32
            require mem[128] == bool(mem[128])
            if not mem[128]:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            _5404 = mem[64]
            mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
            mem[_5404] = ('cd', 68).length
            mem[_5404 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
            mem[_5404 + (32 * ('cd', 68).length) + 32] = 0
            _5405 = mem[64]
            mem[64] = (32 * ('cd', 100).length) + mem[64] + 32
            mem[_5405] = ('cd', 100).length
            mem[_5405 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
            mem[_5405 + (32 * ('cd', 100).length) + 32] = 0
            _5406 = mem[64]
            mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
            mem[_5406] = ('cd', 164).length
            mem[_5406 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
            mem[_5406 + (32 * ('cd', 164).length) + 32] = 0
            idx = 0
            while idx < ('cd', 68).length - 1:
                require idx < mem[_5404]
                require idx + 1 < mem[_5404]
                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                if mem[(32 * idx) + _5404 + 44 len 20] < mem[(32 * idx + 1) + _5404 + 44 len 20]:
                    _7698 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                    if mem[(32 * idx) + _5404 + 44 len 20] == mem[(32 * idx) + _5404 + 44 len 20]:
                        if idx >= mem[_5404] - 2:
                            require idx < mem[_5406]
                            require idx < mem[_5405]
                            if not mem[(32 * idx) + _5406 + 32]:
                                _8440 = mem[(32 * idx) + _5405 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7698
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8440))
                                call address(_8440).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7698, this.address
                            else:
                                _8442 = mem[(32 * idx) + _5405 + 32]
                                _8443 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8443 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8443 + 36] = 0
                                mem[_8443 + 68] = _7698
                                mem[_8443 + 100] = this.address
                                mem[_8443 + 132] = 128
                                mem[_8443 + 164] = mem[_8443]
                                s = 0
                                while s < mem[_8443]:
                                    mem[s + _8443 + 196] = mem[s + _8443 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8443]) > mem[_8443]:
                                    mem[mem[_8443] + _8443 + 196] = 0
                                require ext_code.size(address(_8442))
                                call address(_8442).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7698, address(this.address), 128, mem[_8443], mem[_8443 + 196 len ceil32(mem[_8443])]
                        else:
                            require idx + 1 < mem[_5405]
                            _7888 = mem[(32 * idx + 1) + _5405 + 32]
                            require idx < mem[_5406]
                            require idx < mem[_5405]
                            if not mem[(32 * idx) + _5406 + 32]:
                                _8812 = mem[(32 * idx) + _5405 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7698
                                mem[mem[64] + 68] = address(_7888)
                                require ext_code.size(address(_8812))
                                call address(_8812).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7698, address(_7888)
                            else:
                                _8814 = mem[(32 * idx) + _5405 + 32]
                                _8815 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8815 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8815 + 36] = 0
                                mem[_8815 + 68] = _7698
                                mem[_8815 + 100] = address(_7888)
                                mem[_8815 + 132] = 128
                                mem[_8815 + 164] = mem[_8815]
                                s = 0
                                while s < mem[_8815]:
                                    mem[s + _8815 + 196] = mem[s + _8815 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8815]) > mem[_8815]:
                                    mem[mem[_8815] + _8815 + 196] = 0
                                require ext_code.size(address(_8814))
                                call address(_8814).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7698, address(_7888), 128, mem[_8815], mem[_8815 + 196 len ceil32(mem[_8815])]
                    else:
                        if idx >= mem[_5404] - 2:
                            require idx < mem[_5406]
                            require idx < mem[_5405]
                            if not mem[(32 * idx) + _5406 + 32]:
                                _8446 = mem[(32 * idx) + _5405 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7698
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8446))
                                call address(_8446).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7698, 0, this.address
                            else:
                                _8448 = mem[(32 * idx) + _5405 + 32]
                                _8449 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8449 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8449 + 36] = _7698
                                mem[_8449 + 68] = 0
                                mem[_8449 + 100] = this.address
                                mem[_8449 + 132] = 128
                                mem[_8449 + 164] = mem[_8449]
                                s = 0
                                while s < mem[_8449]:
                                    mem[s + _8449 + 196] = mem[s + _8449 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8449]) > mem[_8449]:
                                    mem[mem[_8449] + _8449 + 196] = 0
                                require ext_code.size(address(_8448))
                                call address(_8448).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7698, 0, address(this.address), 128, mem[_8449], mem[_8449 + 196 len ceil32(mem[_8449])]
                        else:
                            require idx + 1 < mem[_5405]
                            _7890 = mem[(32 * idx + 1) + _5405 + 32]
                            require idx < mem[_5406]
                            require idx < mem[_5405]
                            if not mem[(32 * idx) + _5406 + 32]:
                                _8817 = mem[(32 * idx) + _5405 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7698
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_7890)
                                require ext_code.size(address(_8817))
                                call address(_8817).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7698, 0, address(_7890)
                            else:
                                _8819 = mem[(32 * idx) + _5405 + 32]
                                _8820 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8820 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8820 + 36] = _7698
                                mem[_8820 + 68] = 0
                                mem[_8820 + 100] = address(_7890)
                                mem[_8820 + 132] = 128
                                mem[_8820 + 164] = mem[_8820]
                                s = 0
                                while s < mem[_8820]:
                                    mem[s + _8820 + 196] = mem[s + _8820 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8820]) > mem[_8820]:
                                    mem[mem[_8820] + _8820 + 196] = 0
                                require ext_code.size(address(_8819))
                                call address(_8819).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7698, 0, address(_7890), 128, mem[_8820], mem[_8820 + 196 len ceil32(mem[_8820])]
                else:
                    _7699 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                    if mem[(32 * idx) + _5404 + 44 len 20] == mem[(32 * idx + 1) + _5404 + 44 len 20]:
                        if idx >= mem[_5404] - 2:
                            require idx < mem[_5406]
                            require idx < mem[_5405]
                            if not mem[(32 * idx) + _5406 + 32]:
                                _8452 = mem[(32 * idx) + _5405 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7699
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8452))
                                call address(_8452).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7699, this.address
                            else:
                                _8454 = mem[(32 * idx) + _5405 + 32]
                                _8455 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8455 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8455 + 36] = 0
                                mem[_8455 + 68] = _7699
                                mem[_8455 + 100] = this.address
                                mem[_8455 + 132] = 128
                                mem[_8455 + 164] = mem[_8455]
                                s = 0
                                while s < mem[_8455]:
                                    mem[s + _8455 + 196] = mem[s + _8455 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8455]) > mem[_8455]:
                                    mem[mem[_8455] + _8455 + 196] = 0
                                require ext_code.size(address(_8454))
                                call address(_8454).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7699, address(this.address), 128, mem[_8455], mem[_8455 + 196 len ceil32(mem[_8455])]
                        else:
                            require idx + 1 < mem[_5405]
                            _7892 = mem[(32 * idx + 1) + _5405 + 32]
                            require idx < mem[_5406]
                            require idx < mem[_5405]
                            if not mem[(32 * idx) + _5406 + 32]:
                                _8822 = mem[(32 * idx) + _5405 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7699
                                mem[mem[64] + 68] = address(_7892)
                                require ext_code.size(address(_8822))
                                call address(_8822).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7699, address(_7892)
                            else:
                                _8824 = mem[(32 * idx) + _5405 + 32]
                                _8825 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8825 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8825 + 36] = 0
                                mem[_8825 + 68] = _7699
                                mem[_8825 + 100] = address(_7892)
                                mem[_8825 + 132] = 128
                                mem[_8825 + 164] = mem[_8825]
                                s = 0
                                while s < mem[_8825]:
                                    mem[s + _8825 + 196] = mem[s + _8825 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8825]) > mem[_8825]:
                                    mem[mem[_8825] + _8825 + 196] = 0
                                require ext_code.size(address(_8824))
                                call address(_8824).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7699, address(_7892), 128, mem[_8825], mem[_8825 + 196 len ceil32(mem[_8825])]
                    else:
                        if idx >= mem[_5404] - 2:
                            require idx < mem[_5406]
                            require idx < mem[_5405]
                            if not mem[(32 * idx) + _5406 + 32]:
                                _8458 = mem[(32 * idx) + _5405 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7699
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8458))
                                call address(_8458).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7699, 0, this.address
                            else:
                                _8460 = mem[(32 * idx) + _5405 + 32]
                                _8461 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8461 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8461 + 36] = _7699
                                mem[_8461 + 68] = 0
                                mem[_8461 + 100] = this.address
                                mem[_8461 + 132] = 128
                                mem[_8461 + 164] = mem[_8461]
                                s = 0
                                while s < mem[_8461]:
                                    mem[s + _8461 + 196] = mem[s + _8461 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8461]) > mem[_8461]:
                                    mem[mem[_8461] + _8461 + 196] = 0
                                require ext_code.size(address(_8460))
                                call address(_8460).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7699, 0, address(this.address), 128, mem[_8461], mem[_8461 + 196 len ceil32(mem[_8461])]
                        else:
                            require idx + 1 < mem[_5405]
                            _7894 = mem[(32 * idx + 1) + _5405 + 32]
                            require idx < mem[_5406]
                            require idx < mem[_5405]
                            if not mem[(32 * idx) + _5406 + 32]:
                                _8827 = mem[(32 * idx) + _5405 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7699
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_7894)
                                require ext_code.size(address(_8827))
                                call address(_8827).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7699, 0, address(_7894)
                            else:
                                _8829 = mem[(32 * idx) + _5405 + 32]
                                _8830 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8830 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8830 + 36] = _7699
                                mem[_8830 + 68] = 0
                                mem[_8830 + 100] = address(_7894)
                                mem[_8830 + 132] = 128
                                mem[_8830 + 164] = mem[_8830]
                                s = 0
                                while s < mem[_8830]:
                                    mem[s + _8830 + 196] = mem[s + _8830 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8830]) > mem[_8830]:
                                    mem[mem[_8830] + _8830 + 196] = 0
                                require ext_code.size(address(_8829))
                                call address(_8829).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7699, 0, address(_7894), 128, mem[_8830], mem[_8830 + 196 len ceil32(mem[_8830])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _7645 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
            mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
            mem[mem[64] + 64 len 32 * _7645] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224 len 32 * _7645]
            return 32, mem[mem[64] + 32 len (32 * _7645) + 32]
        _5245 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size) + 1
        mem[_5245] = return_data.size
        mem[_5245 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        if not return_data.size:
            _5281 = mem[64]
            mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
            mem[_5281] = ('cd', 68).length
            mem[_5281 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
            mem[_5281 + (32 * ('cd', 68).length) + 32] = 0
            _5282 = mem[64]
            mem[64] = (32 * ('cd', 100).length) + mem[64] + 32
            mem[_5282] = ('cd', 100).length
            mem[_5282 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
            mem[_5282 + (32 * ('cd', 100).length) + 32] = 0
            _5283 = mem[64]
            mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
            mem[_5283] = ('cd', 164).length
            mem[_5283 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
            mem[_5283 + (32 * ('cd', 164).length) + 32] = 0
            idx = 0
            while idx < ('cd', 68).length - 1:
                require idx < mem[_5281]
                require idx + 1 < mem[_5281]
                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                if mem[(32 * idx) + _5281 + 44 len 20] < mem[(32 * idx + 1) + _5281 + 44 len 20]:
                    _7700 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                    if mem[(32 * idx) + _5281 + 44 len 20] == mem[(32 * idx) + _5281 + 44 len 20]:
                        if idx >= mem[_5281] - 2:
                            require idx < mem[_5283]
                            require idx < mem[_5282]
                            if not mem[(32 * idx) + _5283 + 32]:
                                _8465 = mem[(32 * idx) + _5282 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7700
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8465))
                                call address(_8465).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7700, this.address
                            else:
                                _8467 = mem[(32 * idx) + _5282 + 32]
                                _8468 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8468 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8468 + 36] = 0
                                mem[_8468 + 68] = _7700
                                mem[_8468 + 100] = this.address
                                mem[_8468 + 132] = 128
                                mem[_8468 + 164] = mem[_8468]
                                s = 0
                                while s < mem[_8468]:
                                    mem[s + _8468 + 196] = mem[s + _8468 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8468]) > mem[_8468]:
                                    mem[mem[_8468] + _8468 + 196] = 0
                                require ext_code.size(address(_8467))
                                call address(_8467).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7700, address(this.address), 128, mem[_8468], mem[_8468 + 196 len ceil32(mem[_8468])]
                        else:
                            require idx + 1 < mem[_5282]
                            _7896 = mem[(32 * idx + 1) + _5282 + 32]
                            require idx < mem[_5283]
                            require idx < mem[_5282]
                            if not mem[(32 * idx) + _5283 + 32]:
                                _8832 = mem[(32 * idx) + _5282 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7700
                                mem[mem[64] + 68] = address(_7896)
                                require ext_code.size(address(_8832))
                                call address(_8832).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7700, address(_7896)
                            else:
                                _8834 = mem[(32 * idx) + _5282 + 32]
                                _8835 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8835 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8835 + 36] = 0
                                mem[_8835 + 68] = _7700
                                mem[_8835 + 100] = address(_7896)
                                mem[_8835 + 132] = 128
                                mem[_8835 + 164] = mem[_8835]
                                s = 0
                                while s < mem[_8835]:
                                    mem[s + _8835 + 196] = mem[s + _8835 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8835]) > mem[_8835]:
                                    mem[mem[_8835] + _8835 + 196] = 0
                                require ext_code.size(address(_8834))
                                call address(_8834).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7700, address(_7896), 128, mem[_8835], mem[_8835 + 196 len ceil32(mem[_8835])]
                    else:
                        if idx >= mem[_5281] - 2:
                            require idx < mem[_5283]
                            require idx < mem[_5282]
                            if not mem[(32 * idx) + _5283 + 32]:
                                _8471 = mem[(32 * idx) + _5282 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7700
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8471))
                                call address(_8471).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7700, 0, this.address
                            else:
                                _8473 = mem[(32 * idx) + _5282 + 32]
                                _8474 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8474 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8474 + 36] = _7700
                                mem[_8474 + 68] = 0
                                mem[_8474 + 100] = this.address
                                mem[_8474 + 132] = 128
                                mem[_8474 + 164] = mem[_8474]
                                s = 0
                                while s < mem[_8474]:
                                    mem[s + _8474 + 196] = mem[s + _8474 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8474]) > mem[_8474]:
                                    mem[mem[_8474] + _8474 + 196] = 0
                                require ext_code.size(address(_8473))
                                call address(_8473).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7700, 0, address(this.address), 128, mem[_8474], mem[_8474 + 196 len ceil32(mem[_8474])]
                        else:
                            require idx + 1 < mem[_5282]
                            _7898 = mem[(32 * idx + 1) + _5282 + 32]
                            require idx < mem[_5283]
                            require idx < mem[_5282]
                            if not mem[(32 * idx) + _5283 + 32]:
                                _8837 = mem[(32 * idx) + _5282 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7700
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_7898)
                                require ext_code.size(address(_8837))
                                call address(_8837).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7700, 0, address(_7898)
                            else:
                                _8839 = mem[(32 * idx) + _5282 + 32]
                                _8840 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8840 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8840 + 36] = _7700
                                mem[_8840 + 68] = 0
                                mem[_8840 + 100] = address(_7898)
                                mem[_8840 + 132] = 128
                                mem[_8840 + 164] = mem[_8840]
                                s = 0
                                while s < mem[_8840]:
                                    mem[s + _8840 + 196] = mem[s + _8840 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8840]) > mem[_8840]:
                                    mem[mem[_8840] + _8840 + 196] = 0
                                require ext_code.size(address(_8839))
                                call address(_8839).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7700, 0, address(_7898), 128, mem[_8840], mem[_8840 + 196 len ceil32(mem[_8840])]
                else:
                    _7701 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                    if mem[(32 * idx) + _5281 + 44 len 20] == mem[(32 * idx + 1) + _5281 + 44 len 20]:
                        if idx >= mem[_5281] - 2:
                            require idx < mem[_5283]
                            require idx < mem[_5282]
                            if not mem[(32 * idx) + _5283 + 32]:
                                _8477 = mem[(32 * idx) + _5282 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7701
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8477))
                                call address(_8477).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7701, this.address
                            else:
                                _8479 = mem[(32 * idx) + _5282 + 32]
                                _8480 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8480 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8480 + 36] = 0
                                mem[_8480 + 68] = _7701
                                mem[_8480 + 100] = this.address
                                mem[_8480 + 132] = 128
                                mem[_8480 + 164] = mem[_8480]
                                s = 0
                                while s < mem[_8480]:
                                    mem[s + _8480 + 196] = mem[s + _8480 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8480]) > mem[_8480]:
                                    mem[mem[_8480] + _8480 + 196] = 0
                                require ext_code.size(address(_8479))
                                call address(_8479).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7701, address(this.address), 128, mem[_8480], mem[_8480 + 196 len ceil32(mem[_8480])]
                        else:
                            require idx + 1 < mem[_5282]
                            _7900 = mem[(32 * idx + 1) + _5282 + 32]
                            require idx < mem[_5283]
                            require idx < mem[_5282]
                            if not mem[(32 * idx) + _5283 + 32]:
                                _8842 = mem[(32 * idx) + _5282 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7701
                                mem[mem[64] + 68] = address(_7900)
                                require ext_code.size(address(_8842))
                                call address(_8842).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7701, address(_7900)
                            else:
                                _8844 = mem[(32 * idx) + _5282 + 32]
                                _8845 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8845 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8845 + 36] = 0
                                mem[_8845 + 68] = _7701
                                mem[_8845 + 100] = address(_7900)
                                mem[_8845 + 132] = 128
                                mem[_8845 + 164] = mem[_8845]
                                s = 0
                                while s < mem[_8845]:
                                    mem[s + _8845 + 196] = mem[s + _8845 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8845]) > mem[_8845]:
                                    mem[mem[_8845] + _8845 + 196] = 0
                                require ext_code.size(address(_8844))
                                call address(_8844).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7701, address(_7900), 128, mem[_8845], mem[_8845 + 196 len ceil32(mem[_8845])]
                    else:
                        if idx >= mem[_5281] - 2:
                            require idx < mem[_5283]
                            require idx < mem[_5282]
                            if not mem[(32 * idx) + _5283 + 32]:
                                _8483 = mem[(32 * idx) + _5282 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7701
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8483))
                                call address(_8483).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7701, 0, this.address
                            else:
                                _8485 = mem[(32 * idx) + _5282 + 32]
                                _8486 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8486 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8486 + 36] = _7701
                                mem[_8486 + 68] = 0
                                mem[_8486 + 100] = this.address
                                mem[_8486 + 132] = 128
                                mem[_8486 + 164] = mem[_8486]
                                s = 0
                                while s < mem[_8486]:
                                    mem[s + _8486 + 196] = mem[s + _8486 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8486]) > mem[_8486]:
                                    mem[mem[_8486] + _8486 + 196] = 0
                                require ext_code.size(address(_8485))
                                call address(_8485).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7701, 0, address(this.address), 128, mem[_8486], mem[_8486 + 196 len ceil32(mem[_8486])]
                        else:
                            require idx + 1 < mem[_5282]
                            _7902 = mem[(32 * idx + 1) + _5282 + 32]
                            require idx < mem[_5283]
                            require idx < mem[_5282]
                            if not mem[(32 * idx) + _5283 + 32]:
                                _8847 = mem[(32 * idx) + _5282 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7701
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_7902)
                                require ext_code.size(address(_8847))
                                call address(_8847).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7701, 0, address(_7902)
                            else:
                                _8849 = mem[(32 * idx) + _5282 + 32]
                                _8850 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8850 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8850 + 36] = _7701
                                mem[_8850 + 68] = 0
                                mem[_8850 + 100] = address(_7902)
                                mem[_8850 + 132] = 128
                                mem[_8850 + 164] = mem[_8850]
                                s = 0
                                while s < mem[_8850]:
                                    mem[s + _8850 + 196] = mem[s + _8850 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8850]) > mem[_8850]:
                                    mem[mem[_8850] + _8850 + 196] = 0
                                require ext_code.size(address(_8849))
                                call address(_8849).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7701, 0, address(_7902), 128, mem[_8850], mem[_8850 + 196 len ceil32(mem[_8850])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _7646 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
            mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
            mem[mem[64] + 64 len 32 * _7646] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224 len 32 * _7646]
            return 32, mem[mem[64] + 32 len (32 * _7646) + 32]
        require return_data.size >= 32
        require mem[_5245 + 32] == bool(mem[_5245 + 32])
        if not mem[_5245 + 32]:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        _5409 = mem[64]
        mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
        mem[_5409] = ('cd', 68).length
        mem[_5409 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
        mem[_5409 + (32 * ('cd', 68).length) + 32] = 0
        _5410 = mem[64]
        mem[64] = (32 * ('cd', 100).length) + mem[64] + 32
        mem[_5410] = ('cd', 100).length
        mem[_5410 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
        mem[_5410 + (32 * ('cd', 100).length) + 32] = 0
        _5411 = mem[64]
        mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
        mem[_5411] = ('cd', 164).length
        mem[_5411 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
        mem[_5411 + (32 * ('cd', 164).length) + 32] = 0
        idx = 0
        while idx < ('cd', 68).length - 1:
            require idx < mem[_5409]
            require idx + 1 < mem[_5409]
            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
            if mem[(32 * idx) + _5409 + 44 len 20] < mem[(32 * idx + 1) + _5409 + 44 len 20]:
                _7702 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                if mem[(32 * idx) + _5409 + 44 len 20] == mem[(32 * idx) + _5409 + 44 len 20]:
                    if idx >= mem[_5409] - 2:
                        require idx < mem[_5411]
                        require idx < mem[_5410]
                        if not mem[(32 * idx) + _5411 + 32]:
                            _8490 = mem[(32 * idx) + _5410 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _7702
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_8490))
                            call address(_8490).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _7702, this.address
                        else:
                            _8492 = mem[(32 * idx) + _5410 + 32]
                            _8493 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8493 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8493 + 36] = 0
                            mem[_8493 + 68] = _7702
                            mem[_8493 + 100] = this.address
                            mem[_8493 + 132] = 128
                            mem[_8493 + 164] = mem[_8493]
                            s = 0
                            while s < mem[_8493]:
                                mem[s + _8493 + 196] = mem[s + _8493 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8493]) > mem[_8493]:
                                mem[mem[_8493] + _8493 + 196] = 0
                            require ext_code.size(address(_8492))
                            call address(_8492).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _7702, address(this.address), 128, mem[_8493], mem[_8493 + 196 len ceil32(mem[_8493])]
                    else:
                        require idx + 1 < mem[_5410]
                        _7904 = mem[(32 * idx + 1) + _5410 + 32]
                        require idx < mem[_5411]
                        require idx < mem[_5410]
                        if not mem[(32 * idx) + _5411 + 32]:
                            _8852 = mem[(32 * idx) + _5410 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _7702
                            mem[mem[64] + 68] = address(_7904)
                            require ext_code.size(address(_8852))
                            call address(_8852).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _7702, address(_7904)
                        else:
                            _8854 = mem[(32 * idx) + _5410 + 32]
                            _8855 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8855 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8855 + 36] = 0
                            mem[_8855 + 68] = _7702
                            mem[_8855 + 100] = address(_7904)
                            mem[_8855 + 132] = 128
                            mem[_8855 + 164] = mem[_8855]
                            s = 0
                            while s < mem[_8855]:
                                mem[s + _8855 + 196] = mem[s + _8855 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8855]) > mem[_8855]:
                                mem[mem[_8855] + _8855 + 196] = 0
                            require ext_code.size(address(_8854))
                            call address(_8854).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _7702, address(_7904), 128, mem[_8855], mem[_8855 + 196 len ceil32(mem[_8855])]
                else:
                    if idx >= mem[_5409] - 2:
                        require idx < mem[_5411]
                        require idx < mem[_5410]
                        if not mem[(32 * idx) + _5411 + 32]:
                            _8496 = mem[(32 * idx) + _5410 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _7702
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_8496))
                            call address(_8496).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _7702, 0, this.address
                        else:
                            _8498 = mem[(32 * idx) + _5410 + 32]
                            _8499 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8499 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8499 + 36] = _7702
                            mem[_8499 + 68] = 0
                            mem[_8499 + 100] = this.address
                            mem[_8499 + 132] = 128
                            mem[_8499 + 164] = mem[_8499]
                            s = 0
                            while s < mem[_8499]:
                                mem[s + _8499 + 196] = mem[s + _8499 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8499]) > mem[_8499]:
                                mem[mem[_8499] + _8499 + 196] = 0
                            require ext_code.size(address(_8498))
                            call address(_8498).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _7702, 0, address(this.address), 128, mem[_8499], mem[_8499 + 196 len ceil32(mem[_8499])]
                    else:
                        require idx + 1 < mem[_5410]
                        _7906 = mem[(32 * idx + 1) + _5410 + 32]
                        require idx < mem[_5411]
                        require idx < mem[_5410]
                        if not mem[(32 * idx) + _5411 + 32]:
                            _8857 = mem[(32 * idx) + _5410 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _7702
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_7906)
                            require ext_code.size(address(_8857))
                            call address(_8857).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _7702, 0, address(_7906)
                        else:
                            _8859 = mem[(32 * idx) + _5410 + 32]
                            _8860 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8860 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8860 + 36] = _7702
                            mem[_8860 + 68] = 0
                            mem[_8860 + 100] = address(_7906)
                            mem[_8860 + 132] = 128
                            mem[_8860 + 164] = mem[_8860]
                            s = 0
                            while s < mem[_8860]:
                                mem[s + _8860 + 196] = mem[s + _8860 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8860]) > mem[_8860]:
                                mem[mem[_8860] + _8860 + 196] = 0
                            require ext_code.size(address(_8859))
                            call address(_8859).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _7702, 0, address(_7906), 128, mem[_8860], mem[_8860 + 196 len ceil32(mem[_8860])]
            else:
                _7703 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                if mem[(32 * idx) + _5409 + 44 len 20] == mem[(32 * idx + 1) + _5409 + 44 len 20]:
                    if idx >= mem[_5409] - 2:
                        require idx < mem[_5411]
                        require idx < mem[_5410]
                        if not mem[(32 * idx) + _5411 + 32]:
                            _8502 = mem[(32 * idx) + _5410 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _7703
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_8502))
                            call address(_8502).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _7703, this.address
                        else:
                            _8504 = mem[(32 * idx) + _5410 + 32]
                            _8505 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8505 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8505 + 36] = 0
                            mem[_8505 + 68] = _7703
                            mem[_8505 + 100] = this.address
                            mem[_8505 + 132] = 128
                            mem[_8505 + 164] = mem[_8505]
                            s = 0
                            while s < mem[_8505]:
                                mem[s + _8505 + 196] = mem[s + _8505 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8505]) > mem[_8505]:
                                mem[mem[_8505] + _8505 + 196] = 0
                            require ext_code.size(address(_8504))
                            call address(_8504).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _7703, address(this.address), 128, mem[_8505], mem[_8505 + 196 len ceil32(mem[_8505])]
                    else:
                        require idx + 1 < mem[_5410]
                        _7908 = mem[(32 * idx + 1) + _5410 + 32]
                        require idx < mem[_5411]
                        require idx < mem[_5410]
                        if not mem[(32 * idx) + _5411 + 32]:
                            _8862 = mem[(32 * idx) + _5410 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _7703
                            mem[mem[64] + 68] = address(_7908)
                            require ext_code.size(address(_8862))
                            call address(_8862).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _7703, address(_7908)
                        else:
                            _8864 = mem[(32 * idx) + _5410 + 32]
                            _8865 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8865 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8865 + 36] = 0
                            mem[_8865 + 68] = _7703
                            mem[_8865 + 100] = address(_7908)
                            mem[_8865 + 132] = 128
                            mem[_8865 + 164] = mem[_8865]
                            s = 0
                            while s < mem[_8865]:
                                mem[s + _8865 + 196] = mem[s + _8865 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8865]) > mem[_8865]:
                                mem[mem[_8865] + _8865 + 196] = 0
                            require ext_code.size(address(_8864))
                            call address(_8864).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _7703, address(_7908), 128, mem[_8865], mem[_8865 + 196 len ceil32(mem[_8865])]
                else:
                    if idx >= mem[_5409] - 2:
                        require idx < mem[_5411]
                        require idx < mem[_5410]
                        if not mem[(32 * idx) + _5411 + 32]:
                            _8508 = mem[(32 * idx) + _5410 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _7703
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_8508))
                            call address(_8508).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _7703, 0, this.address
                        else:
                            _8510 = mem[(32 * idx) + _5410 + 32]
                            _8511 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8511 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8511 + 36] = _7703
                            mem[_8511 + 68] = 0
                            mem[_8511 + 100] = this.address
                            mem[_8511 + 132] = 128
                            mem[_8511 + 164] = mem[_8511]
                            s = 0
                            while s < mem[_8511]:
                                mem[s + _8511 + 196] = mem[s + _8511 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8511]) > mem[_8511]:
                                mem[mem[_8511] + _8511 + 196] = 0
                            require ext_code.size(address(_8510))
                            call address(_8510).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _7703, 0, address(this.address), 128, mem[_8511], mem[_8511 + 196 len ceil32(mem[_8511])]
                    else:
                        require idx + 1 < mem[_5410]
                        _7910 = mem[(32 * idx + 1) + _5410 + 32]
                        require idx < mem[_5411]
                        require idx < mem[_5410]
                        if not mem[(32 * idx) + _5411 + 32]:
                            _8867 = mem[(32 * idx) + _5410 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _7703
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_7910)
                            require ext_code.size(address(_8867))
                            call address(_8867).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _7703, 0, address(_7910)
                        else:
                            _8869 = mem[(32 * idx) + _5410 + 32]
                            _8870 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8870 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8870 + 36] = _7703
                            mem[_8870 + 68] = 0
                            mem[_8870 + 100] = address(_7910)
                            mem[_8870 + 132] = 128
                            mem[_8870 + 164] = mem[_8870]
                            s = 0
                            while s < mem[_8870]:
                                mem[s + _8870 + 196] = mem[s + _8870 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8870]) > mem[_8870]:
                                mem[mem[_8870] + _8870 + 196] = 0
                            require ext_code.size(address(_8869))
                            call address(_8869).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _7703, 0, address(_7910), 128, mem[_8870], mem[_8870 + 196 len ceil32(mem[_8870])]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _7647 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
        mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
        mem[mem[64] + 64 len 32 * _7647] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224 len 32 * _7647]
        return 32, mem[mem[64] + 32 len (32 * _7647) + 32]
    mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224 len 32 * ('cd', 68).length] = code.data[9720 len 32 * ('cd', 68).length]
    require 0 < ('cd', 68).length
    mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = cd[4]
    idx = 0
    while idx < ('cd', 68).length - 1:
        require idx < mem[(32 * ('cd', 68).length) + 128]
        require idx < mem[96]
        _2640 = mem[(32 * idx) + 128]
        require idx + 1 < mem[96]
        _2647 = mem[(32 * idx + 1) + 128]
        require ext_code.size(mem[(32 * idx) + (32 * ('cd', 68).length) + 172 len 20])
        staticcall mem[(32 * idx) + (32 * ('cd', 68).length) + 172 len 20].getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
            _2670 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            require mem[_2670] == mem[_2670 + 18 len 14]
            require mem[_2670 + 32] == mem[_2670 + 50 len 14]
            require mem[_2670 + 64] == mem[_2670 + 92 len 4]
            require idx < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
            require idx < mem[(32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 160]
            if address(_2640) == address(_2640):
                if not mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]:
                    require mem[_2670 + 18 len 14]
                    if 1000 * mem[_2670 + 18 len 14] / mem[_2670 + 18 len 14] != 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if 1000 * mem[_2670 + 18 len 14] < 1000 * mem[_2670 + 18 len 14]:
                        revert with 0, 'SafeMath#add: OVERFLOW'
                    require 1000 * mem[_2670 + 18 len 14]
                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / 1000 * mem[_2670 + 18 len 14]
                else:
                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) / mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] != -mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] + 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if not (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]):
                        if not mem[_2670 + 18 len 14]:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                        else:
                            if 1000 * mem[_2670 + 18 len 14] / mem[_2670 + 18 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2670 + 18 len 14]) < 1000 * mem[_2670 + 18 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2670 + 18 len 14])
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2670 + 18 len 14])
                    else:
                        if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2670 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2670 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) != mem[_2670 + 50 len 14]:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not mem[_2670 + 18 len 14]:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2670 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2670 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                        else:
                            if 1000 * mem[_2670 + 18 len 14] / mem[_2670 + 18 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2670 + 18 len 14]) < 1000 * mem[_2670 + 18 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2670 + 18 len 14])
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2670 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2670 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2670 + 18 len 14])
            else:
                if not mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]:
                    require mem[_2670 + 50 len 14]
                    if 1000 * mem[_2670 + 50 len 14] / mem[_2670 + 50 len 14] != 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if 1000 * mem[_2670 + 50 len 14] < 1000 * mem[_2670 + 50 len 14]:
                        revert with 0, 'SafeMath#add: OVERFLOW'
                    require 1000 * mem[_2670 + 50 len 14]
                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / 1000 * mem[_2670 + 50 len 14]
                else:
                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) / mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] != -mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] + 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if not (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]):
                        if not mem[_2670 + 50 len 14]:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                        else:
                            if 1000 * mem[_2670 + 50 len 14] / mem[_2670 + 50 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2670 + 50 len 14]) < 1000 * mem[_2670 + 50 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2670 + 50 len 14])
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2670 + 50 len 14])
                    else:
                        if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2670 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2670 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) != mem[_2670 + 18 len 14]:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not mem[_2670 + 50 len 14]:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2670 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2670 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                        else:
                            if 1000 * mem[_2670 + 50 len 14] / mem[_2670 + 50 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2670 + 50 len 14]) < 1000 * mem[_2670 + 50 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2670 + 50 len 14])
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2670 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2670 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2670 + 50 len 14])
        else:
            _2671 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            require mem[_2671] == mem[_2671 + 18 len 14]
            require mem[_2671 + 32] == mem[_2671 + 50 len 14]
            require mem[_2671 + 64] == mem[_2671 + 92 len 4]
            require idx < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
            require idx < mem[(32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 160]
            if address(_2640) == address(_2647):
                if not mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]:
                    require mem[_2671 + 18 len 14]
                    if 1000 * mem[_2671 + 18 len 14] / mem[_2671 + 18 len 14] != 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if 1000 * mem[_2671 + 18 len 14] < 1000 * mem[_2671 + 18 len 14]:
                        revert with 0, 'SafeMath#add: OVERFLOW'
                    require 1000 * mem[_2671 + 18 len 14]
                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / 1000 * mem[_2671 + 18 len 14]
                else:
                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) / mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] != -mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] + 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if not (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]):
                        if not mem[_2671 + 18 len 14]:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                        else:
                            if 1000 * mem[_2671 + 18 len 14] / mem[_2671 + 18 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2671 + 18 len 14]) < 1000 * mem[_2671 + 18 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2671 + 18 len 14])
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2671 + 18 len 14])
                    else:
                        if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2671 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2671 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) != mem[_2671 + 50 len 14]:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not mem[_2671 + 18 len 14]:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2671 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2671 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                        else:
                            if 1000 * mem[_2671 + 18 len 14] / mem[_2671 + 18 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2671 + 18 len 14]) < 1000 * mem[_2671 + 18 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2671 + 18 len 14])
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2671 + 50 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2671 + 50 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2671 + 18 len 14])
            else:
                if not mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]:
                    require mem[_2671 + 50 len 14]
                    if 1000 * mem[_2671 + 50 len 14] / mem[_2671 + 50 len 14] != 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if 1000 * mem[_2671 + 50 len 14] < 1000 * mem[_2671 + 50 len 14]:
                        revert with 0, 'SafeMath#add: OVERFLOW'
                    require 1000 * mem[_2671 + 50 len 14]
                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                    mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / 1000 * mem[_2671 + 50 len 14]
                else:
                    if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) / mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] != -mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] + 1000:
                        revert with 0, 'SafeMath#mul: OVERFLOW'
                    if not (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]):
                        if not mem[_2671 + 50 len 14]:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                        else:
                            if 1000 * mem[_2671 + 50 len 14] / mem[_2671 + 50 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2671 + 50 len 14]) < 1000 * mem[_2671 + 50 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2671 + 50 len 14])
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = 0 / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2671 + 50 len 14])
                    else:
                        if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2671 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2671 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) != mem[_2671 + 18 len 14]:
                            revert with 0, 'SafeMath#mul: OVERFLOW'
                        if not mem[_2671 + 50 len 14]:
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) < 0:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2671 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2671 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224])
                        else:
                            if 1000 * mem[_2671 + 50 len 14] / mem[_2671 + 50 len 14] != 1000:
                                revert with 0, 'SafeMath#mul: OVERFLOW'
                            if (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2671 + 50 len 14]) < 1000 * mem[_2671 + 50 len 14]:
                                revert with 0, 'SafeMath#add: OVERFLOW'
                            require (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2671 + 50 len 14])
                            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                            mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] = (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2671 + 18 len 14]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] * mem[_2671 + 18 len 14]) / (1000 * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) - (mem[(32 * idx) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] * mem[(32 * idx) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]) + (1000 * mem[_2671 + 50 len 14])
        idx = idx + 1
        continue 
    require mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] - 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
    if mem[(32 * mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] - 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] < cd[36]:
        revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT'
    require 0 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
    require mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] - 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
    if mem[(32 * mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192] - 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224] < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]:
        revert with 0, 'Sorry bruh'
    require 0 < ('cd', 68).length
    require ('cd', 68)[0] == address(('cd', 68)[0])
    require 0 < ('cd', 100).length
    require ('cd', 100)[0] == address(('cd', 100)[0])
    require 0 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
    _2689 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
    _2691 = mem[64]
    mem[mem[64] + 36] = address(('cd', 100)[0])
    mem[mem[64] + 68] = _2689
    _2735 = mem[64]
    mem[mem[64]] = 68
    mem[64] = mem[64] + 100
    mem[_2735 + 32 len 4] = unknown_0xa9059cbb(?????)
    _2739 = mem[_2735]
    mem[_2691 + 100 len ceil32(mem[_2735])] = mem[_2735 + 32 len ceil32(mem[_2735])]
    if ceil32(_2739) <= _2739:
        call address(('cd', 68)[0]) with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _2739 + _2691 + -mem[64] + 96]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            if not mem[96]:
                _5284 = mem[64]
                mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
                mem[_5284] = ('cd', 68).length
                mem[_5284 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
                mem[_5284 + (32 * ('cd', 68).length) + 32] = 0
                _5285 = mem[64]
                mem[64] = (32 * ('cd', 100).length) + mem[64] + 32
                mem[_5285] = ('cd', 100).length
                mem[_5285 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
                mem[_5285 + (32 * ('cd', 100).length) + 32] = 0
                _5286 = mem[64]
                mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
                mem[_5286] = ('cd', 164).length
                mem[_5286 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
                mem[_5286 + (32 * ('cd', 164).length) + 32] = 0
                idx = 0
                while idx < ('cd', 68).length - 1:
                    require idx < mem[_5284]
                    require idx + 1 < mem[_5284]
                    require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                    if mem[(32 * idx) + _5284 + 44 len 20] < mem[(32 * idx + 1) + _5284 + 44 len 20]:
                        _7704 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                        if mem[(32 * idx) + _5284 + 44 len 20] == mem[(32 * idx) + _5284 + 44 len 20]:
                            if idx >= mem[_5284] - 2:
                                require idx < mem[_5286]
                                require idx < mem[_5285]
                                if not mem[(32 * idx) + _5286 + 32]:
                                    _8515 = mem[(32 * idx) + _5285 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _7704
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_8515))
                                    call address(_8515).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _7704, this.address
                                else:
                                    _8517 = mem[(32 * idx) + _5285 + 32]
                                    _8518 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8518 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8518 + 36] = 0
                                    mem[_8518 + 68] = _7704
                                    mem[_8518 + 100] = this.address
                                    mem[_8518 + 132] = 128
                                    mem[_8518 + 164] = mem[_8518]
                                    s = 0
                                    while s < mem[_8518]:
                                        mem[s + _8518 + 196] = mem[s + _8518 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8518]) > mem[_8518]:
                                        mem[mem[_8518] + _8518 + 196] = 0
                                    require ext_code.size(address(_8517))
                                    call address(_8517).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _7704, address(this.address), 128, mem[_8518], mem[_8518 + 196 len ceil32(mem[_8518])]
                            else:
                                require idx + 1 < mem[_5285]
                                _7912 = mem[(32 * idx + 1) + _5285 + 32]
                                require idx < mem[_5286]
                                require idx < mem[_5285]
                                if not mem[(32 * idx) + _5286 + 32]:
                                    _8872 = mem[(32 * idx) + _5285 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _7704
                                    mem[mem[64] + 68] = address(_7912)
                                    require ext_code.size(address(_8872))
                                    call address(_8872).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _7704, address(_7912)
                                else:
                                    _8874 = mem[(32 * idx) + _5285 + 32]
                                    _8875 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8875 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8875 + 36] = 0
                                    mem[_8875 + 68] = _7704
                                    mem[_8875 + 100] = address(_7912)
                                    mem[_8875 + 132] = 128
                                    mem[_8875 + 164] = mem[_8875]
                                    s = 0
                                    while s < mem[_8875]:
                                        mem[s + _8875 + 196] = mem[s + _8875 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8875]) > mem[_8875]:
                                        mem[mem[_8875] + _8875 + 196] = 0
                                    require ext_code.size(address(_8874))
                                    call address(_8874).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _7704, address(_7912), 128, mem[_8875], mem[_8875 + 196 len ceil32(mem[_8875])]
                        else:
                            if idx >= mem[_5284] - 2:
                                require idx < mem[_5286]
                                require idx < mem[_5285]
                                if not mem[(32 * idx) + _5286 + 32]:
                                    _8521 = mem[(32 * idx) + _5285 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _7704
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_8521))
                                    call address(_8521).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _7704, 0, this.address
                                else:
                                    _8523 = mem[(32 * idx) + _5285 + 32]
                                    _8524 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8524 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8524 + 36] = _7704
                                    mem[_8524 + 68] = 0
                                    mem[_8524 + 100] = this.address
                                    mem[_8524 + 132] = 128
                                    mem[_8524 + 164] = mem[_8524]
                                    s = 0
                                    while s < mem[_8524]:
                                        mem[s + _8524 + 196] = mem[s + _8524 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8524]) > mem[_8524]:
                                        mem[mem[_8524] + _8524 + 196] = 0
                                    require ext_code.size(address(_8523))
                                    call address(_8523).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _7704, 0, address(this.address), 128, mem[_8524], mem[_8524 + 196 len ceil32(mem[_8524])]
                            else:
                                require idx + 1 < mem[_5285]
                                _7914 = mem[(32 * idx + 1) + _5285 + 32]
                                require idx < mem[_5286]
                                require idx < mem[_5285]
                                if not mem[(32 * idx) + _5286 + 32]:
                                    _8877 = mem[(32 * idx) + _5285 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _7704
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_7914)
                                    require ext_code.size(address(_8877))
                                    call address(_8877).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _7704, 0, address(_7914)
                                else:
                                    _8879 = mem[(32 * idx) + _5285 + 32]
                                    _8880 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8880 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8880 + 36] = _7704
                                    mem[_8880 + 68] = 0
                                    mem[_8880 + 100] = address(_7914)
                                    mem[_8880 + 132] = 128
                                    mem[_8880 + 164] = mem[_8880]
                                    s = 0
                                    while s < mem[_8880]:
                                        mem[s + _8880 + 196] = mem[s + _8880 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8880]) > mem[_8880]:
                                        mem[mem[_8880] + _8880 + 196] = 0
                                    require ext_code.size(address(_8879))
                                    call address(_8879).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _7704, 0, address(_7914), 128, mem[_8880], mem[_8880 + 196 len ceil32(mem[_8880])]
                    else:
                        _7705 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                        if mem[(32 * idx) + _5284 + 44 len 20] == mem[(32 * idx + 1) + _5284 + 44 len 20]:
                            if idx >= mem[_5284] - 2:
                                require idx < mem[_5286]
                                require idx < mem[_5285]
                                if not mem[(32 * idx) + _5286 + 32]:
                                    _8527 = mem[(32 * idx) + _5285 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _7705
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_8527))
                                    call address(_8527).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _7705, this.address
                                else:
                                    _8529 = mem[(32 * idx) + _5285 + 32]
                                    _8530 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8530 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8530 + 36] = 0
                                    mem[_8530 + 68] = _7705
                                    mem[_8530 + 100] = this.address
                                    mem[_8530 + 132] = 128
                                    mem[_8530 + 164] = mem[_8530]
                                    s = 0
                                    while s < mem[_8530]:
                                        mem[s + _8530 + 196] = mem[s + _8530 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8530]) > mem[_8530]:
                                        mem[mem[_8530] + _8530 + 196] = 0
                                    require ext_code.size(address(_8529))
                                    call address(_8529).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _7705, address(this.address), 128, mem[_8530], mem[_8530 + 196 len ceil32(mem[_8530])]
                            else:
                                require idx + 1 < mem[_5285]
                                _7916 = mem[(32 * idx + 1) + _5285 + 32]
                                require idx < mem[_5286]
                                require idx < mem[_5285]
                                if not mem[(32 * idx) + _5286 + 32]:
                                    _8882 = mem[(32 * idx) + _5285 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = _7705
                                    mem[mem[64] + 68] = address(_7916)
                                    require ext_code.size(address(_8882))
                                    call address(_8882).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args 0, _7705, address(_7916)
                                else:
                                    _8884 = mem[(32 * idx) + _5285 + 32]
                                    _8885 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8885 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8885 + 36] = 0
                                    mem[_8885 + 68] = _7705
                                    mem[_8885 + 100] = address(_7916)
                                    mem[_8885 + 132] = 128
                                    mem[_8885 + 164] = mem[_8885]
                                    s = 0
                                    while s < mem[_8885]:
                                        mem[s + _8885 + 196] = mem[s + _8885 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8885]) > mem[_8885]:
                                        mem[mem[_8885] + _8885 + 196] = 0
                                    require ext_code.size(address(_8884))
                                    call address(_8884).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args 0, _7705, address(_7916), 128, mem[_8885], mem[_8885 + 196 len ceil32(mem[_8885])]
                        else:
                            if idx >= mem[_5284] - 2:
                                require idx < mem[_5286]
                                require idx < mem[_5285]
                                if not mem[(32 * idx) + _5286 + 32]:
                                    _8533 = mem[(32 * idx) + _5285 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _7705
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(_8533))
                                    call address(_8533).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _7705, 0, this.address
                                else:
                                    _8535 = mem[(32 * idx) + _5285 + 32]
                                    _8536 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8536 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8536 + 36] = _7705
                                    mem[_8536 + 68] = 0
                                    mem[_8536 + 100] = this.address
                                    mem[_8536 + 132] = 128
                                    mem[_8536 + 164] = mem[_8536]
                                    s = 0
                                    while s < mem[_8536]:
                                        mem[s + _8536 + 196] = mem[s + _8536 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8536]) > mem[_8536]:
                                        mem[mem[_8536] + _8536 + 196] = 0
                                    require ext_code.size(address(_8535))
                                    call address(_8535).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _7705, 0, address(this.address), 128, mem[_8536], mem[_8536 + 196 len ceil32(mem[_8536])]
                            else:
                                require idx + 1 < mem[_5285]
                                _7918 = mem[(32 * idx + 1) + _5285 + 32]
                                require idx < mem[_5286]
                                require idx < mem[_5285]
                                if not mem[(32 * idx) + _5286 + 32]:
                                    _8887 = mem[(32 * idx) + _5285 + 32]
                                    mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = _7705
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = address(_7918)
                                    require ext_code.size(address(_8887))
                                    call address(_8887).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                         gas gas_remaining wei
                                        args _7705, 0, address(_7918)
                                else:
                                    _8889 = mem[(32 * idx) + _5285 + 32]
                                    _8890 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_8890 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_8890 + 36] = _7705
                                    mem[_8890 + 68] = 0
                                    mem[_8890 + 100] = address(_7918)
                                    mem[_8890 + 132] = 128
                                    mem[_8890 + 164] = mem[_8890]
                                    s = 0
                                    while s < mem[_8890]:
                                        mem[s + _8890 + 196] = mem[s + _8890 + 32]
                                        s = s + 32
                                        continue 
                                    if ceil32(mem[_8890]) > mem[_8890]:
                                        mem[mem[_8890] + _8890 + 196] = 0
                                    require ext_code.size(address(_8889))
                                    call address(_8889).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                         gas gas_remaining wei
                                        args _7705, 0, address(_7918), 128, mem[_8890], mem[_8890 + 196 len ceil32(mem[_8890])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    continue 
                mem[mem[64]] = 32
                _7648 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                mem[mem[64] + 64 len 32 * _7648] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224 len 32 * _7648]
                return 32, mem[mem[64] + 32 len (32 * _7648) + 32]
            require mem[96] >= 32
            require mem[128] == bool(mem[128])
            if not mem[128]:
                revert with 0, 'TransferHelper::safeTransfer: transfer failed'
            _5414 = mem[64]
            mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
            mem[_5414] = ('cd', 68).length
            mem[_5414 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
            mem[_5414 + (32 * ('cd', 68).length) + 32] = 0
            _5415 = mem[64]
            mem[64] = (32 * ('cd', 100).length) + mem[64] + 32
            mem[_5415] = ('cd', 100).length
            mem[_5415 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
            mem[_5415 + (32 * ('cd', 100).length) + 32] = 0
            _5416 = mem[64]
            mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
            mem[_5416] = ('cd', 164).length
            mem[_5416 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
            mem[_5416 + (32 * ('cd', 164).length) + 32] = 0
            idx = 0
            while idx < ('cd', 68).length - 1:
                require idx < mem[_5414]
                require idx + 1 < mem[_5414]
                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                if mem[(32 * idx) + _5414 + 44 len 20] < mem[(32 * idx + 1) + _5414 + 44 len 20]:
                    _7706 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                    if mem[(32 * idx) + _5414 + 44 len 20] == mem[(32 * idx) + _5414 + 44 len 20]:
                        if idx >= mem[_5414] - 2:
                            require idx < mem[_5416]
                            require idx < mem[_5415]
                            if not mem[(32 * idx) + _5416 + 32]:
                                _8540 = mem[(32 * idx) + _5415 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7706
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8540))
                                call address(_8540).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7706, this.address
                            else:
                                _8542 = mem[(32 * idx) + _5415 + 32]
                                _8543 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8543 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8543 + 36] = 0
                                mem[_8543 + 68] = _7706
                                mem[_8543 + 100] = this.address
                                mem[_8543 + 132] = 128
                                mem[_8543 + 164] = mem[_8543]
                                s = 0
                                while s < mem[_8543]:
                                    mem[s + _8543 + 196] = mem[s + _8543 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8543]) > mem[_8543]:
                                    mem[mem[_8543] + _8543 + 196] = 0
                                require ext_code.size(address(_8542))
                                call address(_8542).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7706, address(this.address), 128, mem[_8543], mem[_8543 + 196 len ceil32(mem[_8543])]
                        else:
                            require idx + 1 < mem[_5415]
                            _7920 = mem[(32 * idx + 1) + _5415 + 32]
                            require idx < mem[_5416]
                            require idx < mem[_5415]
                            if not mem[(32 * idx) + _5416 + 32]:
                                _8892 = mem[(32 * idx) + _5415 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7706
                                mem[mem[64] + 68] = address(_7920)
                                require ext_code.size(address(_8892))
                                call address(_8892).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7706, address(_7920)
                            else:
                                _8894 = mem[(32 * idx) + _5415 + 32]
                                _8895 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8895 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8895 + 36] = 0
                                mem[_8895 + 68] = _7706
                                mem[_8895 + 100] = address(_7920)
                                mem[_8895 + 132] = 128
                                mem[_8895 + 164] = mem[_8895]
                                s = 0
                                while s < mem[_8895]:
                                    mem[s + _8895 + 196] = mem[s + _8895 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8895]) > mem[_8895]:
                                    mem[mem[_8895] + _8895 + 196] = 0
                                require ext_code.size(address(_8894))
                                call address(_8894).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7706, address(_7920), 128, mem[_8895], mem[_8895 + 196 len ceil32(mem[_8895])]
                    else:
                        if idx >= mem[_5414] - 2:
                            require idx < mem[_5416]
                            require idx < mem[_5415]
                            if not mem[(32 * idx) + _5416 + 32]:
                                _8546 = mem[(32 * idx) + _5415 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7706
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8546))
                                call address(_8546).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7706, 0, this.address
                            else:
                                _8548 = mem[(32 * idx) + _5415 + 32]
                                _8549 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8549 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8549 + 36] = _7706
                                mem[_8549 + 68] = 0
                                mem[_8549 + 100] = this.address
                                mem[_8549 + 132] = 128
                                mem[_8549 + 164] = mem[_8549]
                                s = 0
                                while s < mem[_8549]:
                                    mem[s + _8549 + 196] = mem[s + _8549 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8549]) > mem[_8549]:
                                    mem[mem[_8549] + _8549 + 196] = 0
                                require ext_code.size(address(_8548))
                                call address(_8548).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7706, 0, address(this.address), 128, mem[_8549], mem[_8549 + 196 len ceil32(mem[_8549])]
                        else:
                            require idx + 1 < mem[_5415]
                            _7922 = mem[(32 * idx + 1) + _5415 + 32]
                            require idx < mem[_5416]
                            require idx < mem[_5415]
                            if not mem[(32 * idx) + _5416 + 32]:
                                _8897 = mem[(32 * idx) + _5415 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7706
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_7922)
                                require ext_code.size(address(_8897))
                                call address(_8897).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7706, 0, address(_7922)
                            else:
                                _8899 = mem[(32 * idx) + _5415 + 32]
                                _8900 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8900 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8900 + 36] = _7706
                                mem[_8900 + 68] = 0
                                mem[_8900 + 100] = address(_7922)
                                mem[_8900 + 132] = 128
                                mem[_8900 + 164] = mem[_8900]
                                s = 0
                                while s < mem[_8900]:
                                    mem[s + _8900 + 196] = mem[s + _8900 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8900]) > mem[_8900]:
                                    mem[mem[_8900] + _8900 + 196] = 0
                                require ext_code.size(address(_8899))
                                call address(_8899).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7706, 0, address(_7922), 128, mem[_8900], mem[_8900 + 196 len ceil32(mem[_8900])]
                else:
                    _7707 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                    if mem[(32 * idx) + _5414 + 44 len 20] == mem[(32 * idx + 1) + _5414 + 44 len 20]:
                        if idx >= mem[_5414] - 2:
                            require idx < mem[_5416]
                            require idx < mem[_5415]
                            if not mem[(32 * idx) + _5416 + 32]:
                                _8552 = mem[(32 * idx) + _5415 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7707
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8552))
                                call address(_8552).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7707, this.address
                            else:
                                _8554 = mem[(32 * idx) + _5415 + 32]
                                _8555 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8555 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8555 + 36] = 0
                                mem[_8555 + 68] = _7707
                                mem[_8555 + 100] = this.address
                                mem[_8555 + 132] = 128
                                mem[_8555 + 164] = mem[_8555]
                                s = 0
                                while s < mem[_8555]:
                                    mem[s + _8555 + 196] = mem[s + _8555 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8555]) > mem[_8555]:
                                    mem[mem[_8555] + _8555 + 196] = 0
                                require ext_code.size(address(_8554))
                                call address(_8554).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7707, address(this.address), 128, mem[_8555], mem[_8555 + 196 len ceil32(mem[_8555])]
                        else:
                            require idx + 1 < mem[_5415]
                            _7924 = mem[(32 * idx + 1) + _5415 + 32]
                            require idx < mem[_5416]
                            require idx < mem[_5415]
                            if not mem[(32 * idx) + _5416 + 32]:
                                _8902 = mem[(32 * idx) + _5415 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7707
                                mem[mem[64] + 68] = address(_7924)
                                require ext_code.size(address(_8902))
                                call address(_8902).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7707, address(_7924)
                            else:
                                _8904 = mem[(32 * idx) + _5415 + 32]
                                _8905 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8905 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8905 + 36] = 0
                                mem[_8905 + 68] = _7707
                                mem[_8905 + 100] = address(_7924)
                                mem[_8905 + 132] = 128
                                mem[_8905 + 164] = mem[_8905]
                                s = 0
                                while s < mem[_8905]:
                                    mem[s + _8905 + 196] = mem[s + _8905 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8905]) > mem[_8905]:
                                    mem[mem[_8905] + _8905 + 196] = 0
                                require ext_code.size(address(_8904))
                                call address(_8904).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7707, address(_7924), 128, mem[_8905], mem[_8905 + 196 len ceil32(mem[_8905])]
                    else:
                        if idx >= mem[_5414] - 2:
                            require idx < mem[_5416]
                            require idx < mem[_5415]
                            if not mem[(32 * idx) + _5416 + 32]:
                                _8558 = mem[(32 * idx) + _5415 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7707
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8558))
                                call address(_8558).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7707, 0, this.address
                            else:
                                _8560 = mem[(32 * idx) + _5415 + 32]
                                _8561 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8561 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8561 + 36] = _7707
                                mem[_8561 + 68] = 0
                                mem[_8561 + 100] = this.address
                                mem[_8561 + 132] = 128
                                mem[_8561 + 164] = mem[_8561]
                                s = 0
                                while s < mem[_8561]:
                                    mem[s + _8561 + 196] = mem[s + _8561 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8561]) > mem[_8561]:
                                    mem[mem[_8561] + _8561 + 196] = 0
                                require ext_code.size(address(_8560))
                                call address(_8560).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7707, 0, address(this.address), 128, mem[_8561], mem[_8561 + 196 len ceil32(mem[_8561])]
                        else:
                            require idx + 1 < mem[_5415]
                            _7926 = mem[(32 * idx + 1) + _5415 + 32]
                            require idx < mem[_5416]
                            require idx < mem[_5415]
                            if not mem[(32 * idx) + _5416 + 32]:
                                _8907 = mem[(32 * idx) + _5415 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7707
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_7926)
                                require ext_code.size(address(_8907))
                                call address(_8907).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7707, 0, address(_7926)
                            else:
                                _8909 = mem[(32 * idx) + _5415 + 32]
                                _8910 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8910 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8910 + 36] = _7707
                                mem[_8910 + 68] = 0
                                mem[_8910 + 100] = address(_7926)
                                mem[_8910 + 132] = 128
                                mem[_8910 + 164] = mem[_8910]
                                s = 0
                                while s < mem[_8910]:
                                    mem[s + _8910 + 196] = mem[s + _8910 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8910]) > mem[_8910]:
                                    mem[mem[_8910] + _8910 + 196] = 0
                                require ext_code.size(address(_8909))
                                call address(_8909).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7707, 0, address(_7926), 128, mem[_8910], mem[_8910 + 196 len ceil32(mem[_8910])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _7649 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
            mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
            mem[mem[64] + 64 len 32 * _7649] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224 len 32 * _7649]
            return 32, mem[mem[64] + 32 len (32 * _7649) + 32]
        _5246 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size) + 1
        mem[_5246] = return_data.size
        mem[_5246 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        if not return_data.size:
            _5287 = mem[64]
            mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
            mem[_5287] = ('cd', 68).length
            mem[_5287 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
            mem[_5287 + (32 * ('cd', 68).length) + 32] = 0
            _5288 = mem[64]
            mem[64] = (32 * ('cd', 100).length) + mem[64] + 32
            mem[_5288] = ('cd', 100).length
            mem[_5288 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
            mem[_5288 + (32 * ('cd', 100).length) + 32] = 0
            _5289 = mem[64]
            mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
            mem[_5289] = ('cd', 164).length
            mem[_5289 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
            mem[_5289 + (32 * ('cd', 164).length) + 32] = 0
            idx = 0
            while idx < ('cd', 68).length - 1:
                require idx < mem[_5287]
                require idx + 1 < mem[_5287]
                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                if mem[(32 * idx) + _5287 + 44 len 20] < mem[(32 * idx + 1) + _5287 + 44 len 20]:
                    _7708 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                    if mem[(32 * idx) + _5287 + 44 len 20] == mem[(32 * idx) + _5287 + 44 len 20]:
                        if idx >= mem[_5287] - 2:
                            require idx < mem[_5289]
                            require idx < mem[_5288]
                            if not mem[(32 * idx) + _5289 + 32]:
                                _8565 = mem[(32 * idx) + _5288 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7708
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8565))
                                call address(_8565).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7708, this.address
                            else:
                                _8567 = mem[(32 * idx) + _5288 + 32]
                                _8568 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8568 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8568 + 36] = 0
                                mem[_8568 + 68] = _7708
                                mem[_8568 + 100] = this.address
                                mem[_8568 + 132] = 128
                                mem[_8568 + 164] = mem[_8568]
                                s = 0
                                while s < mem[_8568]:
                                    mem[s + _8568 + 196] = mem[s + _8568 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8568]) > mem[_8568]:
                                    mem[mem[_8568] + _8568 + 196] = 0
                                require ext_code.size(address(_8567))
                                call address(_8567).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7708, address(this.address), 128, mem[_8568], mem[_8568 + 196 len ceil32(mem[_8568])]
                        else:
                            require idx + 1 < mem[_5288]
                            _7928 = mem[(32 * idx + 1) + _5288 + 32]
                            require idx < mem[_5289]
                            require idx < mem[_5288]
                            if not mem[(32 * idx) + _5289 + 32]:
                                _8912 = mem[(32 * idx) + _5288 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7708
                                mem[mem[64] + 68] = address(_7928)
                                require ext_code.size(address(_8912))
                                call address(_8912).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7708, address(_7928)
                            else:
                                _8914 = mem[(32 * idx) + _5288 + 32]
                                _8915 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8915 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8915 + 36] = 0
                                mem[_8915 + 68] = _7708
                                mem[_8915 + 100] = address(_7928)
                                mem[_8915 + 132] = 128
                                mem[_8915 + 164] = mem[_8915]
                                s = 0
                                while s < mem[_8915]:
                                    mem[s + _8915 + 196] = mem[s + _8915 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8915]) > mem[_8915]:
                                    mem[mem[_8915] + _8915 + 196] = 0
                                require ext_code.size(address(_8914))
                                call address(_8914).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7708, address(_7928), 128, mem[_8915], mem[_8915 + 196 len ceil32(mem[_8915])]
                    else:
                        if idx >= mem[_5287] - 2:
                            require idx < mem[_5289]
                            require idx < mem[_5288]
                            if not mem[(32 * idx) + _5289 + 32]:
                                _8571 = mem[(32 * idx) + _5288 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7708
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8571))
                                call address(_8571).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7708, 0, this.address
                            else:
                                _8573 = mem[(32 * idx) + _5288 + 32]
                                _8574 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8574 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8574 + 36] = _7708
                                mem[_8574 + 68] = 0
                                mem[_8574 + 100] = this.address
                                mem[_8574 + 132] = 128
                                mem[_8574 + 164] = mem[_8574]
                                s = 0
                                while s < mem[_8574]:
                                    mem[s + _8574 + 196] = mem[s + _8574 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8574]) > mem[_8574]:
                                    mem[mem[_8574] + _8574 + 196] = 0
                                require ext_code.size(address(_8573))
                                call address(_8573).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7708, 0, address(this.address), 128, mem[_8574], mem[_8574 + 196 len ceil32(mem[_8574])]
                        else:
                            require idx + 1 < mem[_5288]
                            _7930 = mem[(32 * idx + 1) + _5288 + 32]
                            require idx < mem[_5289]
                            require idx < mem[_5288]
                            if not mem[(32 * idx) + _5289 + 32]:
                                _8917 = mem[(32 * idx) + _5288 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7708
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_7930)
                                require ext_code.size(address(_8917))
                                call address(_8917).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7708, 0, address(_7930)
                            else:
                                _8919 = mem[(32 * idx) + _5288 + 32]
                                _8920 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8920 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8920 + 36] = _7708
                                mem[_8920 + 68] = 0
                                mem[_8920 + 100] = address(_7930)
                                mem[_8920 + 132] = 128
                                mem[_8920 + 164] = mem[_8920]
                                s = 0
                                while s < mem[_8920]:
                                    mem[s + _8920 + 196] = mem[s + _8920 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8920]) > mem[_8920]:
                                    mem[mem[_8920] + _8920 + 196] = 0
                                require ext_code.size(address(_8919))
                                call address(_8919).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7708, 0, address(_7930), 128, mem[_8920], mem[_8920 + 196 len ceil32(mem[_8920])]
                else:
                    _7709 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                    if mem[(32 * idx) + _5287 + 44 len 20] == mem[(32 * idx + 1) + _5287 + 44 len 20]:
                        if idx >= mem[_5287] - 2:
                            require idx < mem[_5289]
                            require idx < mem[_5288]
                            if not mem[(32 * idx) + _5289 + 32]:
                                _8577 = mem[(32 * idx) + _5288 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7709
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8577))
                                call address(_8577).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7709, this.address
                            else:
                                _8579 = mem[(32 * idx) + _5288 + 32]
                                _8580 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8580 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8580 + 36] = 0
                                mem[_8580 + 68] = _7709
                                mem[_8580 + 100] = this.address
                                mem[_8580 + 132] = 128
                                mem[_8580 + 164] = mem[_8580]
                                s = 0
                                while s < mem[_8580]:
                                    mem[s + _8580 + 196] = mem[s + _8580 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8580]) > mem[_8580]:
                                    mem[mem[_8580] + _8580 + 196] = 0
                                require ext_code.size(address(_8579))
                                call address(_8579).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7709, address(this.address), 128, mem[_8580], mem[_8580 + 196 len ceil32(mem[_8580])]
                        else:
                            require idx + 1 < mem[_5288]
                            _7932 = mem[(32 * idx + 1) + _5288 + 32]
                            require idx < mem[_5289]
                            require idx < mem[_5288]
                            if not mem[(32 * idx) + _5289 + 32]:
                                _8922 = mem[(32 * idx) + _5288 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7709
                                mem[mem[64] + 68] = address(_7932)
                                require ext_code.size(address(_8922))
                                call address(_8922).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7709, address(_7932)
                            else:
                                _8924 = mem[(32 * idx) + _5288 + 32]
                                _8925 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8925 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8925 + 36] = 0
                                mem[_8925 + 68] = _7709
                                mem[_8925 + 100] = address(_7932)
                                mem[_8925 + 132] = 128
                                mem[_8925 + 164] = mem[_8925]
                                s = 0
                                while s < mem[_8925]:
                                    mem[s + _8925 + 196] = mem[s + _8925 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8925]) > mem[_8925]:
                                    mem[mem[_8925] + _8925 + 196] = 0
                                require ext_code.size(address(_8924))
                                call address(_8924).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7709, address(_7932), 128, mem[_8925], mem[_8925 + 196 len ceil32(mem[_8925])]
                    else:
                        if idx >= mem[_5287] - 2:
                            require idx < mem[_5289]
                            require idx < mem[_5288]
                            if not mem[(32 * idx) + _5289 + 32]:
                                _8583 = mem[(32 * idx) + _5288 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7709
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8583))
                                call address(_8583).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7709, 0, this.address
                            else:
                                _8585 = mem[(32 * idx) + _5288 + 32]
                                _8586 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8586 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8586 + 36] = _7709
                                mem[_8586 + 68] = 0
                                mem[_8586 + 100] = this.address
                                mem[_8586 + 132] = 128
                                mem[_8586 + 164] = mem[_8586]
                                s = 0
                                while s < mem[_8586]:
                                    mem[s + _8586 + 196] = mem[s + _8586 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8586]) > mem[_8586]:
                                    mem[mem[_8586] + _8586 + 196] = 0
                                require ext_code.size(address(_8585))
                                call address(_8585).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7709, 0, address(this.address), 128, mem[_8586], mem[_8586 + 196 len ceil32(mem[_8586])]
                        else:
                            require idx + 1 < mem[_5288]
                            _7934 = mem[(32 * idx + 1) + _5288 + 32]
                            require idx < mem[_5289]
                            require idx < mem[_5288]
                            if not mem[(32 * idx) + _5289 + 32]:
                                _8927 = mem[(32 * idx) + _5288 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7709
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_7934)
                                require ext_code.size(address(_8927))
                                call address(_8927).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7709, 0, address(_7934)
                            else:
                                _8929 = mem[(32 * idx) + _5288 + 32]
                                _8930 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8930 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8930 + 36] = _7709
                                mem[_8930 + 68] = 0
                                mem[_8930 + 100] = address(_7934)
                                mem[_8930 + 132] = 128
                                mem[_8930 + 164] = mem[_8930]
                                s = 0
                                while s < mem[_8930]:
                                    mem[s + _8930 + 196] = mem[s + _8930 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8930]) > mem[_8930]:
                                    mem[mem[_8930] + _8930 + 196] = 0
                                require ext_code.size(address(_8929))
                                call address(_8929).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7709, 0, address(_7934), 128, mem[_8930], mem[_8930 + 196 len ceil32(mem[_8930])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _7650 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
            mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
            mem[mem[64] + 64 len 32 * _7650] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224 len 32 * _7650]
            return 32, mem[mem[64] + 32 len (32 * _7650) + 32]
        require return_data.size >= 32
        require mem[_5246 + 32] == bool(mem[_5246 + 32])
        if not mem[_5246 + 32]:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        _5419 = mem[64]
        mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
        mem[_5419] = ('cd', 68).length
        mem[_5419 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
        mem[_5419 + (32 * ('cd', 68).length) + 32] = 0
        _5420 = mem[64]
        mem[64] = (32 * ('cd', 100).length) + mem[64] + 32
        mem[_5420] = ('cd', 100).length
        mem[_5420 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
        mem[_5420 + (32 * ('cd', 100).length) + 32] = 0
        _5421 = mem[64]
        mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
        mem[_5421] = ('cd', 164).length
        mem[_5421 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
        mem[_5421 + (32 * ('cd', 164).length) + 32] = 0
        idx = 0
        while idx < ('cd', 68).length - 1:
            require idx < mem[_5419]
            require idx + 1 < mem[_5419]
            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
            if mem[(32 * idx) + _5419 + 44 len 20] < mem[(32 * idx + 1) + _5419 + 44 len 20]:
                _7710 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                if mem[(32 * idx) + _5419 + 44 len 20] == mem[(32 * idx) + _5419 + 44 len 20]:
                    if idx >= mem[_5419] - 2:
                        require idx < mem[_5421]
                        require idx < mem[_5420]
                        if not mem[(32 * idx) + _5421 + 32]:
                            _8590 = mem[(32 * idx) + _5420 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _7710
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_8590))
                            call address(_8590).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _7710, this.address
                        else:
                            _8592 = mem[(32 * idx) + _5420 + 32]
                            _8593 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8593 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8593 + 36] = 0
                            mem[_8593 + 68] = _7710
                            mem[_8593 + 100] = this.address
                            mem[_8593 + 132] = 128
                            mem[_8593 + 164] = mem[_8593]
                            s = 0
                            while s < mem[_8593]:
                                mem[s + _8593 + 196] = mem[s + _8593 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8593]) > mem[_8593]:
                                mem[mem[_8593] + _8593 + 196] = 0
                            require ext_code.size(address(_8592))
                            call address(_8592).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _7710, address(this.address), 128, mem[_8593], mem[_8593 + 196 len ceil32(mem[_8593])]
                    else:
                        require idx + 1 < mem[_5420]
                        _7936 = mem[(32 * idx + 1) + _5420 + 32]
                        require idx < mem[_5421]
                        require idx < mem[_5420]
                        if not mem[(32 * idx) + _5421 + 32]:
                            _8932 = mem[(32 * idx) + _5420 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _7710
                            mem[mem[64] + 68] = address(_7936)
                            require ext_code.size(address(_8932))
                            call address(_8932).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _7710, address(_7936)
                        else:
                            _8934 = mem[(32 * idx) + _5420 + 32]
                            _8935 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8935 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8935 + 36] = 0
                            mem[_8935 + 68] = _7710
                            mem[_8935 + 100] = address(_7936)
                            mem[_8935 + 132] = 128
                            mem[_8935 + 164] = mem[_8935]
                            s = 0
                            while s < mem[_8935]:
                                mem[s + _8935 + 196] = mem[s + _8935 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8935]) > mem[_8935]:
                                mem[mem[_8935] + _8935 + 196] = 0
                            require ext_code.size(address(_8934))
                            call address(_8934).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _7710, address(_7936), 128, mem[_8935], mem[_8935 + 196 len ceil32(mem[_8935])]
                else:
                    if idx >= mem[_5419] - 2:
                        require idx < mem[_5421]
                        require idx < mem[_5420]
                        if not mem[(32 * idx) + _5421 + 32]:
                            _8596 = mem[(32 * idx) + _5420 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _7710
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_8596))
                            call address(_8596).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _7710, 0, this.address
                        else:
                            _8598 = mem[(32 * idx) + _5420 + 32]
                            _8599 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8599 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8599 + 36] = _7710
                            mem[_8599 + 68] = 0
                            mem[_8599 + 100] = this.address
                            mem[_8599 + 132] = 128
                            mem[_8599 + 164] = mem[_8599]
                            s = 0
                            while s < mem[_8599]:
                                mem[s + _8599 + 196] = mem[s + _8599 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8599]) > mem[_8599]:
                                mem[mem[_8599] + _8599 + 196] = 0
                            require ext_code.size(address(_8598))
                            call address(_8598).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _7710, 0, address(this.address), 128, mem[_8599], mem[_8599 + 196 len ceil32(mem[_8599])]
                    else:
                        require idx + 1 < mem[_5420]
                        _7938 = mem[(32 * idx + 1) + _5420 + 32]
                        require idx < mem[_5421]
                        require idx < mem[_5420]
                        if not mem[(32 * idx) + _5421 + 32]:
                            _8937 = mem[(32 * idx) + _5420 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _7710
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_7938)
                            require ext_code.size(address(_8937))
                            call address(_8937).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _7710, 0, address(_7938)
                        else:
                            _8939 = mem[(32 * idx) + _5420 + 32]
                            _8940 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8940 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8940 + 36] = _7710
                            mem[_8940 + 68] = 0
                            mem[_8940 + 100] = address(_7938)
                            mem[_8940 + 132] = 128
                            mem[_8940 + 164] = mem[_8940]
                            s = 0
                            while s < mem[_8940]:
                                mem[s + _8940 + 196] = mem[s + _8940 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8940]) > mem[_8940]:
                                mem[mem[_8940] + _8940 + 196] = 0
                            require ext_code.size(address(_8939))
                            call address(_8939).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _7710, 0, address(_7938), 128, mem[_8940], mem[_8940 + 196 len ceil32(mem[_8940])]
            else:
                _7711 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                if mem[(32 * idx) + _5419 + 44 len 20] == mem[(32 * idx + 1) + _5419 + 44 len 20]:
                    if idx >= mem[_5419] - 2:
                        require idx < mem[_5421]
                        require idx < mem[_5420]
                        if not mem[(32 * idx) + _5421 + 32]:
                            _8602 = mem[(32 * idx) + _5420 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _7711
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_8602))
                            call address(_8602).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _7711, this.address
                        else:
                            _8604 = mem[(32 * idx) + _5420 + 32]
                            _8605 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8605 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8605 + 36] = 0
                            mem[_8605 + 68] = _7711
                            mem[_8605 + 100] = this.address
                            mem[_8605 + 132] = 128
                            mem[_8605 + 164] = mem[_8605]
                            s = 0
                            while s < mem[_8605]:
                                mem[s + _8605 + 196] = mem[s + _8605 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8605]) > mem[_8605]:
                                mem[mem[_8605] + _8605 + 196] = 0
                            require ext_code.size(address(_8604))
                            call address(_8604).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _7711, address(this.address), 128, mem[_8605], mem[_8605 + 196 len ceil32(mem[_8605])]
                    else:
                        require idx + 1 < mem[_5420]
                        _7940 = mem[(32 * idx + 1) + _5420 + 32]
                        require idx < mem[_5421]
                        require idx < mem[_5420]
                        if not mem[(32 * idx) + _5421 + 32]:
                            _8942 = mem[(32 * idx) + _5420 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _7711
                            mem[mem[64] + 68] = address(_7940)
                            require ext_code.size(address(_8942))
                            call address(_8942).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _7711, address(_7940)
                        else:
                            _8944 = mem[(32 * idx) + _5420 + 32]
                            _8945 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8945 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8945 + 36] = 0
                            mem[_8945 + 68] = _7711
                            mem[_8945 + 100] = address(_7940)
                            mem[_8945 + 132] = 128
                            mem[_8945 + 164] = mem[_8945]
                            s = 0
                            while s < mem[_8945]:
                                mem[s + _8945 + 196] = mem[s + _8945 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8945]) > mem[_8945]:
                                mem[mem[_8945] + _8945 + 196] = 0
                            require ext_code.size(address(_8944))
                            call address(_8944).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _7711, address(_7940), 128, mem[_8945], mem[_8945 + 196 len ceil32(mem[_8945])]
                else:
                    if idx >= mem[_5419] - 2:
                        require idx < mem[_5421]
                        require idx < mem[_5420]
                        if not mem[(32 * idx) + _5421 + 32]:
                            _8608 = mem[(32 * idx) + _5420 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _7711
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_8608))
                            call address(_8608).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _7711, 0, this.address
                        else:
                            _8610 = mem[(32 * idx) + _5420 + 32]
                            _8611 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8611 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8611 + 36] = _7711
                            mem[_8611 + 68] = 0
                            mem[_8611 + 100] = this.address
                            mem[_8611 + 132] = 128
                            mem[_8611 + 164] = mem[_8611]
                            s = 0
                            while s < mem[_8611]:
                                mem[s + _8611 + 196] = mem[s + _8611 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8611]) > mem[_8611]:
                                mem[mem[_8611] + _8611 + 196] = 0
                            require ext_code.size(address(_8610))
                            call address(_8610).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _7711, 0, address(this.address), 128, mem[_8611], mem[_8611 + 196 len ceil32(mem[_8611])]
                    else:
                        require idx + 1 < mem[_5420]
                        _7942 = mem[(32 * idx + 1) + _5420 + 32]
                        require idx < mem[_5421]
                        require idx < mem[_5420]
                        if not mem[(32 * idx) + _5421 + 32]:
                            _8947 = mem[(32 * idx) + _5420 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _7711
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_7942)
                            require ext_code.size(address(_8947))
                            call address(_8947).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _7711, 0, address(_7942)
                        else:
                            _8949 = mem[(32 * idx) + _5420 + 32]
                            _8950 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8950 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8950 + 36] = _7711
                            mem[_8950 + 68] = 0
                            mem[_8950 + 100] = address(_7942)
                            mem[_8950 + 132] = 128
                            mem[_8950 + 164] = mem[_8950]
                            s = 0
                            while s < mem[_8950]:
                                mem[s + _8950 + 196] = mem[s + _8950 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8950]) > mem[_8950]:
                                mem[mem[_8950] + _8950 + 196] = 0
                            require ext_code.size(address(_8949))
                            call address(_8949).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _7711, 0, address(_7942), 128, mem[_8950], mem[_8950 + 196 len ceil32(mem[_8950])]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _7651 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
        mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
        mem[mem[64] + 64 len 32 * _7651] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224 len 32 * _7651]
        return 32, mem[mem[64] + 32 len (32 * _7651) + 32]
    mem[_2739 + _2691 + 100] = 0
    call address(('cd', 68)[0]) with:
         gas gas_remaining wei
        args mem[mem[64] + 4 len _2739 + _2691 + -mem[64] + 96]
    if not return_data.size:
        if not ext_call.success:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        if not mem[96]:
            _5290 = mem[64]
            mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
            mem[_5290] = ('cd', 68).length
            mem[_5290 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
            mem[_5290 + (32 * ('cd', 68).length) + 32] = 0
            _5291 = mem[64]
            mem[64] = (32 * ('cd', 100).length) + mem[64] + 32
            mem[_5291] = ('cd', 100).length
            mem[_5291 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
            mem[_5291 + (32 * ('cd', 100).length) + 32] = 0
            _5292 = mem[64]
            mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
            mem[_5292] = ('cd', 164).length
            mem[_5292 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
            mem[_5292 + (32 * ('cd', 164).length) + 32] = 0
            idx = 0
            while idx < ('cd', 68).length - 1:
                require idx < mem[_5290]
                require idx + 1 < mem[_5290]
                require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
                if mem[(32 * idx) + _5290 + 44 len 20] < mem[(32 * idx + 1) + _5290 + 44 len 20]:
                    _7712 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                    if mem[(32 * idx) + _5290 + 44 len 20] == mem[(32 * idx) + _5290 + 44 len 20]:
                        if idx >= mem[_5290] - 2:
                            require idx < mem[_5292]
                            require idx < mem[_5291]
                            if not mem[(32 * idx) + _5292 + 32]:
                                _8615 = mem[(32 * idx) + _5291 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7712
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8615))
                                call address(_8615).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7712, this.address
                            else:
                                _8617 = mem[(32 * idx) + _5291 + 32]
                                _8618 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8618 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8618 + 36] = 0
                                mem[_8618 + 68] = _7712
                                mem[_8618 + 100] = this.address
                                mem[_8618 + 132] = 128
                                mem[_8618 + 164] = mem[_8618]
                                s = 0
                                while s < mem[_8618]:
                                    mem[s + _8618 + 196] = mem[s + _8618 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8618]) > mem[_8618]:
                                    mem[mem[_8618] + _8618 + 196] = 0
                                require ext_code.size(address(_8617))
                                call address(_8617).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7712, address(this.address), 128, mem[_8618], mem[_8618 + 196 len ceil32(mem[_8618])]
                        else:
                            require idx + 1 < mem[_5291]
                            _7944 = mem[(32 * idx + 1) + _5291 + 32]
                            require idx < mem[_5292]
                            require idx < mem[_5291]
                            if not mem[(32 * idx) + _5292 + 32]:
                                _8952 = mem[(32 * idx) + _5291 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7712
                                mem[mem[64] + 68] = address(_7944)
                                require ext_code.size(address(_8952))
                                call address(_8952).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7712, address(_7944)
                            else:
                                _8954 = mem[(32 * idx) + _5291 + 32]
                                _8955 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8955 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8955 + 36] = 0
                                mem[_8955 + 68] = _7712
                                mem[_8955 + 100] = address(_7944)
                                mem[_8955 + 132] = 128
                                mem[_8955 + 164] = mem[_8955]
                                s = 0
                                while s < mem[_8955]:
                                    mem[s + _8955 + 196] = mem[s + _8955 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8955]) > mem[_8955]:
                                    mem[mem[_8955] + _8955 + 196] = 0
                                require ext_code.size(address(_8954))
                                call address(_8954).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7712, address(_7944), 128, mem[_8955], mem[_8955 + 196 len ceil32(mem[_8955])]
                    else:
                        if idx >= mem[_5290] - 2:
                            require idx < mem[_5292]
                            require idx < mem[_5291]
                            if not mem[(32 * idx) + _5292 + 32]:
                                _8621 = mem[(32 * idx) + _5291 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7712
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8621))
                                call address(_8621).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7712, 0, this.address
                            else:
                                _8623 = mem[(32 * idx) + _5291 + 32]
                                _8624 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8624 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8624 + 36] = _7712
                                mem[_8624 + 68] = 0
                                mem[_8624 + 100] = this.address
                                mem[_8624 + 132] = 128
                                mem[_8624 + 164] = mem[_8624]
                                s = 0
                                while s < mem[_8624]:
                                    mem[s + _8624 + 196] = mem[s + _8624 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8624]) > mem[_8624]:
                                    mem[mem[_8624] + _8624 + 196] = 0
                                require ext_code.size(address(_8623))
                                call address(_8623).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7712, 0, address(this.address), 128, mem[_8624], mem[_8624 + 196 len ceil32(mem[_8624])]
                        else:
                            require idx + 1 < mem[_5291]
                            _7946 = mem[(32 * idx + 1) + _5291 + 32]
                            require idx < mem[_5292]
                            require idx < mem[_5291]
                            if not mem[(32 * idx) + _5292 + 32]:
                                _8957 = mem[(32 * idx) + _5291 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7712
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_7946)
                                require ext_code.size(address(_8957))
                                call address(_8957).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7712, 0, address(_7946)
                            else:
                                _8959 = mem[(32 * idx) + _5291 + 32]
                                _8960 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8960 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8960 + 36] = _7712
                                mem[_8960 + 68] = 0
                                mem[_8960 + 100] = address(_7946)
                                mem[_8960 + 132] = 128
                                mem[_8960 + 164] = mem[_8960]
                                s = 0
                                while s < mem[_8960]:
                                    mem[s + _8960 + 196] = mem[s + _8960 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8960]) > mem[_8960]:
                                    mem[mem[_8960] + _8960 + 196] = 0
                                require ext_code.size(address(_8959))
                                call address(_8959).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7712, 0, address(_7946), 128, mem[_8960], mem[_8960 + 196 len ceil32(mem[_8960])]
                else:
                    _7713 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                    if mem[(32 * idx) + _5290 + 44 len 20] == mem[(32 * idx + 1) + _5290 + 44 len 20]:
                        if idx >= mem[_5290] - 2:
                            require idx < mem[_5292]
                            require idx < mem[_5291]
                            if not mem[(32 * idx) + _5292 + 32]:
                                _8627 = mem[(32 * idx) + _5291 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7713
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8627))
                                call address(_8627).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7713, this.address
                            else:
                                _8629 = mem[(32 * idx) + _5291 + 32]
                                _8630 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8630 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8630 + 36] = 0
                                mem[_8630 + 68] = _7713
                                mem[_8630 + 100] = this.address
                                mem[_8630 + 132] = 128
                                mem[_8630 + 164] = mem[_8630]
                                s = 0
                                while s < mem[_8630]:
                                    mem[s + _8630 + 196] = mem[s + _8630 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8630]) > mem[_8630]:
                                    mem[mem[_8630] + _8630 + 196] = 0
                                require ext_code.size(address(_8629))
                                call address(_8629).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7713, address(this.address), 128, mem[_8630], mem[_8630 + 196 len ceil32(mem[_8630])]
                        else:
                            require idx + 1 < mem[_5291]
                            _7948 = mem[(32 * idx + 1) + _5291 + 32]
                            require idx < mem[_5292]
                            require idx < mem[_5291]
                            if not mem[(32 * idx) + _5292 + 32]:
                                _8962 = mem[(32 * idx) + _5291 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 0
                                mem[mem[64] + 36] = _7713
                                mem[mem[64] + 68] = address(_7948)
                                require ext_code.size(address(_8962))
                                call address(_8962).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args 0, _7713, address(_7948)
                            else:
                                _8964 = mem[(32 * idx) + _5291 + 32]
                                _8965 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8965 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8965 + 36] = 0
                                mem[_8965 + 68] = _7713
                                mem[_8965 + 100] = address(_7948)
                                mem[_8965 + 132] = 128
                                mem[_8965 + 164] = mem[_8965]
                                s = 0
                                while s < mem[_8965]:
                                    mem[s + _8965 + 196] = mem[s + _8965 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8965]) > mem[_8965]:
                                    mem[mem[_8965] + _8965 + 196] = 0
                                require ext_code.size(address(_8964))
                                call address(_8964).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args 0, _7713, address(_7948), 128, mem[_8965], mem[_8965 + 196 len ceil32(mem[_8965])]
                    else:
                        if idx >= mem[_5290] - 2:
                            require idx < mem[_5292]
                            require idx < mem[_5291]
                            if not mem[(32 * idx) + _5292 + 32]:
                                _8633 = mem[(32 * idx) + _5291 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7713
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(_8633))
                                call address(_8633).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7713, 0, this.address
                            else:
                                _8635 = mem[(32 * idx) + _5291 + 32]
                                _8636 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8636 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8636 + 36] = _7713
                                mem[_8636 + 68] = 0
                                mem[_8636 + 100] = this.address
                                mem[_8636 + 132] = 128
                                mem[_8636 + 164] = mem[_8636]
                                s = 0
                                while s < mem[_8636]:
                                    mem[s + _8636 + 196] = mem[s + _8636 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8636]) > mem[_8636]:
                                    mem[mem[_8636] + _8636 + 196] = 0
                                require ext_code.size(address(_8635))
                                call address(_8635).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7713, 0, address(this.address), 128, mem[_8636], mem[_8636 + 196 len ceil32(mem[_8636])]
                        else:
                            require idx + 1 < mem[_5291]
                            _7950 = mem[(32 * idx + 1) + _5291 + 32]
                            require idx < mem[_5292]
                            require idx < mem[_5291]
                            if not mem[(32 * idx) + _5292 + 32]:
                                _8967 = mem[(32 * idx) + _5291 + 32]
                                mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _7713
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = address(_7950)
                                require ext_code.size(address(_8967))
                                call address(_8967).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                     gas gas_remaining wei
                                    args _7713, 0, address(_7950)
                            else:
                                _8969 = mem[(32 * idx) + _5291 + 32]
                                _8970 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_8970 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_8970 + 36] = _7713
                                mem[_8970 + 68] = 0
                                mem[_8970 + 100] = address(_7950)
                                mem[_8970 + 132] = 128
                                mem[_8970 + 164] = mem[_8970]
                                s = 0
                                while s < mem[_8970]:
                                    mem[s + _8970 + 196] = mem[s + _8970 + 32]
                                    s = s + 32
                                    continue 
                                if ceil32(mem[_8970]) > mem[_8970]:
                                    mem[mem[_8970] + _8970 + 196] = 0
                                require ext_code.size(address(_8969))
                                call address(_8969).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                     gas gas_remaining wei
                                    args _7713, 0, address(_7950), 128, mem[_8970], mem[_8970 + 196 len ceil32(mem[_8970])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                idx = idx + 1
                continue 
            mem[mem[64]] = 32
            _7652 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
            mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
            mem[mem[64] + 64 len 32 * _7652] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224 len 32 * _7652]
            return 32, mem[mem[64] + 32 len (32 * _7652) + 32]
        require mem[96] >= 32
        require mem[128] == bool(mem[128])
        if not mem[128]:
            revert with 0, 'TransferHelper::safeTransfer: transfer failed'
        _5424 = mem[64]
        mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
        mem[_5424] = ('cd', 68).length
        mem[_5424 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
        mem[_5424 + (32 * ('cd', 68).length) + 32] = 0
        _5425 = mem[64]
        mem[64] = (32 * ('cd', 100).length) + mem[64] + 32
        mem[_5425] = ('cd', 100).length
        mem[_5425 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
        mem[_5425 + (32 * ('cd', 100).length) + 32] = 0
        _5426 = mem[64]
        mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
        mem[_5426] = ('cd', 164).length
        mem[_5426 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
        mem[_5426 + (32 * ('cd', 164).length) + 32] = 0
        idx = 0
        while idx < ('cd', 68).length - 1:
            require idx < mem[_5424]
            require idx + 1 < mem[_5424]
            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
            if mem[(32 * idx) + _5424 + 44 len 20] < mem[(32 * idx + 1) + _5424 + 44 len 20]:
                _7714 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                if mem[(32 * idx) + _5424 + 44 len 20] == mem[(32 * idx) + _5424 + 44 len 20]:
                    if idx >= mem[_5424] - 2:
                        require idx < mem[_5426]
                        require idx < mem[_5425]
                        if not mem[(32 * idx) + _5426 + 32]:
                            _8640 = mem[(32 * idx) + _5425 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _7714
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_8640))
                            call address(_8640).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _7714, this.address
                        else:
                            _8642 = mem[(32 * idx) + _5425 + 32]
                            _8643 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8643 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8643 + 36] = 0
                            mem[_8643 + 68] = _7714
                            mem[_8643 + 100] = this.address
                            mem[_8643 + 132] = 128
                            mem[_8643 + 164] = mem[_8643]
                            s = 0
                            while s < mem[_8643]:
                                mem[s + _8643 + 196] = mem[s + _8643 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8643]) > mem[_8643]:
                                mem[mem[_8643] + _8643 + 196] = 0
                            require ext_code.size(address(_8642))
                            call address(_8642).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _7714, address(this.address), 128, mem[_8643], mem[_8643 + 196 len ceil32(mem[_8643])]
                    else:
                        require idx + 1 < mem[_5425]
                        _7952 = mem[(32 * idx + 1) + _5425 + 32]
                        require idx < mem[_5426]
                        require idx < mem[_5425]
                        if not mem[(32 * idx) + _5426 + 32]:
                            _8972 = mem[(32 * idx) + _5425 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _7714
                            mem[mem[64] + 68] = address(_7952)
                            require ext_code.size(address(_8972))
                            call address(_8972).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _7714, address(_7952)
                        else:
                            _8974 = mem[(32 * idx) + _5425 + 32]
                            _8975 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8975 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8975 + 36] = 0
                            mem[_8975 + 68] = _7714
                            mem[_8975 + 100] = address(_7952)
                            mem[_8975 + 132] = 128
                            mem[_8975 + 164] = mem[_8975]
                            s = 0
                            while s < mem[_8975]:
                                mem[s + _8975 + 196] = mem[s + _8975 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8975]) > mem[_8975]:
                                mem[mem[_8975] + _8975 + 196] = 0
                            require ext_code.size(address(_8974))
                            call address(_8974).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _7714, address(_7952), 128, mem[_8975], mem[_8975 + 196 len ceil32(mem[_8975])]
                else:
                    if idx >= mem[_5424] - 2:
                        require idx < mem[_5426]
                        require idx < mem[_5425]
                        if not mem[(32 * idx) + _5426 + 32]:
                            _8646 = mem[(32 * idx) + _5425 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _7714
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_8646))
                            call address(_8646).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _7714, 0, this.address
                        else:
                            _8648 = mem[(32 * idx) + _5425 + 32]
                            _8649 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8649 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8649 + 36] = _7714
                            mem[_8649 + 68] = 0
                            mem[_8649 + 100] = this.address
                            mem[_8649 + 132] = 128
                            mem[_8649 + 164] = mem[_8649]
                            s = 0
                            while s < mem[_8649]:
                                mem[s + _8649 + 196] = mem[s + _8649 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8649]) > mem[_8649]:
                                mem[mem[_8649] + _8649 + 196] = 0
                            require ext_code.size(address(_8648))
                            call address(_8648).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _7714, 0, address(this.address), 128, mem[_8649], mem[_8649 + 196 len ceil32(mem[_8649])]
                    else:
                        require idx + 1 < mem[_5425]
                        _7954 = mem[(32 * idx + 1) + _5425 + 32]
                        require idx < mem[_5426]
                        require idx < mem[_5425]
                        if not mem[(32 * idx) + _5426 + 32]:
                            _8977 = mem[(32 * idx) + _5425 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _7714
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_7954)
                            require ext_code.size(address(_8977))
                            call address(_8977).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _7714, 0, address(_7954)
                        else:
                            _8979 = mem[(32 * idx) + _5425 + 32]
                            _8980 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8980 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8980 + 36] = _7714
                            mem[_8980 + 68] = 0
                            mem[_8980 + 100] = address(_7954)
                            mem[_8980 + 132] = 128
                            mem[_8980 + 164] = mem[_8980]
                            s = 0
                            while s < mem[_8980]:
                                mem[s + _8980 + 196] = mem[s + _8980 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8980]) > mem[_8980]:
                                mem[mem[_8980] + _8980 + 196] = 0
                            require ext_code.size(address(_8979))
                            call address(_8979).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _7714, 0, address(_7954), 128, mem[_8980], mem[_8980 + 196 len ceil32(mem[_8980])]
            else:
                _7715 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                if mem[(32 * idx) + _5424 + 44 len 20] == mem[(32 * idx + 1) + _5424 + 44 len 20]:
                    if idx >= mem[_5424] - 2:
                        require idx < mem[_5426]
                        require idx < mem[_5425]
                        if not mem[(32 * idx) + _5426 + 32]:
                            _8652 = mem[(32 * idx) + _5425 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _7715
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_8652))
                            call address(_8652).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _7715, this.address
                        else:
                            _8654 = mem[(32 * idx) + _5425 + 32]
                            _8655 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8655 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8655 + 36] = 0
                            mem[_8655 + 68] = _7715
                            mem[_8655 + 100] = this.address
                            mem[_8655 + 132] = 128
                            mem[_8655 + 164] = mem[_8655]
                            s = 0
                            while s < mem[_8655]:
                                mem[s + _8655 + 196] = mem[s + _8655 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8655]) > mem[_8655]:
                                mem[mem[_8655] + _8655 + 196] = 0
                            require ext_code.size(address(_8654))
                            call address(_8654).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _7715, address(this.address), 128, mem[_8655], mem[_8655 + 196 len ceil32(mem[_8655])]
                    else:
                        require idx + 1 < mem[_5425]
                        _7956 = mem[(32 * idx + 1) + _5425 + 32]
                        require idx < mem[_5426]
                        require idx < mem[_5425]
                        if not mem[(32 * idx) + _5426 + 32]:
                            _8982 = mem[(32 * idx) + _5425 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _7715
                            mem[mem[64] + 68] = address(_7956)
                            require ext_code.size(address(_8982))
                            call address(_8982).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _7715, address(_7956)
                        else:
                            _8984 = mem[(32 * idx) + _5425 + 32]
                            _8985 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8985 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8985 + 36] = 0
                            mem[_8985 + 68] = _7715
                            mem[_8985 + 100] = address(_7956)
                            mem[_8985 + 132] = 128
                            mem[_8985 + 164] = mem[_8985]
                            s = 0
                            while s < mem[_8985]:
                                mem[s + _8985 + 196] = mem[s + _8985 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8985]) > mem[_8985]:
                                mem[mem[_8985] + _8985 + 196] = 0
                            require ext_code.size(address(_8984))
                            call address(_8984).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _7715, address(_7956), 128, mem[_8985], mem[_8985 + 196 len ceil32(mem[_8985])]
                else:
                    if idx >= mem[_5424] - 2:
                        require idx < mem[_5426]
                        require idx < mem[_5425]
                        if not mem[(32 * idx) + _5426 + 32]:
                            _8658 = mem[(32 * idx) + _5425 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _7715
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_8658))
                            call address(_8658).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _7715, 0, this.address
                        else:
                            _8660 = mem[(32 * idx) + _5425 + 32]
                            _8661 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8661 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8661 + 36] = _7715
                            mem[_8661 + 68] = 0
                            mem[_8661 + 100] = this.address
                            mem[_8661 + 132] = 128
                            mem[_8661 + 164] = mem[_8661]
                            s = 0
                            while s < mem[_8661]:
                                mem[s + _8661 + 196] = mem[s + _8661 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8661]) > mem[_8661]:
                                mem[mem[_8661] + _8661 + 196] = 0
                            require ext_code.size(address(_8660))
                            call address(_8660).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _7715, 0, address(this.address), 128, mem[_8661], mem[_8661 + 196 len ceil32(mem[_8661])]
                    else:
                        require idx + 1 < mem[_5425]
                        _7958 = mem[(32 * idx + 1) + _5425 + 32]
                        require idx < mem[_5426]
                        require idx < mem[_5425]
                        if not mem[(32 * idx) + _5426 + 32]:
                            _8987 = mem[(32 * idx) + _5425 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _7715
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_7958)
                            require ext_code.size(address(_8987))
                            call address(_8987).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _7715, 0, address(_7958)
                        else:
                            _8989 = mem[(32 * idx) + _5425 + 32]
                            _8990 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8990 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8990 + 36] = _7715
                            mem[_8990 + 68] = 0
                            mem[_8990 + 100] = address(_7958)
                            mem[_8990 + 132] = 128
                            mem[_8990 + 164] = mem[_8990]
                            s = 0
                            while s < mem[_8990]:
                                mem[s + _8990 + 196] = mem[s + _8990 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8990]) > mem[_8990]:
                                mem[mem[_8990] + _8990 + 196] = 0
                            require ext_code.size(address(_8989))
                            call address(_8989).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _7715, 0, address(_7958), 128, mem[_8990], mem[_8990 + 196 len ceil32(mem[_8990])]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _7653 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
        mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
        mem[mem[64] + 64 len 32 * _7653] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224 len 32 * _7653]
        return 32, mem[mem[64] + 32 len (32 * _7653) + 32]
    _5247 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size) + 1
    mem[_5247] = return_data.size
    mem[_5247 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
    if not ext_call.success:
        revert with 0, 'TransferHelper::safeTransfer: transfer failed'
    if not return_data.size:
        _5293 = mem[64]
        mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
        mem[_5293] = ('cd', 68).length
        mem[_5293 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
        mem[_5293 + (32 * ('cd', 68).length) + 32] = 0
        _5294 = mem[64]
        mem[64] = (32 * ('cd', 100).length) + mem[64] + 32
        mem[_5294] = ('cd', 100).length
        mem[_5294 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
        mem[_5294 + (32 * ('cd', 100).length) + 32] = 0
        _5295 = mem[64]
        mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
        mem[_5295] = ('cd', 164).length
        mem[_5295 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
        mem[_5295 + (32 * ('cd', 164).length) + 32] = 0
        idx = 0
        while idx < ('cd', 68).length - 1:
            require idx < mem[_5293]
            require idx + 1 < mem[_5293]
            require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
            if mem[(32 * idx) + _5293 + 44 len 20] < mem[(32 * idx + 1) + _5293 + 44 len 20]:
                _7716 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                if mem[(32 * idx) + _5293 + 44 len 20] == mem[(32 * idx) + _5293 + 44 len 20]:
                    if idx >= mem[_5293] - 2:
                        require idx < mem[_5295]
                        require idx < mem[_5294]
                        if not mem[(32 * idx) + _5295 + 32]:
                            _8665 = mem[(32 * idx) + _5294 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _7716
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_8665))
                            call address(_8665).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _7716, this.address
                        else:
                            _8667 = mem[(32 * idx) + _5294 + 32]
                            _8668 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8668 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8668 + 36] = 0
                            mem[_8668 + 68] = _7716
                            mem[_8668 + 100] = this.address
                            mem[_8668 + 132] = 128
                            mem[_8668 + 164] = mem[_8668]
                            s = 0
                            while s < mem[_8668]:
                                mem[s + _8668 + 196] = mem[s + _8668 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8668]) > mem[_8668]:
                                mem[mem[_8668] + _8668 + 196] = 0
                            require ext_code.size(address(_8667))
                            call address(_8667).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _7716, address(this.address), 128, mem[_8668], mem[_8668 + 196 len ceil32(mem[_8668])]
                    else:
                        require idx + 1 < mem[_5294]
                        _7960 = mem[(32 * idx + 1) + _5294 + 32]
                        require idx < mem[_5295]
                        require idx < mem[_5294]
                        if not mem[(32 * idx) + _5295 + 32]:
                            _8992 = mem[(32 * idx) + _5294 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _7716
                            mem[mem[64] + 68] = address(_7960)
                            require ext_code.size(address(_8992))
                            call address(_8992).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _7716, address(_7960)
                        else:
                            _8994 = mem[(32 * idx) + _5294 + 32]
                            _8995 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8995 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8995 + 36] = 0
                            mem[_8995 + 68] = _7716
                            mem[_8995 + 100] = address(_7960)
                            mem[_8995 + 132] = 128
                            mem[_8995 + 164] = mem[_8995]
                            s = 0
                            while s < mem[_8995]:
                                mem[s + _8995 + 196] = mem[s + _8995 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8995]) > mem[_8995]:
                                mem[mem[_8995] + _8995 + 196] = 0
                            require ext_code.size(address(_8994))
                            call address(_8994).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _7716, address(_7960), 128, mem[_8995], mem[_8995 + 196 len ceil32(mem[_8995])]
                else:
                    if idx >= mem[_5293] - 2:
                        require idx < mem[_5295]
                        require idx < mem[_5294]
                        if not mem[(32 * idx) + _5295 + 32]:
                            _8671 = mem[(32 * idx) + _5294 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _7716
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_8671))
                            call address(_8671).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _7716, 0, this.address
                        else:
                            _8673 = mem[(32 * idx) + _5294 + 32]
                            _8674 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8674 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8674 + 36] = _7716
                            mem[_8674 + 68] = 0
                            mem[_8674 + 100] = this.address
                            mem[_8674 + 132] = 128
                            mem[_8674 + 164] = mem[_8674]
                            s = 0
                            while s < mem[_8674]:
                                mem[s + _8674 + 196] = mem[s + _8674 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8674]) > mem[_8674]:
                                mem[mem[_8674] + _8674 + 196] = 0
                            require ext_code.size(address(_8673))
                            call address(_8673).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _7716, 0, address(this.address), 128, mem[_8674], mem[_8674 + 196 len ceil32(mem[_8674])]
                    else:
                        require idx + 1 < mem[_5294]
                        _7962 = mem[(32 * idx + 1) + _5294 + 32]
                        require idx < mem[_5295]
                        require idx < mem[_5294]
                        if not mem[(32 * idx) + _5295 + 32]:
                            _8997 = mem[(32 * idx) + _5294 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _7716
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_7962)
                            require ext_code.size(address(_8997))
                            call address(_8997).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _7716, 0, address(_7962)
                        else:
                            _8999 = mem[(32 * idx) + _5294 + 32]
                            _9000 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_9000 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_9000 + 36] = _7716
                            mem[_9000 + 68] = 0
                            mem[_9000 + 100] = address(_7962)
                            mem[_9000 + 132] = 128
                            mem[_9000 + 164] = mem[_9000]
                            s = 0
                            while s < mem[_9000]:
                                mem[s + _9000 + 196] = mem[s + _9000 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_9000]) > mem[_9000]:
                                mem[mem[_9000] + _9000 + 196] = 0
                            require ext_code.size(address(_8999))
                            call address(_8999).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _7716, 0, address(_7962), 128, mem[_9000], mem[_9000 + 196 len ceil32(mem[_9000])]
            else:
                _7717 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
                if mem[(32 * idx) + _5293 + 44 len 20] == mem[(32 * idx + 1) + _5293 + 44 len 20]:
                    if idx >= mem[_5293] - 2:
                        require idx < mem[_5295]
                        require idx < mem[_5294]
                        if not mem[(32 * idx) + _5295 + 32]:
                            _8677 = mem[(32 * idx) + _5294 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _7717
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_8677))
                            call address(_8677).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _7717, this.address
                        else:
                            _8679 = mem[(32 * idx) + _5294 + 32]
                            _8680 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8680 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8680 + 36] = 0
                            mem[_8680 + 68] = _7717
                            mem[_8680 + 100] = this.address
                            mem[_8680 + 132] = 128
                            mem[_8680 + 164] = mem[_8680]
                            s = 0
                            while s < mem[_8680]:
                                mem[s + _8680 + 196] = mem[s + _8680 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8680]) > mem[_8680]:
                                mem[mem[_8680] + _8680 + 196] = 0
                            require ext_code.size(address(_8679))
                            call address(_8679).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _7717, address(this.address), 128, mem[_8680], mem[_8680 + 196 len ceil32(mem[_8680])]
                    else:
                        require idx + 1 < mem[_5294]
                        _7964 = mem[(32 * idx + 1) + _5294 + 32]
                        require idx < mem[_5295]
                        require idx < mem[_5294]
                        if not mem[(32 * idx) + _5295 + 32]:
                            _9002 = mem[(32 * idx) + _5294 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 0
                            mem[mem[64] + 36] = _7717
                            mem[mem[64] + 68] = address(_7964)
                            require ext_code.size(address(_9002))
                            call address(_9002).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args 0, _7717, address(_7964)
                        else:
                            _9004 = mem[(32 * idx) + _5294 + 32]
                            _9005 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_9005 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_9005 + 36] = 0
                            mem[_9005 + 68] = _7717
                            mem[_9005 + 100] = address(_7964)
                            mem[_9005 + 132] = 128
                            mem[_9005 + 164] = mem[_9005]
                            s = 0
                            while s < mem[_9005]:
                                mem[s + _9005 + 196] = mem[s + _9005 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_9005]) > mem[_9005]:
                                mem[mem[_9005] + _9005 + 196] = 0
                            require ext_code.size(address(_9004))
                            call address(_9004).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args 0, _7717, address(_7964), 128, mem[_9005], mem[_9005 + 196 len ceil32(mem[_9005])]
                else:
                    if idx >= mem[_5293] - 2:
                        require idx < mem[_5295]
                        require idx < mem[_5294]
                        if not mem[(32 * idx) + _5295 + 32]:
                            _8683 = mem[(32 * idx) + _5294 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _7717
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = this.address
                            require ext_code.size(address(_8683))
                            call address(_8683).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _7717, 0, this.address
                        else:
                            _8685 = mem[(32 * idx) + _5294 + 32]
                            _8686 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_8686 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_8686 + 36] = _7717
                            mem[_8686 + 68] = 0
                            mem[_8686 + 100] = this.address
                            mem[_8686 + 132] = 128
                            mem[_8686 + 164] = mem[_8686]
                            s = 0
                            while s < mem[_8686]:
                                mem[s + _8686 + 196] = mem[s + _8686 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_8686]) > mem[_8686]:
                                mem[mem[_8686] + _8686 + 196] = 0
                            require ext_code.size(address(_8685))
                            call address(_8685).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _7717, 0, address(this.address), 128, mem[_8686], mem[_8686 + 196 len ceil32(mem[_8686])]
                    else:
                        require idx + 1 < mem[_5294]
                        _7966 = mem[(32 * idx + 1) + _5294 + 32]
                        require idx < mem[_5295]
                        require idx < mem[_5294]
                        if not mem[(32 * idx) + _5295 + 32]:
                            _9007 = mem[(32 * idx) + _5294 + 32]
                            mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _7717
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = address(_7966)
                            require ext_code.size(address(_9007))
                            call address(_9007).swap(uint256 rg1, uint256 rg2, address rg3) with:
                                 gas gas_remaining wei
                                args _7717, 0, address(_7966)
                        else:
                            _9009 = mem[(32 * idx) + _5294 + 32]
                            _9010 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_9010 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_9010 + 36] = _7717
                            mem[_9010 + 68] = 0
                            mem[_9010 + 100] = address(_7966)
                            mem[_9010 + 132] = 128
                            mem[_9010 + 164] = mem[_9010]
                            s = 0
                            while s < mem[_9010]:
                                mem[s + _9010 + 196] = mem[s + _9010 + 32]
                                s = s + 32
                                continue 
                            if ceil32(mem[_9010]) > mem[_9010]:
                                mem[mem[_9010] + _9010 + 196] = 0
                            require ext_code.size(address(_9009))
                            call address(_9009).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                                 gas gas_remaining wei
                                args _7717, 0, address(_7966), 128, mem[_9010], mem[_9010 + 196 len ceil32(mem[_9010])]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _7654 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
        mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
        mem[mem[64] + 64 len 32 * _7654] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224 len 32 * _7654]
        return 32, mem[mem[64] + 32 len (32 * _7654) + 32]
    require return_data.size >= 32
    require mem[_5247 + 32] == bool(mem[_5247 + 32])
    if not mem[_5247 + 32]:
        revert with 0, 'TransferHelper::safeTransfer: transfer failed'
    _5429 = mem[64]
    mem[64] = mem[64] + (32 * ('cd', 68).length) + 32
    mem[_5429] = ('cd', 68).length
    mem[_5429 + 32 len 32 * ('cd', 68).length] = call.data[cd[68] + 36 len 32 * ('cd', 68).length]
    mem[_5429 + (32 * ('cd', 68).length) + 32] = 0
    _5430 = mem[64]
    mem[64] = (32 * ('cd', 100).length) + mem[64] + 32
    mem[_5430] = ('cd', 100).length
    mem[_5430 + 32 len 32 * ('cd', 100).length] = call.data[cd[100] + 36 len 32 * ('cd', 100).length]
    mem[_5430 + (32 * ('cd', 100).length) + 32] = 0
    _5431 = mem[64]
    mem[64] = (32 * ('cd', 164).length) + mem[64] + 32
    mem[_5431] = ('cd', 164).length
    mem[_5431 + 32 len 32 * ('cd', 164).length] = call.data[cd[164] + 36 len 32 * ('cd', 164).length]
    mem[_5431 + (32 * ('cd', 164).length) + 32] = 0
    idx = 0
    while idx < ('cd', 68).length - 1:
        require idx < mem[_5429]
        require idx + 1 < mem[_5429]
        require idx + 1 < mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
        if mem[(32 * idx) + _5429 + 44 len 20] < mem[(32 * idx + 1) + _5429 + 44 len 20]:
            _7718 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
            if mem[(32 * idx) + _5429 + 44 len 20] == mem[(32 * idx) + _5429 + 44 len 20]:
                if idx >= mem[_5429] - 2:
                    require idx < mem[_5431]
                    require idx < mem[_5430]
                    if not mem[(32 * idx) + _5431 + 32]:
                        _8690 = mem[(32 * idx) + _5430 + 32]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 0
                        mem[mem[64] + 36] = _7718
                        mem[mem[64] + 68] = this.address
                        require ext_code.size(address(_8690))
                        call address(_8690).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args 0, _7718, this.address
                    else:
                        _8692 = mem[(32 * idx) + _5430 + 32]
                        _8693 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_8693 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_8693 + 36] = 0
                        mem[_8693 + 68] = _7718
                        mem[_8693 + 100] = this.address
                        mem[_8693 + 132] = 128
                        mem[_8693 + 164] = mem[_8693]
                        s = 0
                        while s < mem[_8693]:
                            mem[s + _8693 + 196] = mem[s + _8693 + 32]
                            s = s + 32
                            continue 
                        if ceil32(mem[_8693]) > mem[_8693]:
                            mem[mem[_8693] + _8693 + 196] = 0
                        require ext_code.size(address(_8692))
                        call address(_8692).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _7718, address(this.address), 128, mem[_8693], mem[_8693 + 196 len ceil32(mem[_8693])]
                else:
                    require idx + 1 < mem[_5430]
                    _7968 = mem[(32 * idx + 1) + _5430 + 32]
                    require idx < mem[_5431]
                    require idx < mem[_5430]
                    if not mem[(32 * idx) + _5431 + 32]:
                        _9012 = mem[(32 * idx) + _5430 + 32]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 0
                        mem[mem[64] + 36] = _7718
                        mem[mem[64] + 68] = address(_7968)
                        require ext_code.size(address(_9012))
                        call address(_9012).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args 0, _7718, address(_7968)
                    else:
                        _9014 = mem[(32 * idx) + _5430 + 32]
                        _9015 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_9015 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_9015 + 36] = 0
                        mem[_9015 + 68] = _7718
                        mem[_9015 + 100] = address(_7968)
                        mem[_9015 + 132] = 128
                        mem[_9015 + 164] = mem[_9015]
                        s = 0
                        while s < mem[_9015]:
                            mem[s + _9015 + 196] = mem[s + _9015 + 32]
                            s = s + 32
                            continue 
                        if ceil32(mem[_9015]) > mem[_9015]:
                            mem[mem[_9015] + _9015 + 196] = 0
                        require ext_code.size(address(_9014))
                        call address(_9014).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _7718, address(_7968), 128, mem[_9015], mem[_9015 + 196 len ceil32(mem[_9015])]
            else:
                if idx >= mem[_5429] - 2:
                    require idx < mem[_5431]
                    require idx < mem[_5430]
                    if not mem[(32 * idx) + _5431 + 32]:
                        _8696 = mem[(32 * idx) + _5430 + 32]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _7718
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = this.address
                        require ext_code.size(address(_8696))
                        call address(_8696).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args _7718, 0, this.address
                    else:
                        _8698 = mem[(32 * idx) + _5430 + 32]
                        _8699 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_8699 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_8699 + 36] = _7718
                        mem[_8699 + 68] = 0
                        mem[_8699 + 100] = this.address
                        mem[_8699 + 132] = 128
                        mem[_8699 + 164] = mem[_8699]
                        s = 0
                        while s < mem[_8699]:
                            mem[s + _8699 + 196] = mem[s + _8699 + 32]
                            s = s + 32
                            continue 
                        if ceil32(mem[_8699]) > mem[_8699]:
                            mem[mem[_8699] + _8699 + 196] = 0
                        require ext_code.size(address(_8698))
                        call address(_8698).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _7718, 0, address(this.address), 128, mem[_8699], mem[_8699 + 196 len ceil32(mem[_8699])]
                else:
                    require idx + 1 < mem[_5430]
                    _7970 = mem[(32 * idx + 1) + _5430 + 32]
                    require idx < mem[_5431]
                    require idx < mem[_5430]
                    if not mem[(32 * idx) + _5431 + 32]:
                        _9017 = mem[(32 * idx) + _5430 + 32]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _7718
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = address(_7970)
                        require ext_code.size(address(_9017))
                        call address(_9017).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args _7718, 0, address(_7970)
                    else:
                        _9019 = mem[(32 * idx) + _5430 + 32]
                        _9020 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_9020 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_9020 + 36] = _7718
                        mem[_9020 + 68] = 0
                        mem[_9020 + 100] = address(_7970)
                        mem[_9020 + 132] = 128
                        mem[_9020 + 164] = mem[_9020]
                        s = 0
                        while s < mem[_9020]:
                            mem[s + _9020 + 196] = mem[s + _9020 + 32]
                            s = s + 32
                            continue 
                        if ceil32(mem[_9020]) > mem[_9020]:
                            mem[mem[_9020] + _9020 + 196] = 0
                        require ext_code.size(address(_9019))
                        call address(_9019).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _7718, 0, address(_7970), 128, mem[_9020], mem[_9020 + 196 len ceil32(mem[_9020])]
        else:
            _7719 = mem[(32 * idx + 1) + (32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224]
            if mem[(32 * idx) + _5429 + 44 len 20] == mem[(32 * idx + 1) + _5429 + 44 len 20]:
                if idx >= mem[_5429] - 2:
                    require idx < mem[_5431]
                    require idx < mem[_5430]
                    if not mem[(32 * idx) + _5431 + 32]:
                        _8702 = mem[(32 * idx) + _5430 + 32]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 0
                        mem[mem[64] + 36] = _7719
                        mem[mem[64] + 68] = this.address
                        require ext_code.size(address(_8702))
                        call address(_8702).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args 0, _7719, this.address
                    else:
                        _8704 = mem[(32 * idx) + _5430 + 32]
                        _8705 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_8705 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_8705 + 36] = 0
                        mem[_8705 + 68] = _7719
                        mem[_8705 + 100] = this.address
                        mem[_8705 + 132] = 128
                        mem[_8705 + 164] = mem[_8705]
                        s = 0
                        while s < mem[_8705]:
                            mem[s + _8705 + 196] = mem[s + _8705 + 32]
                            s = s + 32
                            continue 
                        if ceil32(mem[_8705]) > mem[_8705]:
                            mem[mem[_8705] + _8705 + 196] = 0
                        require ext_code.size(address(_8704))
                        call address(_8704).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _7719, address(this.address), 128, mem[_8705], mem[_8705 + 196 len ceil32(mem[_8705])]
                else:
                    require idx + 1 < mem[_5430]
                    _7972 = mem[(32 * idx + 1) + _5430 + 32]
                    require idx < mem[_5431]
                    require idx < mem[_5430]
                    if not mem[(32 * idx) + _5431 + 32]:
                        _9022 = mem[(32 * idx) + _5430 + 32]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 0
                        mem[mem[64] + 36] = _7719
                        mem[mem[64] + 68] = address(_7972)
                        require ext_code.size(address(_9022))
                        call address(_9022).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args 0, _7719, address(_7972)
                    else:
                        _9024 = mem[(32 * idx) + _5430 + 32]
                        _9025 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_9025 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_9025 + 36] = 0
                        mem[_9025 + 68] = _7719
                        mem[_9025 + 100] = address(_7972)
                        mem[_9025 + 132] = 128
                        mem[_9025 + 164] = mem[_9025]
                        s = 0
                        while s < mem[_9025]:
                            mem[s + _9025 + 196] = mem[s + _9025 + 32]
                            s = s + 32
                            continue 
                        if ceil32(mem[_9025]) > mem[_9025]:
                            mem[mem[_9025] + _9025 + 196] = 0
                        require ext_code.size(address(_9024))
                        call address(_9024).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args 0, _7719, address(_7972), 128, mem[_9025], mem[_9025 + 196 len ceil32(mem[_9025])]
            else:
                if idx >= mem[_5429] - 2:
                    require idx < mem[_5431]
                    require idx < mem[_5430]
                    if not mem[(32 * idx) + _5431 + 32]:
                        _8708 = mem[(32 * idx) + _5430 + 32]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _7719
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = this.address
                        require ext_code.size(address(_8708))
                        call address(_8708).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args _7719, 0, this.address
                    else:
                        _8710 = mem[(32 * idx) + _5430 + 32]
                        _8711 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_8711 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_8711 + 36] = _7719
                        mem[_8711 + 68] = 0
                        mem[_8711 + 100] = this.address
                        mem[_8711 + 132] = 128
                        mem[_8711 + 164] = mem[_8711]
                        s = 0
                        while s < mem[_8711]:
                            mem[s + _8711 + 196] = mem[s + _8711 + 32]
                            s = s + 32
                            continue 
                        if ceil32(mem[_8711]) > mem[_8711]:
                            mem[mem[_8711] + _8711 + 196] = 0
                        require ext_code.size(address(_8710))
                        call address(_8710).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _7719, 0, address(this.address), 128, mem[_8711], mem[_8711 + 196 len ceil32(mem[_8711])]
                else:
                    require idx + 1 < mem[_5430]
                    _7974 = mem[(32 * idx + 1) + _5430 + 32]
                    require idx < mem[_5431]
                    require idx < mem[_5430]
                    if not mem[(32 * idx) + _5431 + 32]:
                        _9027 = mem[(32 * idx) + _5430 + 32]
                        mem[mem[64]] = 0x6d9a640a00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _7719
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = address(_7974)
                        require ext_code.size(address(_9027))
                        call address(_9027).swap(uint256 rg1, uint256 rg2, address rg3) with:
                             gas gas_remaining wei
                            args _7719, 0, address(_7974)
                    else:
                        _9029 = mem[(32 * idx) + _5430 + 32]
                        _9030 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_9030 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_9030 + 36] = _7719
                        mem[_9030 + 68] = 0
                        mem[_9030 + 100] = address(_7974)
                        mem[_9030 + 132] = 128
                        mem[_9030 + 164] = mem[_9030]
                        s = 0
                        while s < mem[_9030]:
                            mem[s + _9030 + 196] = mem[s + _9030 + 32]
                            s = s + 32
                            continue 
                        if ceil32(mem[_9030]) > mem[_9030]:
                            mem[mem[_9030] + _9030 + 196] = 0
                        require ext_code.size(address(_9029))
                        call address(_9029).swap(uint256 rg1, uint256 rg2, address rg3, bytes rg4) with:
                             gas gas_remaining wei
                            args _7719, 0, address(_7974), 128, mem[_9030], mem[_9030 + 196 len ceil32(mem[_9030])]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        idx = idx + 1
        continue 
    mem[mem[64]] = 32
    _7655 = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
    mem[mem[64] + 32] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 192]
    mem[mem[64] + 64 len 32 * _7655] = mem[(32 * ('cd', 132).length) + (32 * ('cd', 100).length) + (32 * ('cd', 68).length) + 224 len 32 * _7655]
    return 32, mem[mem[64] + 32 len (32 * _7655) + 32]
}



}
