contract main {




// =====================  Runtime code  =====================


#
#  - transferFrom(address arg1, address arg2, uint256 arg3)
#  - sub_66ac38ca(?)
#  - symbol()
#  - _fallback()
#
address _owner;
address stor1;
mapping of uint256 stor2;
mapping of uint256 allowance;
mapping of uint8 stor4;
uint256 totalSupply;
uint256 stor6;
uint256 totalFees;
array of struct stor8;
uint256 decimals;
uint256 _liquidityFee;
uint256 sub_a41a08fb;
mapping of address inviter;
address uniswapV2PairAddress;

function totalFees() {
    return totalFees
}

function totalSupply() {
    return totalSupply
}

function decimals() {
    return decimals
}

function uniswapV2Pair() {
    return uniswapV2PairAddress
}

function isExcludedFromFee(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return bool(stor4[address(arg1)])
}

function _liquidityFee() {
    return _liquidityFee
}

function owner() {
    return _owner
}

function sub_a41a08fb(?) {
    return sub_a41a08fb
}

function _owner() {
    return _owner
}

function allowance(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    return allowance[address(arg1)][address(arg2)]
}

function inviter(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return inviter[arg1]
}

function setLiquidityFeePercent(uint256 arg1) {
    require calldata.size - 4 >= 32
    if stor1 != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    _liquidityFee = arg1
}

function changeOwner(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if stor1 != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    _owner = arg1
}

function includeInFee(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if stor1 != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor4[address(arg1)] = 0
}

function excludeFromFee(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if stor1 != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor4[address(arg1)] = 1
}

function changeRouter(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if stor1 != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    uniswapV2PairAddress = arg1
}

function claimTokens() {
    if stor1 != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call _owner with:
       value eth.balance(this.address) wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function approve(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = arg2
    emit Approval(arg2, msg.sender, arg1);
    return 1
}

function tokenFromReflection(uint256 arg1) {
    require calldata.size - 4 >= 32
    if arg1 > stor6:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Amount must be less than total reflections'
    if not totalSupply:
        revert with 0, 'SafeMath: division by zero', 0
    if not totalSupply:
        revert with 0, 'SafeMath: division by zero', 0
    if not stor6 / totalSupply:
        revert with 0, 'SafeMath: division by zero', 0
    return (arg1 / stor6 / totalSupply)
}

function balanceOf(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if stor2[address(arg1)] > stor6:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Amount must be less than total reflections'
    if not totalSupply:
        revert with 0, 'SafeMath: division by zero', 0
    if not totalSupply:
        revert with 0, 'SafeMath: division by zero', 0
    if not stor6 / totalSupply:
        revert with 0, 'SafeMath: division by zero', 0
    return (stor2[address(arg1)] / stor6 / totalSupply)
}

function sub_c833172b(?) {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    if stor1 != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not totalSupply:
        revert with 0, 'SafeMath: division by zero', 0
    if not totalSupply:
        revert with 0, 'SafeMath: division by zero', 0
    if not arg2:
        stor2[address(arg1)] = 0
    else:
        if arg2 and stor6 / totalSupply > -1 / arg2:
            revert with 0, 17
        if not arg2:
            revert with 0, 18
        if arg2 * stor6 / totalSupply / arg2 != stor6 / totalSupply:
            revert with 0, 'SafeMath: multiplication overflow'
        stor2[address(arg1)] = arg2 * stor6 / totalSupply
}

function decreaseAllowance(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if arg2 > allowance[msg.sender][address(arg1)]:
        revert with 0, 32, 37, 0x6545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a6572, mem[165 len 27] >> 40, 0
    if allowance[msg.sender][address(arg1)] < arg2:
        revert with 0, 17
    if not msg.sender:
        revert with 0, 'ERC20: approve from the zero address'
    if not arg1:
        revert with 0, 'ERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = allowance[msg.sender][address(arg1)] - arg2
    emit Approval((allowance[msg.sender][address(arg1)] - arg2), msg.sender, arg1);
    return 1
}

function increaseAllowance(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if allowance[msg.sender][address(arg1)] > !arg2:
        revert with 0, 17
    if allowance[msg.sender][address(arg1)] + arg2 < allowance[msg.sender][address(arg1)]:
        revert with 0, 'SafeMath: addition overflow'
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = allowance[msg.sender][address(arg1)] + arg2
    emit Approval((allowance[msg.sender][address(arg1)] + arg2), msg.sender, arg1);
    return 1
}

function name() {
    if bool(stor8.length):
        if bool(stor8.length) == uint255(stor8.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor8.length):
            if bool(stor8.length) == uint255(stor8.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor8.length):
                if 31 < uint255(stor8.length) * 0.5:
                    mem[128] = uint256(stor8.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor8.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor8[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor8.length), data=mem[128 len ceil32(uint255(stor8.length) * 0.5)])
                mem[128] = 256 * stor8.length.field_8
        else:
            if bool(stor8.length) == stor8.length.field_1 < 32:
                revert with 0, 34
            if stor8.length.field_1:
                if 31 < stor8.length.field_1:
                    mem[128] = uint256(stor8.field_0)
                    idx = 128
                    s = 0
                    while stor8.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor8[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor8.length), data=mem[128 len ceil32(uint255(stor8.length) * 0.5)])
                mem[128] = 256 * stor8.length.field_8
        mem[ceil32(uint255(stor8.length) * 0.5) + 192 len ceil32(uint255(stor8.length) * 0.5)] = mem[128 len ceil32(uint255(stor8.length) * 0.5)]
        if ceil32(uint255(stor8.length) * 0.5) > uint255(stor8.length) * 0.5:
            mem[ceil32(uint255(stor8.length) * 0.5) + (uint255(stor8.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor8.length), data=mem[128 len ceil32(uint255(stor8.length) * 0.5)], mem[(2 * ceil32(uint255(stor8.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor8.length) * 0.5)]), 
    if bool(stor8.length) == stor8.length.field_1 < 32:
        revert with 0, 34
    if bool(stor8.length):
        if bool(stor8.length) == uint255(stor8.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor8.length):
            if 31 < uint255(stor8.length) * 0.5:
                mem[128] = uint256(stor8.field_0)
                idx = 128
                s = 0
                while (uint255(stor8.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor8[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor8.length % 128, data=mem[128 len ceil32(stor8.length.field_1)])
            mem[128] = 256 * stor8.length.field_8
    else:
        if bool(stor8.length) == stor8.length.field_1 < 32:
            revert with 0, 34
        if stor8.length.field_1:
            if 31 < stor8.length.field_1:
                mem[128] = uint256(stor8.field_0)
                idx = 128
                s = 0
                while stor8.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor8[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor8.length % 128, data=mem[128 len ceil32(stor8.length.field_1)])
            mem[128] = 256 * stor8.length.field_8
    mem[ceil32(stor8.length.field_1) + 192 len ceil32(stor8.length.field_1)] = mem[128 len ceil32(stor8.length.field_1)]
    if ceil32(stor8.length.field_1) > stor8.length.field_1:
        mem[ceil32(stor8.length.field_1) + stor8.length.field_1 + 192] = 0
    return Array(len=stor8.length % 128, data=mem[128 len ceil32(stor8.length.field_1)], mem[(2 * ceil32(stor8.length.field_1)) + 192 len 2 * ceil32(stor8.length.field_1)]), 
}

function transfer(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
    if arg2 <= 0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Transfer amount must be greater than zero'
    if stor2[address(arg1)] > stor6:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Amount must be less than total reflections'
    if not totalSupply:
        revert with 0, 'SafeMath: division by zero', 0
    if not totalSupply:
        revert with 0, 'SafeMath: division by zero', 0
    if not stor6 / totalSupply:
        revert with 0, 'SafeMath: division by zero', 0
    if not totalSupply:
        revert with 0, 'SafeMath: division by zero', 0
    if not totalSupply:
        revert with 0, 'SafeMath: division by zero', 0
    if stor4[address(msg.sender)]:
        if not arg2:
            if 0 > stor2[address(msg.sender)]:
                revert with 0, 'SafeMath: subtraction overflow', 0
            if stor2[address(msg.sender)] < 0:
                revert with 0, 17
            if stor2[address(arg1)] > -1:
                revert with 0, 17
            if stor2[address(arg1)] < stor2[address(arg1)]:
                revert with 0, 'SafeMath: addition overflow'
        else:
            if arg2 and stor6 / totalSupply > -1 / arg2:
                revert with 0, 17
            if not arg2:
                revert with 0, 18
            if arg2 * stor6 / totalSupply / arg2 != stor6 / totalSupply:
                revert with 0, 'SafeMath: multiplication overflow'
            if arg2 * stor6 / totalSupply > stor2[address(msg.sender)]:
                revert with 0, 'SafeMath: subtraction overflow', 0
            if stor2[address(msg.sender)] < arg2 * stor6 / totalSupply:
                revert with 0, 17
            stor2[address(msg.sender)] += -1 * arg2 * stor6 / totalSupply
            if not arg2 * stor6 / totalSupply / 100:
                if stor2[address(arg1)] > -1:
                    revert with 0, 17
                if stor2[address(arg1)] < stor2[address(arg1)]:
                    revert with 0, 'SafeMath: addition overflow'
            else:
                if arg2 * stor6 / totalSupply / 100 and 100 > -1 / arg2 * stor6 / totalSupply / 100:
                    revert with 0, 17
                if not arg2 * stor6 / totalSupply / 100:
                    revert with 0, 18
                if 100 * arg2 * stor6 / totalSupply / 100 / arg2 * stor6 / totalSupply / 100 != 100:
                    revert with 0, 'SafeMath: multiplication overflow'
                if stor2[address(arg1)] > !(100 * arg2 * stor6 / totalSupply / 100):
                    revert with 0, 17
                if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                    revert with 0, 'SafeMath: addition overflow'
                stor2[address(arg1)] += 100 * arg2 * stor6 / totalSupply / 100
        if not arg2 / 100:
            emit Transfer(0, msg.sender, arg1);
        else:
            if arg2 / 100 and 100 > -1 / arg2 / 100:
                revert with 0, 17
            if not arg2 / 100:
                revert with 0, 18
            if 100 * arg2 / 100 / arg2 / 100 != 100:
                revert with 0, 'SafeMath: multiplication overflow'
            emit Transfer((100 * arg2 / 100), msg.sender, arg1);
        if stor2[address(arg1)] / stor6 / totalSupply:
            if not stor2[address(arg1)] / stor6 / totalSupply:
                inviter[address(arg1)] = msg.sender
            else:
                if uniswapV2PairAddress == msg.sender:
                    inviter[address(arg1)] = uniswapV2PairAddress
        else:
            if not inviter[address(arg1)]:
                if uniswapV2PairAddress == msg.sender:
                    inviter[address(arg1)] = uniswapV2PairAddress
                else:
                    inviter[address(arg1)] = msg.sender
            else:
                if not inviter[address(arg1)]:
                    inviter[address(arg1)] = msg.sender
                else:
                    if uniswapV2PairAddress == msg.sender:
                        inviter[address(arg1)] = uniswapV2PairAddress
    else:
        if stor4[address(arg1)]:
            if not arg2:
                if 0 > stor2[address(msg.sender)]:
                    revert with 0, 'SafeMath: subtraction overflow', 0
                if stor2[address(msg.sender)] < 0:
                    revert with 0, 17
                if stor2[address(arg1)] > -1:
                    revert with 0, 17
                if stor2[address(arg1)] < stor2[address(arg1)]:
                    revert with 0, 'SafeMath: addition overflow'
            else:
                if arg2 and stor6 / totalSupply > -1 / arg2:
                    revert with 0, 17
                if not arg2:
                    revert with 0, 18
                if arg2 * stor6 / totalSupply / arg2 != stor6 / totalSupply:
                    revert with 0, 'SafeMath: multiplication overflow'
                if arg2 * stor6 / totalSupply > stor2[address(msg.sender)]:
                    revert with 0, 'SafeMath: subtraction overflow', 0
                if stor2[address(msg.sender)] < arg2 * stor6 / totalSupply:
                    revert with 0, 17
                stor2[address(msg.sender)] += -1 * arg2 * stor6 / totalSupply
                if not arg2 * stor6 / totalSupply / 100:
                    if stor2[address(arg1)] > -1:
                        revert with 0, 17
                    if stor2[address(arg1)] < stor2[address(arg1)]:
                        revert with 0, 'SafeMath: addition overflow'
                else:
                    if arg2 * stor6 / totalSupply / 100 and 100 > -1 / arg2 * stor6 / totalSupply / 100:
                        revert with 0, 17
                    if not arg2 * stor6 / totalSupply / 100:
                        revert with 0, 18
                    if 100 * arg2 * stor6 / totalSupply / 100 / arg2 * stor6 / totalSupply / 100 != 100:
                        revert with 0, 'SafeMath: multiplication overflow'
                    if stor2[address(arg1)] > !(100 * arg2 * stor6 / totalSupply / 100):
                        revert with 0, 17
                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                        revert with 0, 'SafeMath: addition overflow'
                    stor2[address(arg1)] += 100 * arg2 * stor6 / totalSupply / 100
            if not arg2 / 100:
                emit Transfer(0, msg.sender, arg1);
            else:
                if arg2 / 100 and 100 > -1 / arg2 / 100:
                    revert with 0, 17
                if not arg2 / 100:
                    revert with 0, 18
                if 100 * arg2 / 100 / arg2 / 100 != 100:
                    revert with 0, 'SafeMath: multiplication overflow'
                emit Transfer((100 * arg2 / 100), msg.sender, arg1);
            if stor2[address(arg1)] / stor6 / totalSupply:
                if not stor2[address(arg1)] / stor6 / totalSupply:
                    inviter[address(arg1)] = msg.sender
                else:
                    if uniswapV2PairAddress == msg.sender:
                        inviter[address(arg1)] = uniswapV2PairAddress
            else:
                if not inviter[address(arg1)]:
                    if uniswapV2PairAddress == msg.sender:
                        inviter[address(arg1)] = uniswapV2PairAddress
                    else:
                        inviter[address(arg1)] = msg.sender
                else:
                    if not inviter[address(arg1)]:
                        inviter[address(arg1)] = msg.sender
                    else:
                        if uniswapV2PairAddress == msg.sender:
                            inviter[address(arg1)] = uniswapV2PairAddress
        else:
            if stor6 >= stor6 / totalSupply:
                if stor2[address(arg1)] / stor6 / totalSupply:
                    if stor6 >= stor6 / totalSupply:
                        if not arg2:
                            if 0 > stor2[address(msg.sender)]:
                                revert with 0, 'SafeMath: subtraction overflow', 0
                            if stor2[address(msg.sender)] < 0:
                                revert with 0, 17
                            mem[64] = 544
                            if not arg2 / 100:
                                if stor2[stor14] > -1:
                                    revert with 0, 17
                                if stor2[stor14] < stor2[stor14]:
                                    revert with 0, 'SafeMath: addition overflow'
                                emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                if uniswapV2PairAddress != msg.sender:
                                    idx = 0
                                    s = msg.sender
                                    while idx < 5:
                                        mem[0] = address(s)
                                        mem[32] = 13
                                        if not inviter[address(s)]:
                                            if _liquidityFee > !sub_a41a08fb:
                                                revert with 0, 17
                                            if 100 < _liquidityFee + sub_a41a08fb:
                                                revert with 0, 17
                                            if stor2[address(arg1)] > -1:
                                                revert with 0, 17
                                            if stor2[address(arg1)] < stor2[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not arg2 / 100:
                                                emit Transfer(0, msg.sender, arg1);
                                            else:
                                                if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                    revert with 0, 17
                                                if not arg2 / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                            if not stor2[address(arg1)] / stor6 / totalSupply:
                                                inviter[address(arg1)] = msg.sender
                                            else:
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                            return 1
                                        if idx:
                                            _13601 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13601] = 26
                                            mem[_13601 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 5 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 5 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 5 * arg2 / 1000
                                                emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        else:
                                            _13602 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13602] = 26
                                            mem[_13602 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 10 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 10 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 10 * arg2 / 1000
                                                emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = inviter[address(s)]
                                        continue 
                                else:
                                    idx = 0
                                    s = arg1
                                    while idx < 5:
                                        mem[0] = address(s)
                                        mem[32] = 13
                                        if not inviter[address(s)]:
                                            if _liquidityFee > !sub_a41a08fb:
                                                revert with 0, 17
                                            if 100 < _liquidityFee + sub_a41a08fb:
                                                revert with 0, 17
                                            if stor2[address(arg1)] > -1:
                                                revert with 0, 17
                                            if stor2[address(arg1)] < stor2[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not arg2 / 100:
                                                emit Transfer(0, msg.sender, arg1);
                                            else:
                                                if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                    revert with 0, 17
                                                if not arg2 / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                            if not stor2[address(arg1)] / stor6 / totalSupply:
                                                inviter[address(arg1)] = msg.sender
                                            else:
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                            return 1
                                        if idx:
                                            _13603 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13603] = 26
                                            mem[_13603 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 5 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 5 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 5 * arg2 / 1000
                                                emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        else:
                                            _13604 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13604] = 26
                                            mem[_13604 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 10 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 10 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 10 * arg2 / 1000
                                                emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = inviter[address(s)]
                                        continue 
                            else:
                                if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                    revert with 0, 17
                                if not arg2 / 100:
                                    revert with 0, 18
                                if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not arg2 / 100 * _liquidityFee:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13597 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13597] = 26
                                                mem[_13597 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13598 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13598] = 26
                                                mem[_13598 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13599 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13599] = 26
                                                mem[_13599 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13600 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13600] = 26
                                                mem[_13600 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                        revert with 0, 17
                                    if not arg2 / 100 * _liquidityFee:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                        revert with 0, 17
                                    if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                    emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13593 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13593] = 26
                                                mem[_13593 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13594 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13594] = 26
                                                mem[_13594 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13595 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13595] = 26
                                                mem[_13595 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13596 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13596] = 26
                                                mem[_13596 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                            if _liquidityFee > !sub_a41a08fb:
                                revert with 0, 17
                            if 100 < _liquidityFee + sub_a41a08fb:
                                revert with 0, 17
                            if stor2[address(arg1)] > -1:
                                revert with 0, 17
                            if stor2[address(arg1)] < stor2[address(arg1)]:
                                revert with 0, 'SafeMath: addition overflow'
                        else:
                            if arg2 and stor6 / totalSupply > -1 / arg2:
                                revert with 0, 17
                            if not arg2:
                                revert with 0, 18
                            if arg2 * stor6 / totalSupply / arg2 != stor6 / totalSupply:
                                revert with 0, 'SafeMath: multiplication overflow'
                            if arg2 * stor6 / totalSupply > stor2[address(msg.sender)]:
                                revert with 0, 'SafeMath: subtraction overflow', 0
                            if stor2[address(msg.sender)] < arg2 * stor6 / totalSupply:
                                revert with 0, 17
                            stor2[address(msg.sender)] += -1 * arg2 * stor6 / totalSupply
                            mem[64] = 544
                            if not arg2 / 100:
                                if stor2[stor14] > -1:
                                    revert with 0, 17
                                if stor2[stor14] < stor2[stor14]:
                                    revert with 0, 'SafeMath: addition overflow'
                                emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                if uniswapV2PairAddress != msg.sender:
                                    idx = 0
                                    s = msg.sender
                                    while idx < 5:
                                        mem[0] = address(s)
                                        mem[32] = 13
                                        if not inviter[address(s)]:
                                            if _liquidityFee > !sub_a41a08fb:
                                                revert with 0, 17
                                            if 100 < _liquidityFee + sub_a41a08fb:
                                                revert with 0, 17
                                            if not arg2 * stor6 / totalSupply / 100:
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                            else:
                                                if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                    revert with 0, 17
                                                if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                            if not arg2 / 100:
                                                emit Transfer(0, msg.sender, arg1);
                                            else:
                                                if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                    revert with 0, 17
                                                if not arg2 / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                            if not stor2[address(arg1)] / stor6 / totalSupply:
                                                inviter[address(arg1)] = msg.sender
                                            else:
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                            return 1
                                        if idx:
                                            _13589 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13589] = 26
                                            mem[_13589 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 5 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 5 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 5 * arg2 / 1000
                                                emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        else:
                                            _13590 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13590] = 26
                                            mem[_13590 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 10 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 10 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 10 * arg2 / 1000
                                                emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = inviter[address(s)]
                                        continue 
                                else:
                                    idx = 0
                                    s = arg1
                                    while idx < 5:
                                        mem[0] = address(s)
                                        mem[32] = 13
                                        if not inviter[address(s)]:
                                            if _liquidityFee > !sub_a41a08fb:
                                                revert with 0, 17
                                            if 100 < _liquidityFee + sub_a41a08fb:
                                                revert with 0, 17
                                            if not arg2 * stor6 / totalSupply / 100:
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                            else:
                                                if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                    revert with 0, 17
                                                if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                            if not arg2 / 100:
                                                emit Transfer(0, msg.sender, arg1);
                                            else:
                                                if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                    revert with 0, 17
                                                if not arg2 / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                            if not stor2[address(arg1)] / stor6 / totalSupply:
                                                inviter[address(arg1)] = msg.sender
                                            else:
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                            return 1
                                        if idx:
                                            _13591 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13591] = 26
                                            mem[_13591 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 5 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 5 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 5 * arg2 / 1000
                                                emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        else:
                                            _13592 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13592] = 26
                                            mem[_13592 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 10 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 10 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 10 * arg2 / 1000
                                                emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = inviter[address(s)]
                                        continue 
                            else:
                                if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                    revert with 0, 17
                                if not arg2 / 100:
                                    revert with 0, 18
                                if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not arg2 / 100 * _liquidityFee:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13585 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13585] = 26
                                                mem[_13585 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13586 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13586] = 26
                                                mem[_13586 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13587 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13587] = 26
                                                mem[_13587 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13588 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13588] = 26
                                                mem[_13588 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                        revert with 0, 17
                                    if not arg2 / 100 * _liquidityFee:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                        revert with 0, 17
                                    if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                    emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13581 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13581] = 26
                                                mem[_13581 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13582 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13582] = 26
                                                mem[_13582 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13583 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13583] = 26
                                                mem[_13583 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13584 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13584] = 26
                                                mem[_13584 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                            if _liquidityFee > !sub_a41a08fb:
                                revert with 0, 17
                            if 100 < _liquidityFee + sub_a41a08fb:
                                revert with 0, 17
                            if not arg2 * stor6 / totalSupply / 100:
                                if stor2[address(arg1)] > -1:
                                    revert with 0, 17
                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                            else:
                                if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                    revert with 0, 17
                                if not arg2 * stor6 / totalSupply / 100:
                                    revert with 0, 18
                                if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                    revert with 0, 17
                                if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                                stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                    else:
                        if not arg2:
                            if 0 > stor2[address(msg.sender)]:
                                revert with 0, 'SafeMath: subtraction overflow', 0
                            if stor2[address(msg.sender)] < 0:
                                revert with 0, 17
                            mem[64] = 544
                            if not arg2 / 100:
                                if stor2[stor14] > -1:
                                    revert with 0, 17
                                if stor2[stor14] < stor2[stor14]:
                                    revert with 0, 'SafeMath: addition overflow'
                                emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                if uniswapV2PairAddress != msg.sender:
                                    idx = 0
                                    s = msg.sender
                                    while idx < 5:
                                        mem[0] = address(s)
                                        mem[32] = 13
                                        if not inviter[address(s)]:
                                            if _liquidityFee > !sub_a41a08fb:
                                                revert with 0, 17
                                            if 100 < _liquidityFee + sub_a41a08fb:
                                                revert with 0, 17
                                            if stor2[address(arg1)] > -1:
                                                revert with 0, 17
                                            if stor2[address(arg1)] < stor2[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not arg2 / 100:
                                                emit Transfer(0, msg.sender, arg1);
                                            else:
                                                if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                    revert with 0, 17
                                                if not arg2 / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                            if not stor2[address(arg1)] / stor6 / totalSupply:
                                                inviter[address(arg1)] = msg.sender
                                            else:
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                            return 1
                                        if idx:
                                            _13625 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13625] = 26
                                            mem[_13625 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 5 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 5 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 5 * arg2 / 1000
                                                emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        else:
                                            _13626 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13626] = 26
                                            mem[_13626 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 10 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 10 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 10 * arg2 / 1000
                                                emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = inviter[address(s)]
                                        continue 
                                else:
                                    idx = 0
                                    s = arg1
                                    while idx < 5:
                                        mem[0] = address(s)
                                        mem[32] = 13
                                        if not inviter[address(s)]:
                                            if _liquidityFee > !sub_a41a08fb:
                                                revert with 0, 17
                                            if 100 < _liquidityFee + sub_a41a08fb:
                                                revert with 0, 17
                                            if stor2[address(arg1)] > -1:
                                                revert with 0, 17
                                            if stor2[address(arg1)] < stor2[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not arg2 / 100:
                                                emit Transfer(0, msg.sender, arg1);
                                            else:
                                                if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                    revert with 0, 17
                                                if not arg2 / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                            if not stor2[address(arg1)] / stor6 / totalSupply:
                                                inviter[address(arg1)] = msg.sender
                                            else:
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                            return 1
                                        if idx:
                                            _13627 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13627] = 26
                                            mem[_13627 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 5 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 5 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 5 * arg2 / 1000
                                                emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        else:
                                            _13628 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13628] = 26
                                            mem[_13628 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 10 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 10 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 10 * arg2 / 1000
                                                emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = inviter[address(s)]
                                        continue 
                            else:
                                if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                    revert with 0, 17
                                if not arg2 / 100:
                                    revert with 0, 18
                                if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not arg2 / 100 * _liquidityFee:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13621 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13621] = 26
                                                mem[_13621 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13622 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13622] = 26
                                                mem[_13622 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13623 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13623] = 26
                                                mem[_13623 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13624 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13624] = 26
                                                mem[_13624 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                        revert with 0, 17
                                    if not arg2 / 100 * _liquidityFee:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                        revert with 0, 17
                                    if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                    emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13617 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13617] = 26
                                                mem[_13617 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13618 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13618] = 26
                                                mem[_13618 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13619 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13619] = 26
                                                mem[_13619 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13620 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13620] = 26
                                                mem[_13620 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                            if _liquidityFee > !sub_a41a08fb:
                                revert with 0, 17
                            if 100 < _liquidityFee + sub_a41a08fb:
                                revert with 0, 17
                            if stor2[address(arg1)] > -1:
                                revert with 0, 17
                            if stor2[address(arg1)] < stor2[address(arg1)]:
                                revert with 0, 'SafeMath: addition overflow'
                        else:
                            if arg2 and stor6 / totalSupply > -1 / arg2:
                                revert with 0, 17
                            if not arg2:
                                revert with 0, 18
                            if arg2 * stor6 / totalSupply / arg2 != stor6 / totalSupply:
                                revert with 0, 'SafeMath: multiplication overflow'
                            if arg2 * stor6 / totalSupply > stor2[address(msg.sender)]:
                                revert with 0, 'SafeMath: subtraction overflow', 0
                            if stor2[address(msg.sender)] < arg2 * stor6 / totalSupply:
                                revert with 0, 17
                            stor2[address(msg.sender)] += -1 * arg2 * stor6 / totalSupply
                            mem[64] = 544
                            if not arg2 / 100:
                                if stor2[stor14] > -1:
                                    revert with 0, 17
                                if stor2[stor14] < stor2[stor14]:
                                    revert with 0, 'SafeMath: addition overflow'
                                emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                if uniswapV2PairAddress != msg.sender:
                                    idx = 0
                                    s = msg.sender
                                    while idx < 5:
                                        mem[0] = address(s)
                                        mem[32] = 13
                                        if not inviter[address(s)]:
                                            if _liquidityFee > !sub_a41a08fb:
                                                revert with 0, 17
                                            if 100 < _liquidityFee + sub_a41a08fb:
                                                revert with 0, 17
                                            if not arg2 * stor6 / totalSupply / 100:
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                            else:
                                                if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                    revert with 0, 17
                                                if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                            if not arg2 / 100:
                                                emit Transfer(0, msg.sender, arg1);
                                            else:
                                                if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                    revert with 0, 17
                                                if not arg2 / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                            if not stor2[address(arg1)] / stor6 / totalSupply:
                                                inviter[address(arg1)] = msg.sender
                                            else:
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                            return 1
                                        if idx:
                                            _13613 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13613] = 26
                                            mem[_13613 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 5 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 5 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 5 * arg2 / 1000
                                                emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        else:
                                            _13614 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13614] = 26
                                            mem[_13614 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 10 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 10 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 10 * arg2 / 1000
                                                emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = inviter[address(s)]
                                        continue 
                                else:
                                    idx = 0
                                    s = arg1
                                    while idx < 5:
                                        mem[0] = address(s)
                                        mem[32] = 13
                                        if not inviter[address(s)]:
                                            if _liquidityFee > !sub_a41a08fb:
                                                revert with 0, 17
                                            if 100 < _liquidityFee + sub_a41a08fb:
                                                revert with 0, 17
                                            if not arg2 * stor6 / totalSupply / 100:
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                            else:
                                                if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                    revert with 0, 17
                                                if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                            if not arg2 / 100:
                                                emit Transfer(0, msg.sender, arg1);
                                            else:
                                                if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                    revert with 0, 17
                                                if not arg2 / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                            if not stor2[address(arg1)] / stor6 / totalSupply:
                                                inviter[address(arg1)] = msg.sender
                                            else:
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                            return 1
                                        if idx:
                                            _13615 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13615] = 26
                                            mem[_13615 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 5 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 5 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 5 * arg2 / 1000
                                                emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        else:
                                            _13616 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13616] = 26
                                            mem[_13616 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 10 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 10 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 10 * arg2 / 1000
                                                emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = inviter[address(s)]
                                        continue 
                            else:
                                if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                    revert with 0, 17
                                if not arg2 / 100:
                                    revert with 0, 18
                                if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not arg2 / 100 * _liquidityFee:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13609 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13609] = 26
                                                mem[_13609 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13610 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13610] = 26
                                                mem[_13610 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13611 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13611] = 26
                                                mem[_13611 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13612 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13612] = 26
                                                mem[_13612 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                        revert with 0, 17
                                    if not arg2 / 100 * _liquidityFee:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                        revert with 0, 17
                                    if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                    emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13605 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13605] = 26
                                                mem[_13605 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13606 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13606] = 26
                                                mem[_13606 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13607 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13607] = 26
                                                mem[_13607 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13608 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13608] = 26
                                                mem[_13608 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                            if _liquidityFee > !sub_a41a08fb:
                                revert with 0, 17
                            if 100 < _liquidityFee + sub_a41a08fb:
                                revert with 0, 17
                            if not arg2 * stor6 / totalSupply / 100:
                                if stor2[address(arg1)] > -1:
                                    revert with 0, 17
                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                            else:
                                if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                    revert with 0, 17
                                if not arg2 * stor6 / totalSupply / 100:
                                    revert with 0, 18
                                if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                    revert with 0, 17
                                if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                                stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                    if not arg2 / 100:
                        emit Transfer(0, msg.sender, arg1);
                    else:
                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                            revert with 0, 17
                        if not arg2 / 100:
                            revert with 0, 18
                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                            revert with 0, 'SafeMath: multiplication overflow'
                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                    if not stor2[address(arg1)] / stor6 / totalSupply:
                        inviter[address(arg1)] = msg.sender
                    else:
                        if uniswapV2PairAddress == msg.sender:
                            inviter[address(arg1)] = uniswapV2PairAddress
                else:
                    if not inviter[address(arg1)]:
                        if stor6 >= stor6 / totalSupply:
                            if not arg2:
                                if 0 > stor2[address(msg.sender)]:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if stor2[address(msg.sender)] < 0:
                                    revert with 0, 17
                                mem[64] = 544
                                if not arg2 / 100:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                                else:
                                                    inviter[address(arg1)] = msg.sender
                                                return 1
                                            if idx:
                                                _13697 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13697] = 26
                                                mem[_13697 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13698 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13698] = 26
                                                mem[_13698 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                                else:
                                                    inviter[address(arg1)] = msg.sender
                                                return 1
                                            if idx:
                                                _13699 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13699] = 26
                                                mem[_13699 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13700 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13700] = 26
                                                mem[_13700 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                        revert with 0, 17
                                    if not arg2 / 100:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not arg2 / 100 * _liquidityFee:
                                        if stor2[stor14] > -1:
                                            revert with 0, 17
                                        if stor2[stor14] < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13693 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13693] = 26
                                                    mem[_13693 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13694 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13694] = 26
                                                    mem[_13694 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13695 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13695] = 26
                                                    mem[_13695 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13696 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13696] = 26
                                                    mem[_13696 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                    else:
                                        if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                            revert with 0, 17
                                        if not arg2 / 100 * _liquidityFee:
                                            revert with 0, 18
                                        if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                            revert with 0, 17
                                        if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13689 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13689] = 26
                                                    mem[_13689 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13690 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13690] = 26
                                                    mem[_13690 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13691 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13691] = 26
                                                    mem[_13691 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13692 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13692] = 26
                                                    mem[_13692 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                if _liquidityFee > !sub_a41a08fb:
                                    revert with 0, 17
                                if 100 < _liquidityFee + sub_a41a08fb:
                                    revert with 0, 17
                                if stor2[address(arg1)] > -1:
                                    revert with 0, 17
                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                            else:
                                if arg2 and stor6 / totalSupply > -1 / arg2:
                                    revert with 0, 17
                                if not arg2:
                                    revert with 0, 18
                                if arg2 * stor6 / totalSupply / arg2 != stor6 / totalSupply:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if arg2 * stor6 / totalSupply > stor2[address(msg.sender)]:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if stor2[address(msg.sender)] < arg2 * stor6 / totalSupply:
                                    revert with 0, 17
                                stor2[address(msg.sender)] += -1 * arg2 * stor6 / totalSupply
                                mem[64] = 544
                                if not arg2 / 100:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                                else:
                                                    inviter[address(arg1)] = msg.sender
                                                return 1
                                            if idx:
                                                _13685 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13685] = 26
                                                mem[_13685 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13686 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13686] = 26
                                                mem[_13686 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                                else:
                                                    inviter[address(arg1)] = msg.sender
                                                return 1
                                            if idx:
                                                _13687 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13687] = 26
                                                mem[_13687 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13688 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13688] = 26
                                                mem[_13688 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                        revert with 0, 17
                                    if not arg2 / 100:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not arg2 / 100 * _liquidityFee:
                                        if stor2[stor14] > -1:
                                            revert with 0, 17
                                        if stor2[stor14] < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13681 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13681] = 26
                                                    mem[_13681 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13682 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13682] = 26
                                                    mem[_13682 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13683 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13683] = 26
                                                    mem[_13683 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13684 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13684] = 26
                                                    mem[_13684 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                    else:
                                        if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                            revert with 0, 17
                                        if not arg2 / 100 * _liquidityFee:
                                            revert with 0, 18
                                        if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                            revert with 0, 17
                                        if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13677 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13677] = 26
                                                    mem[_13677 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13678 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13678] = 26
                                                    mem[_13678 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13679 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13679] = 26
                                                    mem[_13679 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13680 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13680] = 26
                                                    mem[_13680 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                if _liquidityFee > !sub_a41a08fb:
                                    revert with 0, 17
                                if 100 < _liquidityFee + sub_a41a08fb:
                                    revert with 0, 17
                                if not arg2 * stor6 / totalSupply / 100:
                                    if stor2[address(arg1)] > -1:
                                        revert with 0, 17
                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                else:
                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                        revert with 0, 17
                                    if not arg2 * stor6 / totalSupply / 100:
                                        revert with 0, 18
                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                        revert with 0, 17
                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                        else:
                            if not arg2:
                                if 0 > stor2[address(msg.sender)]:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if stor2[address(msg.sender)] < 0:
                                    revert with 0, 17
                                mem[64] = 544
                                if not arg2 / 100:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                                else:
                                                    inviter[address(arg1)] = msg.sender
                                                return 1
                                            if idx:
                                                _13721 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13721] = 26
                                                mem[_13721 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13722 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13722] = 26
                                                mem[_13722 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                                else:
                                                    inviter[address(arg1)] = msg.sender
                                                return 1
                                            if idx:
                                                _13723 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13723] = 26
                                                mem[_13723 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13724 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13724] = 26
                                                mem[_13724 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                        revert with 0, 17
                                    if not arg2 / 100:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not arg2 / 100 * _liquidityFee:
                                        if stor2[stor14] > -1:
                                            revert with 0, 17
                                        if stor2[stor14] < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13717 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13717] = 26
                                                    mem[_13717 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13718 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13718] = 26
                                                    mem[_13718 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13719 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13719] = 26
                                                    mem[_13719 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13720 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13720] = 26
                                                    mem[_13720 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                    else:
                                        if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                            revert with 0, 17
                                        if not arg2 / 100 * _liquidityFee:
                                            revert with 0, 18
                                        if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                            revert with 0, 17
                                        if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13713 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13713] = 26
                                                    mem[_13713 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13714 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13714] = 26
                                                    mem[_13714 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13715 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13715] = 26
                                                    mem[_13715 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13716 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13716] = 26
                                                    mem[_13716 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                if _liquidityFee > !sub_a41a08fb:
                                    revert with 0, 17
                                if 100 < _liquidityFee + sub_a41a08fb:
                                    revert with 0, 17
                                if stor2[address(arg1)] > -1:
                                    revert with 0, 17
                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                            else:
                                if arg2 and stor6 / totalSupply > -1 / arg2:
                                    revert with 0, 17
                                if not arg2:
                                    revert with 0, 18
                                if arg2 * stor6 / totalSupply / arg2 != stor6 / totalSupply:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if arg2 * stor6 / totalSupply > stor2[address(msg.sender)]:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if stor2[address(msg.sender)] < arg2 * stor6 / totalSupply:
                                    revert with 0, 17
                                stor2[address(msg.sender)] += -1 * arg2 * stor6 / totalSupply
                                mem[64] = 544
                                if not arg2 / 100:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                                else:
                                                    inviter[address(arg1)] = msg.sender
                                                return 1
                                            if idx:
                                                _13709 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13709] = 26
                                                mem[_13709 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13710 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13710] = 26
                                                mem[_13710 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                                else:
                                                    inviter[address(arg1)] = msg.sender
                                                return 1
                                            if idx:
                                                _13711 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13711] = 26
                                                mem[_13711 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13712 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13712] = 26
                                                mem[_13712 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                        revert with 0, 17
                                    if not arg2 / 100:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not arg2 / 100 * _liquidityFee:
                                        if stor2[stor14] > -1:
                                            revert with 0, 17
                                        if stor2[stor14] < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13705 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13705] = 26
                                                    mem[_13705 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13706 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13706] = 26
                                                    mem[_13706 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13707 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13707] = 26
                                                    mem[_13707 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13708 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13708] = 26
                                                    mem[_13708 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                    else:
                                        if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                            revert with 0, 17
                                        if not arg2 / 100 * _liquidityFee:
                                            revert with 0, 18
                                        if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                            revert with 0, 17
                                        if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13701 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13701] = 26
                                                    mem[_13701 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13702 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13702] = 26
                                                    mem[_13702 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13703 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13703] = 26
                                                    mem[_13703 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13704 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13704] = 26
                                                    mem[_13704 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                if _liquidityFee > !sub_a41a08fb:
                                    revert with 0, 17
                                if 100 < _liquidityFee + sub_a41a08fb:
                                    revert with 0, 17
                                if not arg2 * stor6 / totalSupply / 100:
                                    if stor2[address(arg1)] > -1:
                                        revert with 0, 17
                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                else:
                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                        revert with 0, 17
                                    if not arg2 * stor6 / totalSupply / 100:
                                        revert with 0, 18
                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                        revert with 0, 17
                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                        if not arg2 / 100:
                            emit Transfer(0, msg.sender, arg1);
                        else:
                            if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                revert with 0, 17
                            if not arg2 / 100:
                                revert with 0, 18
                            if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                revert with 0, 'SafeMath: multiplication overflow'
                            emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                        if uniswapV2PairAddress == msg.sender:
                            inviter[address(arg1)] = uniswapV2PairAddress
                        else:
                            inviter[address(arg1)] = msg.sender
                    else:
                        if stor6 >= stor6 / totalSupply:
                            if not arg2:
                                if 0 > stor2[address(msg.sender)]:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if stor2[address(msg.sender)] < 0:
                                    revert with 0, 17
                                mem[64] = 544
                                if not arg2 / 100:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not inviter[address(arg1)]:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13649 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13649] = 26
                                                mem[_13649 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13650 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13650] = 26
                                                mem[_13650 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not inviter[address(arg1)]:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13651 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13651] = 26
                                                mem[_13651 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13652 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13652] = 26
                                                mem[_13652 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                        revert with 0, 17
                                    if not arg2 / 100:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not arg2 / 100 * _liquidityFee:
                                        if stor2[stor14] > -1:
                                            revert with 0, 17
                                        if stor2[stor14] < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13645 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13645] = 26
                                                    mem[_13645 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13646 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13646] = 26
                                                    mem[_13646 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13647 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13647] = 26
                                                    mem[_13647 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13648 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13648] = 26
                                                    mem[_13648 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                    else:
                                        if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                            revert with 0, 17
                                        if not arg2 / 100 * _liquidityFee:
                                            revert with 0, 18
                                        if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                            revert with 0, 17
                                        if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13641 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13641] = 26
                                                    mem[_13641 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13642 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13642] = 26
                                                    mem[_13642 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13643 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13643] = 26
                                                    mem[_13643 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13644 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13644] = 26
                                                    mem[_13644 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                if _liquidityFee > !sub_a41a08fb:
                                    revert with 0, 17
                                if 100 < _liquidityFee + sub_a41a08fb:
                                    revert with 0, 17
                                if stor2[address(arg1)] > -1:
                                    revert with 0, 17
                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                            else:
                                if arg2 and stor6 / totalSupply > -1 / arg2:
                                    revert with 0, 17
                                if not arg2:
                                    revert with 0, 18
                                if arg2 * stor6 / totalSupply / arg2 != stor6 / totalSupply:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if arg2 * stor6 / totalSupply > stor2[address(msg.sender)]:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if stor2[address(msg.sender)] < arg2 * stor6 / totalSupply:
                                    revert with 0, 17
                                stor2[address(msg.sender)] += -1 * arg2 * stor6 / totalSupply
                                mem[64] = 544
                                if not arg2 / 100:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not inviter[address(arg1)]:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13637 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13637] = 26
                                                mem[_13637 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13638 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13638] = 26
                                                mem[_13638 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not inviter[address(arg1)]:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13639 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13639] = 26
                                                mem[_13639 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13640 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13640] = 26
                                                mem[_13640 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                        revert with 0, 17
                                    if not arg2 / 100:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not arg2 / 100 * _liquidityFee:
                                        if stor2[stor14] > -1:
                                            revert with 0, 17
                                        if stor2[stor14] < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13633 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13633] = 26
                                                    mem[_13633 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13634 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13634] = 26
                                                    mem[_13634 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13635 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13635] = 26
                                                    mem[_13635 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13636 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13636] = 26
                                                    mem[_13636 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                    else:
                                        if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                            revert with 0, 17
                                        if not arg2 / 100 * _liquidityFee:
                                            revert with 0, 18
                                        if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                            revert with 0, 17
                                        if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13629 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13629] = 26
                                                    mem[_13629 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13630 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13630] = 26
                                                    mem[_13630 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13631 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13631] = 26
                                                    mem[_13631 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13632 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13632] = 26
                                                    mem[_13632 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                if _liquidityFee > !sub_a41a08fb:
                                    revert with 0, 17
                                if 100 < _liquidityFee + sub_a41a08fb:
                                    revert with 0, 17
                                if not arg2 * stor6 / totalSupply / 100:
                                    if stor2[address(arg1)] > -1:
                                        revert with 0, 17
                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                else:
                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                        revert with 0, 17
                                    if not arg2 * stor6 / totalSupply / 100:
                                        revert with 0, 18
                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                        revert with 0, 17
                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                        else:
                            if not arg2:
                                if 0 > stor2[address(msg.sender)]:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if stor2[address(msg.sender)] < 0:
                                    revert with 0, 17
                                mem[64] = 544
                                if not arg2 / 100:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not inviter[address(arg1)]:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13673 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13673] = 26
                                                mem[_13673 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13674 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13674] = 26
                                                mem[_13674 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not inviter[address(arg1)]:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13675 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13675] = 26
                                                mem[_13675 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13676 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13676] = 26
                                                mem[_13676 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                        revert with 0, 17
                                    if not arg2 / 100:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not arg2 / 100 * _liquidityFee:
                                        if stor2[stor14] > -1:
                                            revert with 0, 17
                                        if stor2[stor14] < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13669 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13669] = 26
                                                    mem[_13669 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13670 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13670] = 26
                                                    mem[_13670 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13671 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13671] = 26
                                                    mem[_13671 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13672 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13672] = 26
                                                    mem[_13672 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                    else:
                                        if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                            revert with 0, 17
                                        if not arg2 / 100 * _liquidityFee:
                                            revert with 0, 18
                                        if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                            revert with 0, 17
                                        if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13665 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13665] = 26
                                                    mem[_13665 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13666 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13666] = 26
                                                    mem[_13666 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13667 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13667] = 26
                                                    mem[_13667 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13668 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13668] = 26
                                                    mem[_13668 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                if _liquidityFee > !sub_a41a08fb:
                                    revert with 0, 17
                                if 100 < _liquidityFee + sub_a41a08fb:
                                    revert with 0, 17
                                if stor2[address(arg1)] > -1:
                                    revert with 0, 17
                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                            else:
                                if arg2 and stor6 / totalSupply > -1 / arg2:
                                    revert with 0, 17
                                if not arg2:
                                    revert with 0, 18
                                if arg2 * stor6 / totalSupply / arg2 != stor6 / totalSupply:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if arg2 * stor6 / totalSupply > stor2[address(msg.sender)]:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if stor2[address(msg.sender)] < arg2 * stor6 / totalSupply:
                                    revert with 0, 17
                                stor2[address(msg.sender)] += -1 * arg2 * stor6 / totalSupply
                                mem[64] = 544
                                if not arg2 / 100:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not inviter[address(arg1)]:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13661 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13661] = 26
                                                mem[_13661 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13662 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13662] = 26
                                                mem[_13662 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not inviter[address(arg1)]:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13663 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13663] = 26
                                                mem[_13663 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13664 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13664] = 26
                                                mem[_13664 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                        revert with 0, 17
                                    if not arg2 / 100:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not arg2 / 100 * _liquidityFee:
                                        if stor2[stor14] > -1:
                                            revert with 0, 17
                                        if stor2[stor14] < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13657 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13657] = 26
                                                    mem[_13657 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13658 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13658] = 26
                                                    mem[_13658 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13659 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13659] = 26
                                                    mem[_13659 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13660 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13660] = 26
                                                    mem[_13660 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                    else:
                                        if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                            revert with 0, 17
                                        if not arg2 / 100 * _liquidityFee:
                                            revert with 0, 18
                                        if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                            revert with 0, 17
                                        if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13653 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13653] = 26
                                                    mem[_13653 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13654 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13654] = 26
                                                    mem[_13654 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13655 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13655] = 26
                                                    mem[_13655 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13656 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13656] = 26
                                                    mem[_13656 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                if _liquidityFee > !sub_a41a08fb:
                                    revert with 0, 17
                                if 100 < _liquidityFee + sub_a41a08fb:
                                    revert with 0, 17
                                if not arg2 * stor6 / totalSupply / 100:
                                    if stor2[address(arg1)] > -1:
                                        revert with 0, 17
                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                else:
                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                        revert with 0, 17
                                    if not arg2 * stor6 / totalSupply / 100:
                                        revert with 0, 18
                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                        revert with 0, 17
                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                        if not arg2 / 100:
                            emit Transfer(0, msg.sender, arg1);
                        else:
                            if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                revert with 0, 17
                            if not arg2 / 100:
                                revert with 0, 18
                            if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                revert with 0, 'SafeMath: multiplication overflow'
                            emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                        if not inviter[address(arg1)]:
                            inviter[address(arg1)] = msg.sender
                        else:
                            if uniswapV2PairAddress == msg.sender:
                                inviter[address(arg1)] = uniswapV2PairAddress
            else:
                if stor2[address(arg1)] / stor6 / totalSupply:
                    if stor6 >= stor6 / totalSupply:
                        if not arg2:
                            if 0 > stor2[address(msg.sender)]:
                                revert with 0, 'SafeMath: subtraction overflow', 0
                            if stor2[address(msg.sender)] < 0:
                                revert with 0, 17
                            mem[64] = 544
                            if not arg2 / 100:
                                if stor2[stor14] > -1:
                                    revert with 0, 17
                                if stor2[stor14] < stor2[stor14]:
                                    revert with 0, 'SafeMath: addition overflow'
                                emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                if uniswapV2PairAddress != msg.sender:
                                    idx = 0
                                    s = msg.sender
                                    while idx < 5:
                                        mem[0] = address(s)
                                        mem[32] = 13
                                        if not inviter[address(s)]:
                                            if _liquidityFee > !sub_a41a08fb:
                                                revert with 0, 17
                                            if 100 < _liquidityFee + sub_a41a08fb:
                                                revert with 0, 17
                                            if stor2[address(arg1)] > -1:
                                                revert with 0, 17
                                            if stor2[address(arg1)] < stor2[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not arg2 / 100:
                                                emit Transfer(0, msg.sender, arg1);
                                            else:
                                                if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                    revert with 0, 17
                                                if not arg2 / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                            if not stor2[address(arg1)] / stor6 / totalSupply:
                                                inviter[address(arg1)] = msg.sender
                                            else:
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                            return 1
                                        if idx:
                                            _13745 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13745] = 26
                                            mem[_13745 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 5 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 5 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 5 * arg2 / 1000
                                                emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        else:
                                            _13746 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13746] = 26
                                            mem[_13746 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 10 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 10 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 10 * arg2 / 1000
                                                emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = inviter[address(s)]
                                        continue 
                                else:
                                    idx = 0
                                    s = arg1
                                    while idx < 5:
                                        mem[0] = address(s)
                                        mem[32] = 13
                                        if not inviter[address(s)]:
                                            if _liquidityFee > !sub_a41a08fb:
                                                revert with 0, 17
                                            if 100 < _liquidityFee + sub_a41a08fb:
                                                revert with 0, 17
                                            if stor2[address(arg1)] > -1:
                                                revert with 0, 17
                                            if stor2[address(arg1)] < stor2[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not arg2 / 100:
                                                emit Transfer(0, msg.sender, arg1);
                                            else:
                                                if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                    revert with 0, 17
                                                if not arg2 / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                            if not stor2[address(arg1)] / stor6 / totalSupply:
                                                inviter[address(arg1)] = msg.sender
                                            else:
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                            return 1
                                        if idx:
                                            _13747 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13747] = 26
                                            mem[_13747 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 5 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 5 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 5 * arg2 / 1000
                                                emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        else:
                                            _13748 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13748] = 26
                                            mem[_13748 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 10 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 10 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 10 * arg2 / 1000
                                                emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = inviter[address(s)]
                                        continue 
                            else:
                                if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                    revert with 0, 17
                                if not arg2 / 100:
                                    revert with 0, 18
                                if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not arg2 / 100 * _liquidityFee:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13741 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13741] = 26
                                                mem[_13741 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13742 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13742] = 26
                                                mem[_13742 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13743 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13743] = 26
                                                mem[_13743 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13744 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13744] = 26
                                                mem[_13744 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                        revert with 0, 17
                                    if not arg2 / 100 * _liquidityFee:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                        revert with 0, 17
                                    if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                    emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13737 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13737] = 26
                                                mem[_13737 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13738 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13738] = 26
                                                mem[_13738 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13739 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13739] = 26
                                                mem[_13739 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13740 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13740] = 26
                                                mem[_13740 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                            if _liquidityFee > !sub_a41a08fb:
                                revert with 0, 17
                            if 100 < _liquidityFee + sub_a41a08fb:
                                revert with 0, 17
                            if stor2[address(arg1)] > -1:
                                revert with 0, 17
                            if stor2[address(arg1)] < stor2[address(arg1)]:
                                revert with 0, 'SafeMath: addition overflow'
                        else:
                            if arg2 and stor6 / totalSupply > -1 / arg2:
                                revert with 0, 17
                            if not arg2:
                                revert with 0, 18
                            if arg2 * stor6 / totalSupply / arg2 != stor6 / totalSupply:
                                revert with 0, 'SafeMath: multiplication overflow'
                            if arg2 * stor6 / totalSupply > stor2[address(msg.sender)]:
                                revert with 0, 'SafeMath: subtraction overflow', 0
                            if stor2[address(msg.sender)] < arg2 * stor6 / totalSupply:
                                revert with 0, 17
                            stor2[address(msg.sender)] += -1 * arg2 * stor6 / totalSupply
                            mem[64] = 544
                            if not arg2 / 100:
                                if stor2[stor14] > -1:
                                    revert with 0, 17
                                if stor2[stor14] < stor2[stor14]:
                                    revert with 0, 'SafeMath: addition overflow'
                                emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                if uniswapV2PairAddress != msg.sender:
                                    idx = 0
                                    s = msg.sender
                                    while idx < 5:
                                        mem[0] = address(s)
                                        mem[32] = 13
                                        if not inviter[address(s)]:
                                            if _liquidityFee > !sub_a41a08fb:
                                                revert with 0, 17
                                            if 100 < _liquidityFee + sub_a41a08fb:
                                                revert with 0, 17
                                            if not arg2 * stor6 / totalSupply / 100:
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                            else:
                                                if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                    revert with 0, 17
                                                if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                            if not arg2 / 100:
                                                emit Transfer(0, msg.sender, arg1);
                                            else:
                                                if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                    revert with 0, 17
                                                if not arg2 / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                            if not stor2[address(arg1)] / stor6 / totalSupply:
                                                inviter[address(arg1)] = msg.sender
                                            else:
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                            return 1
                                        if idx:
                                            _13733 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13733] = 26
                                            mem[_13733 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 5 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 5 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 5 * arg2 / 1000
                                                emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        else:
                                            _13734 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13734] = 26
                                            mem[_13734 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 10 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 10 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 10 * arg2 / 1000
                                                emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = inviter[address(s)]
                                        continue 
                                else:
                                    idx = 0
                                    s = arg1
                                    while idx < 5:
                                        mem[0] = address(s)
                                        mem[32] = 13
                                        if not inviter[address(s)]:
                                            if _liquidityFee > !sub_a41a08fb:
                                                revert with 0, 17
                                            if 100 < _liquidityFee + sub_a41a08fb:
                                                revert with 0, 17
                                            if not arg2 * stor6 / totalSupply / 100:
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                            else:
                                                if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                    revert with 0, 17
                                                if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                            if not arg2 / 100:
                                                emit Transfer(0, msg.sender, arg1);
                                            else:
                                                if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                    revert with 0, 17
                                                if not arg2 / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                            if not stor2[address(arg1)] / stor6 / totalSupply:
                                                inviter[address(arg1)] = msg.sender
                                            else:
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                            return 1
                                        if idx:
                                            _13735 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13735] = 26
                                            mem[_13735 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 5 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 5 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 5 * arg2 / 1000
                                                emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        else:
                                            _13736 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13736] = 26
                                            mem[_13736 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 10 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 10 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 10 * arg2 / 1000
                                                emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = inviter[address(s)]
                                        continue 
                            else:
                                if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                    revert with 0, 17
                                if not arg2 / 100:
                                    revert with 0, 18
                                if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not arg2 / 100 * _liquidityFee:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13729 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13729] = 26
                                                mem[_13729 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13730 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13730] = 26
                                                mem[_13730 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13731 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13731] = 26
                                                mem[_13731 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13732 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13732] = 26
                                                mem[_13732 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                        revert with 0, 17
                                    if not arg2 / 100 * _liquidityFee:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                        revert with 0, 17
                                    if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                    emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13725 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13725] = 26
                                                mem[_13725 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13726 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13726] = 26
                                                mem[_13726 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13727 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13727] = 26
                                                mem[_13727 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13728 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13728] = 26
                                                mem[_13728 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                            if _liquidityFee > !sub_a41a08fb:
                                revert with 0, 17
                            if 100 < _liquidityFee + sub_a41a08fb:
                                revert with 0, 17
                            if not arg2 * stor6 / totalSupply / 100:
                                if stor2[address(arg1)] > -1:
                                    revert with 0, 17
                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                            else:
                                if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                    revert with 0, 17
                                if not arg2 * stor6 / totalSupply / 100:
                                    revert with 0, 18
                                if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                    revert with 0, 17
                                if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                                stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                    else:
                        if not arg2:
                            if 0 > stor2[address(msg.sender)]:
                                revert with 0, 'SafeMath: subtraction overflow', 0
                            if stor2[address(msg.sender)] < 0:
                                revert with 0, 17
                            mem[64] = 544
                            if not arg2 / 100:
                                if stor2[stor14] > -1:
                                    revert with 0, 17
                                if stor2[stor14] < stor2[stor14]:
                                    revert with 0, 'SafeMath: addition overflow'
                                emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                if uniswapV2PairAddress != msg.sender:
                                    idx = 0
                                    s = msg.sender
                                    while idx < 5:
                                        mem[0] = address(s)
                                        mem[32] = 13
                                        if not inviter[address(s)]:
                                            if _liquidityFee > !sub_a41a08fb:
                                                revert with 0, 17
                                            if 100 < _liquidityFee + sub_a41a08fb:
                                                revert with 0, 17
                                            if stor2[address(arg1)] > -1:
                                                revert with 0, 17
                                            if stor2[address(arg1)] < stor2[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not arg2 / 100:
                                                emit Transfer(0, msg.sender, arg1);
                                            else:
                                                if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                    revert with 0, 17
                                                if not arg2 / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                            if not stor2[address(arg1)] / stor6 / totalSupply:
                                                inviter[address(arg1)] = msg.sender
                                            else:
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                            return 1
                                        if idx:
                                            _13769 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13769] = 26
                                            mem[_13769 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 5 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 5 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 5 * arg2 / 1000
                                                emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        else:
                                            _13770 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13770] = 26
                                            mem[_13770 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 10 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 10 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 10 * arg2 / 1000
                                                emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = inviter[address(s)]
                                        continue 
                                else:
                                    idx = 0
                                    s = arg1
                                    while idx < 5:
                                        mem[0] = address(s)
                                        mem[32] = 13
                                        if not inviter[address(s)]:
                                            if _liquidityFee > !sub_a41a08fb:
                                                revert with 0, 17
                                            if 100 < _liquidityFee + sub_a41a08fb:
                                                revert with 0, 17
                                            if stor2[address(arg1)] > -1:
                                                revert with 0, 17
                                            if stor2[address(arg1)] < stor2[address(arg1)]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not arg2 / 100:
                                                emit Transfer(0, msg.sender, arg1);
                                            else:
                                                if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                    revert with 0, 17
                                                if not arg2 / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                            if not stor2[address(arg1)] / stor6 / totalSupply:
                                                inviter[address(arg1)] = msg.sender
                                            else:
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                            return 1
                                        if idx:
                                            _13771 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13771] = 26
                                            mem[_13771 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 5 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 5 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 5 * arg2 / 1000
                                                emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        else:
                                            _13772 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13772] = 26
                                            mem[_13772 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 10 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 10 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 10 * arg2 / 1000
                                                emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = inviter[address(s)]
                                        continue 
                            else:
                                if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                    revert with 0, 17
                                if not arg2 / 100:
                                    revert with 0, 18
                                if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not arg2 / 100 * _liquidityFee:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13765 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13765] = 26
                                                mem[_13765 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13766 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13766] = 26
                                                mem[_13766 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13767 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13767] = 26
                                                mem[_13767 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13768 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13768] = 26
                                                mem[_13768 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                        revert with 0, 17
                                    if not arg2 / 100 * _liquidityFee:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                        revert with 0, 17
                                    if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                    emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13761 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13761] = 26
                                                mem[_13761 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13762 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13762] = 26
                                                mem[_13762 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13763 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13763] = 26
                                                mem[_13763 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13764 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13764] = 26
                                                mem[_13764 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                            if _liquidityFee > !sub_a41a08fb:
                                revert with 0, 17
                            if 100 < _liquidityFee + sub_a41a08fb:
                                revert with 0, 17
                            if stor2[address(arg1)] > -1:
                                revert with 0, 17
                            if stor2[address(arg1)] < stor2[address(arg1)]:
                                revert with 0, 'SafeMath: addition overflow'
                        else:
                            if arg2 and stor6 / totalSupply > -1 / arg2:
                                revert with 0, 17
                            if not arg2:
                                revert with 0, 18
                            if arg2 * stor6 / totalSupply / arg2 != stor6 / totalSupply:
                                revert with 0, 'SafeMath: multiplication overflow'
                            if arg2 * stor6 / totalSupply > stor2[address(msg.sender)]:
                                revert with 0, 'SafeMath: subtraction overflow', 0
                            if stor2[address(msg.sender)] < arg2 * stor6 / totalSupply:
                                revert with 0, 17
                            stor2[address(msg.sender)] += -1 * arg2 * stor6 / totalSupply
                            mem[64] = 544
                            if not arg2 / 100:
                                if stor2[stor14] > -1:
                                    revert with 0, 17
                                if stor2[stor14] < stor2[stor14]:
                                    revert with 0, 'SafeMath: addition overflow'
                                emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                if uniswapV2PairAddress != msg.sender:
                                    idx = 0
                                    s = msg.sender
                                    while idx < 5:
                                        mem[0] = address(s)
                                        mem[32] = 13
                                        if not inviter[address(s)]:
                                            if _liquidityFee > !sub_a41a08fb:
                                                revert with 0, 17
                                            if 100 < _liquidityFee + sub_a41a08fb:
                                                revert with 0, 17
                                            if not arg2 * stor6 / totalSupply / 100:
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                            else:
                                                if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                    revert with 0, 17
                                                if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                            if not arg2 / 100:
                                                emit Transfer(0, msg.sender, arg1);
                                            else:
                                                if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                    revert with 0, 17
                                                if not arg2 / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                            if not stor2[address(arg1)] / stor6 / totalSupply:
                                                inviter[address(arg1)] = msg.sender
                                            else:
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                            return 1
                                        if idx:
                                            _13757 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13757] = 26
                                            mem[_13757 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 5 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 5 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 5 * arg2 / 1000
                                                emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        else:
                                            _13758 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13758] = 26
                                            mem[_13758 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 10 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 10 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 10 * arg2 / 1000
                                                emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = inviter[address(s)]
                                        continue 
                                else:
                                    idx = 0
                                    s = arg1
                                    while idx < 5:
                                        mem[0] = address(s)
                                        mem[32] = 13
                                        if not inviter[address(s)]:
                                            if _liquidityFee > !sub_a41a08fb:
                                                revert with 0, 17
                                            if 100 < _liquidityFee + sub_a41a08fb:
                                                revert with 0, 17
                                            if not arg2 * stor6 / totalSupply / 100:
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                            else:
                                                if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                    revert with 0, 17
                                                if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                            if not arg2 / 100:
                                                emit Transfer(0, msg.sender, arg1);
                                            else:
                                                if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                    revert with 0, 17
                                                if not arg2 / 100:
                                                    revert with 0, 18
                                                if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                            if not stor2[address(arg1)] / stor6 / totalSupply:
                                                inviter[address(arg1)] = msg.sender
                                            else:
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                            return 1
                                        if idx:
                                            _13759 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13759] = 26
                                            mem[_13759 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 5 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 5 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 5 * arg2 / 1000
                                                emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        else:
                                            _13760 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_13760] = 26
                                            mem[_13760 + 32] = 'SafeMath: division by zero'
                                            if not arg2 / 1000:
                                                if stor2[stor13[address(s)]] > -1:
                                                    revert with 0, 17
                                                if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                mem[0] = inviter[address(s)]
                                                mem[32] = 2
                                                mem[mem[64]] = 0
                                                emit Transfer(0, msg.sender, inviter[address(s)]);
                                            else:
                                                if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                    revert with 0, 17
                                                if not arg2 / 1000:
                                                    revert with 0, 18
                                                if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                    revert with 0, 'SafeMath: multiplication overflow'
                                                if not 10 * arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                else:
                                                    if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                        revert with 0, 17
                                                    if not 10 * arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                mem[mem[64]] = 10 * arg2 / 1000
                                                emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                        if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = inviter[address(s)]
                                        continue 
                            else:
                                if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                    revert with 0, 17
                                if not arg2 / 100:
                                    revert with 0, 18
                                if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not arg2 / 100 * _liquidityFee:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13753 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13753] = 26
                                                mem[_13753 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13754 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13754] = 26
                                                mem[_13754 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13755 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13755] = 26
                                                mem[_13755 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13756 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13756] = 26
                                                mem[_13756 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                        revert with 0, 17
                                    if not arg2 / 100 * _liquidityFee:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                        revert with 0, 17
                                    if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                    emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13749 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13749] = 26
                                                mem[_13749 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13750 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13750] = 26
                                                mem[_13750 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not stor2[address(arg1)] / stor6 / totalSupply:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13751 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13751] = 26
                                                mem[_13751 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13752 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13752] = 26
                                                mem[_13752 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                            if _liquidityFee > !sub_a41a08fb:
                                revert with 0, 17
                            if 100 < _liquidityFee + sub_a41a08fb:
                                revert with 0, 17
                            if not arg2 * stor6 / totalSupply / 100:
                                if stor2[address(arg1)] > -1:
                                    revert with 0, 17
                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                            else:
                                if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                    revert with 0, 17
                                if not arg2 * stor6 / totalSupply / 100:
                                    revert with 0, 18
                                if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                    revert with 0, 17
                                if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                                stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                    if not arg2 / 100:
                        emit Transfer(0, msg.sender, arg1);
                    else:
                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                            revert with 0, 17
                        if not arg2 / 100:
                            revert with 0, 18
                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                            revert with 0, 'SafeMath: multiplication overflow'
                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                    if not stor2[address(arg1)] / stor6 / totalSupply:
                        inviter[address(arg1)] = msg.sender
                    else:
                        if uniswapV2PairAddress == msg.sender:
                            inviter[address(arg1)] = uniswapV2PairAddress
                else:
                    if not inviter[address(arg1)]:
                        if stor6 >= stor6 / totalSupply:
                            if not arg2:
                                if 0 > stor2[address(msg.sender)]:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if stor2[address(msg.sender)] < 0:
                                    revert with 0, 17
                                mem[64] = 544
                                if not arg2 / 100:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                                else:
                                                    inviter[address(arg1)] = msg.sender
                                                return 1
                                            if idx:
                                                _13841 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13841] = 26
                                                mem[_13841 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13842 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13842] = 26
                                                mem[_13842 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                                else:
                                                    inviter[address(arg1)] = msg.sender
                                                return 1
                                            if idx:
                                                _13843 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13843] = 26
                                                mem[_13843 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13844 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13844] = 26
                                                mem[_13844 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                        revert with 0, 17
                                    if not arg2 / 100:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not arg2 / 100 * _liquidityFee:
                                        if stor2[stor14] > -1:
                                            revert with 0, 17
                                        if stor2[stor14] < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13837 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13837] = 26
                                                    mem[_13837 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13838 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13838] = 26
                                                    mem[_13838 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13839 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13839] = 26
                                                    mem[_13839 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13840 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13840] = 26
                                                    mem[_13840 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                    else:
                                        if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                            revert with 0, 17
                                        if not arg2 / 100 * _liquidityFee:
                                            revert with 0, 18
                                        if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                            revert with 0, 17
                                        if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13833 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13833] = 26
                                                    mem[_13833 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13834 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13834] = 26
                                                    mem[_13834 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13835 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13835] = 26
                                                    mem[_13835 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13836 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13836] = 26
                                                    mem[_13836 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                if _liquidityFee > !sub_a41a08fb:
                                    revert with 0, 17
                                if 100 < _liquidityFee + sub_a41a08fb:
                                    revert with 0, 17
                                if stor2[address(arg1)] > -1:
                                    revert with 0, 17
                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                            else:
                                if arg2 and stor6 / totalSupply > -1 / arg2:
                                    revert with 0, 17
                                if not arg2:
                                    revert with 0, 18
                                if arg2 * stor6 / totalSupply / arg2 != stor6 / totalSupply:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if arg2 * stor6 / totalSupply > stor2[address(msg.sender)]:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if stor2[address(msg.sender)] < arg2 * stor6 / totalSupply:
                                    revert with 0, 17
                                stor2[address(msg.sender)] += -1 * arg2 * stor6 / totalSupply
                                mem[64] = 544
                                if not arg2 / 100:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                                else:
                                                    inviter[address(arg1)] = msg.sender
                                                return 1
                                            if idx:
                                                _13829 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13829] = 26
                                                mem[_13829 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13830 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13830] = 26
                                                mem[_13830 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                                else:
                                                    inviter[address(arg1)] = msg.sender
                                                return 1
                                            if idx:
                                                _13831 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13831] = 26
                                                mem[_13831 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13832 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13832] = 26
                                                mem[_13832 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                        revert with 0, 17
                                    if not arg2 / 100:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not arg2 / 100 * _liquidityFee:
                                        if stor2[stor14] > -1:
                                            revert with 0, 17
                                        if stor2[stor14] < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13825 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13825] = 26
                                                    mem[_13825 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13826 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13826] = 26
                                                    mem[_13826 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13827 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13827] = 26
                                                    mem[_13827 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13828 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13828] = 26
                                                    mem[_13828 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                    else:
                                        if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                            revert with 0, 17
                                        if not arg2 / 100 * _liquidityFee:
                                            revert with 0, 18
                                        if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                            revert with 0, 17
                                        if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13821 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13821] = 26
                                                    mem[_13821 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13822 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13822] = 26
                                                    mem[_13822 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13823 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13823] = 26
                                                    mem[_13823 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13824 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13824] = 26
                                                    mem[_13824 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                if _liquidityFee > !sub_a41a08fb:
                                    revert with 0, 17
                                if 100 < _liquidityFee + sub_a41a08fb:
                                    revert with 0, 17
                                if not arg2 * stor6 / totalSupply / 100:
                                    if stor2[address(arg1)] > -1:
                                        revert with 0, 17
                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                else:
                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                        revert with 0, 17
                                    if not arg2 * stor6 / totalSupply / 100:
                                        revert with 0, 18
                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                        revert with 0, 17
                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                        else:
                            if not arg2:
                                if 0 > stor2[address(msg.sender)]:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if stor2[address(msg.sender)] < 0:
                                    revert with 0, 17
                                mem[64] = 544
                                if not arg2 / 100:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                                else:
                                                    inviter[address(arg1)] = msg.sender
                                                return 1
                                            if idx:
                                                _13865 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13865] = 26
                                                mem[_13865 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13866 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13866] = 26
                                                mem[_13866 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                                else:
                                                    inviter[address(arg1)] = msg.sender
                                                return 1
                                            if idx:
                                                _13867 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13867] = 26
                                                mem[_13867 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13868 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13868] = 26
                                                mem[_13868 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                        revert with 0, 17
                                    if not arg2 / 100:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not arg2 / 100 * _liquidityFee:
                                        if stor2[stor14] > -1:
                                            revert with 0, 17
                                        if stor2[stor14] < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13861 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13861] = 26
                                                    mem[_13861 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13862 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13862] = 26
                                                    mem[_13862 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13863 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13863] = 26
                                                    mem[_13863 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13864 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13864] = 26
                                                    mem[_13864 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                    else:
                                        if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                            revert with 0, 17
                                        if not arg2 / 100 * _liquidityFee:
                                            revert with 0, 18
                                        if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                            revert with 0, 17
                                        if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13857 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13857] = 26
                                                    mem[_13857 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13858 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13858] = 26
                                                    mem[_13858 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13859 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13859] = 26
                                                    mem[_13859 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13860 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13860] = 26
                                                    mem[_13860 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                if _liquidityFee > !sub_a41a08fb:
                                    revert with 0, 17
                                if 100 < _liquidityFee + sub_a41a08fb:
                                    revert with 0, 17
                                if stor2[address(arg1)] > -1:
                                    revert with 0, 17
                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                            else:
                                if arg2 and stor6 / totalSupply > -1 / arg2:
                                    revert with 0, 17
                                if not arg2:
                                    revert with 0, 18
                                if arg2 * stor6 / totalSupply / arg2 != stor6 / totalSupply:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if arg2 * stor6 / totalSupply > stor2[address(msg.sender)]:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if stor2[address(msg.sender)] < arg2 * stor6 / totalSupply:
                                    revert with 0, 17
                                stor2[address(msg.sender)] += -1 * arg2 * stor6 / totalSupply
                                mem[64] = 544
                                if not arg2 / 100:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                                else:
                                                    inviter[address(arg1)] = msg.sender
                                                return 1
                                            if idx:
                                                _13853 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13853] = 26
                                                mem[_13853 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13854 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13854] = 26
                                                mem[_13854 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if uniswapV2PairAddress == msg.sender:
                                                    inviter[address(arg1)] = uniswapV2PairAddress
                                                else:
                                                    inviter[address(arg1)] = msg.sender
                                                return 1
                                            if idx:
                                                _13855 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13855] = 26
                                                mem[_13855 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13856 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13856] = 26
                                                mem[_13856 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                        revert with 0, 17
                                    if not arg2 / 100:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not arg2 / 100 * _liquidityFee:
                                        if stor2[stor14] > -1:
                                            revert with 0, 17
                                        if stor2[stor14] < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13849 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13849] = 26
                                                    mem[_13849 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13850 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13850] = 26
                                                    mem[_13850 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13851 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13851] = 26
                                                    mem[_13851 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13852 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13852] = 26
                                                    mem[_13852 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                    else:
                                        if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                            revert with 0, 17
                                        if not arg2 / 100 * _liquidityFee:
                                            revert with 0, 18
                                        if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                            revert with 0, 17
                                        if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13845 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13845] = 26
                                                    mem[_13845 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13846 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13846] = 26
                                                    mem[_13846 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                    else:
                                                        inviter[address(arg1)] = msg.sender
                                                    return 1
                                                if idx:
                                                    _13847 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13847] = 26
                                                    mem[_13847 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13848 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13848] = 26
                                                    mem[_13848 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                if _liquidityFee > !sub_a41a08fb:
                                    revert with 0, 17
                                if 100 < _liquidityFee + sub_a41a08fb:
                                    revert with 0, 17
                                if not arg2 * stor6 / totalSupply / 100:
                                    if stor2[address(arg1)] > -1:
                                        revert with 0, 17
                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                else:
                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                        revert with 0, 17
                                    if not arg2 * stor6 / totalSupply / 100:
                                        revert with 0, 18
                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                        revert with 0, 17
                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                        if not arg2 / 100:
                            emit Transfer(0, msg.sender, arg1);
                        else:
                            if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                revert with 0, 17
                            if not arg2 / 100:
                                revert with 0, 18
                            if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                revert with 0, 'SafeMath: multiplication overflow'
                            emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                        if uniswapV2PairAddress == msg.sender:
                            inviter[address(arg1)] = uniswapV2PairAddress
                        else:
                            inviter[address(arg1)] = msg.sender
                    else:
                        if stor6 >= stor6 / totalSupply:
                            if not arg2:
                                if 0 > stor2[address(msg.sender)]:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if stor2[address(msg.sender)] < 0:
                                    revert with 0, 17
                                mem[64] = 544
                                if not arg2 / 100:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not inviter[address(arg1)]:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13793 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13793] = 26
                                                mem[_13793 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13794 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13794] = 26
                                                mem[_13794 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not inviter[address(arg1)]:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13795 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13795] = 26
                                                mem[_13795 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13796 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13796] = 26
                                                mem[_13796 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                        revert with 0, 17
                                    if not arg2 / 100:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not arg2 / 100 * _liquidityFee:
                                        if stor2[stor14] > -1:
                                            revert with 0, 17
                                        if stor2[stor14] < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13789 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13789] = 26
                                                    mem[_13789 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13790 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13790] = 26
                                                    mem[_13790 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13791 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13791] = 26
                                                    mem[_13791 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13792 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13792] = 26
                                                    mem[_13792 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                    else:
                                        if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                            revert with 0, 17
                                        if not arg2 / 100 * _liquidityFee:
                                            revert with 0, 18
                                        if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                            revert with 0, 17
                                        if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13785 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13785] = 26
                                                    mem[_13785 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13786 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13786] = 26
                                                    mem[_13786 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13787 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13787] = 26
                                                    mem[_13787 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13788 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13788] = 26
                                                    mem[_13788 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                if _liquidityFee > !sub_a41a08fb:
                                    revert with 0, 17
                                if 100 < _liquidityFee + sub_a41a08fb:
                                    revert with 0, 17
                                if stor2[address(arg1)] > -1:
                                    revert with 0, 17
                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                            else:
                                if arg2 and stor6 / totalSupply > -1 / arg2:
                                    revert with 0, 17
                                if not arg2:
                                    revert with 0, 18
                                if arg2 * stor6 / totalSupply / arg2 != stor6 / totalSupply:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if arg2 * stor6 / totalSupply > stor2[address(msg.sender)]:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if stor2[address(msg.sender)] < arg2 * stor6 / totalSupply:
                                    revert with 0, 17
                                stor2[address(msg.sender)] += -1 * arg2 * stor6 / totalSupply
                                mem[64] = 544
                                if not arg2 / 100:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not inviter[address(arg1)]:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13781 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13781] = 26
                                                mem[_13781 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13782 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13782] = 26
                                                mem[_13782 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not inviter[address(arg1)]:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13783 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13783] = 26
                                                mem[_13783 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13784 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13784] = 26
                                                mem[_13784 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                        revert with 0, 17
                                    if not arg2 / 100:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not arg2 / 100 * _liquidityFee:
                                        if stor2[stor14] > -1:
                                            revert with 0, 17
                                        if stor2[stor14] < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13777 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13777] = 26
                                                    mem[_13777 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13778 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13778] = 26
                                                    mem[_13778 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13779 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13779] = 26
                                                    mem[_13779 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13780 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13780] = 26
                                                    mem[_13780 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                    else:
                                        if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                            revert with 0, 17
                                        if not arg2 / 100 * _liquidityFee:
                                            revert with 0, 18
                                        if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                            revert with 0, 17
                                        if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13773 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13773] = 26
                                                    mem[_13773 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13774 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13774] = 26
                                                    mem[_13774 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13775 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13775] = 26
                                                    mem[_13775 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13776 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13776] = 26
                                                    mem[_13776 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                if _liquidityFee > !sub_a41a08fb:
                                    revert with 0, 17
                                if 100 < _liquidityFee + sub_a41a08fb:
                                    revert with 0, 17
                                if not arg2 * stor6 / totalSupply / 100:
                                    if stor2[address(arg1)] > -1:
                                        revert with 0, 17
                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                else:
                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                        revert with 0, 17
                                    if not arg2 * stor6 / totalSupply / 100:
                                        revert with 0, 18
                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                        revert with 0, 17
                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                        else:
                            if not arg2:
                                if 0 > stor2[address(msg.sender)]:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if stor2[address(msg.sender)] < 0:
                                    revert with 0, 17
                                mem[64] = 544
                                if not arg2 / 100:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not inviter[address(arg1)]:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13817 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13817] = 26
                                                mem[_13817 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13818 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13818] = 26
                                                mem[_13818 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] > -1:
                                                    revert with 0, 17
                                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not inviter[address(arg1)]:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13819 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13819] = 26
                                                mem[_13819 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13820 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13820] = 26
                                                mem[_13820 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                        revert with 0, 17
                                    if not arg2 / 100:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not arg2 / 100 * _liquidityFee:
                                        if stor2[stor14] > -1:
                                            revert with 0, 17
                                        if stor2[stor14] < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13813 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13813] = 26
                                                    mem[_13813 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13814 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13814] = 26
                                                    mem[_13814 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13815 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13815] = 26
                                                    mem[_13815 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13816 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13816] = 26
                                                    mem[_13816 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                    else:
                                        if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                            revert with 0, 17
                                        if not arg2 / 100 * _liquidityFee:
                                            revert with 0, 18
                                        if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                            revert with 0, 17
                                        if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13809 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13809] = 26
                                                    mem[_13809 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13810 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13810] = 26
                                                    mem[_13810 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13811 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13811] = 26
                                                    mem[_13811 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13812 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13812] = 26
                                                    mem[_13812 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                if _liquidityFee > !sub_a41a08fb:
                                    revert with 0, 17
                                if 100 < _liquidityFee + sub_a41a08fb:
                                    revert with 0, 17
                                if stor2[address(arg1)] > -1:
                                    revert with 0, 17
                                if stor2[address(arg1)] < stor2[address(arg1)]:
                                    revert with 0, 'SafeMath: addition overflow'
                            else:
                                if arg2 and stor6 / totalSupply > -1 / arg2:
                                    revert with 0, 17
                                if not arg2:
                                    revert with 0, 18
                                if arg2 * stor6 / totalSupply / arg2 != stor6 / totalSupply:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if arg2 * stor6 / totalSupply > stor2[address(msg.sender)]:
                                    revert with 0, 'SafeMath: subtraction overflow', 0
                                if stor2[address(msg.sender)] < arg2 * stor6 / totalSupply:
                                    revert with 0, 17
                                stor2[address(msg.sender)] += -1 * arg2 * stor6 / totalSupply
                                mem[64] = 544
                                if not arg2 / 100:
                                    if stor2[stor14] > -1:
                                        revert with 0, 17
                                    if stor2[stor14] < stor2[stor14]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    emit Transfer(0, msg.sender, uniswapV2PairAddress);
                                    if uniswapV2PairAddress != msg.sender:
                                        idx = 0
                                        s = msg.sender
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not inviter[address(arg1)]:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13805 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13805] = 26
                                                mem[_13805 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13806 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13806] = 26
                                                mem[_13806 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                    else:
                                        idx = 0
                                        s = arg1
                                        while idx < 5:
                                            mem[0] = address(s)
                                            mem[32] = 13
                                            if not inviter[address(s)]:
                                                if _liquidityFee > !sub_a41a08fb:
                                                    revert with 0, 17
                                                if 100 < _liquidityFee + sub_a41a08fb:
                                                    revert with 0, 17
                                                if not arg2 * stor6 / totalSupply / 100:
                                                    if stor2[address(arg1)] > -1:
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                else:
                                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                        revert with 0, 17
                                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                if not arg2 / 100:
                                                    emit Transfer(0, msg.sender, arg1);
                                                else:
                                                    if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                        revert with 0, 17
                                                    if not arg2 / 100:
                                                        revert with 0, 18
                                                    if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                if not inviter[address(arg1)]:
                                                    inviter[address(arg1)] = msg.sender
                                                else:
                                                    if uniswapV2PairAddress == msg.sender:
                                                        inviter[address(arg1)] = uniswapV2PairAddress
                                                return 1
                                            if idx:
                                                _13807 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13807] = 26
                                                mem[_13807 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 5 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 5 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 5 * arg2 / 1000
                                                    emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            else:
                                                _13808 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_13808] = 26
                                                mem[_13808 + 32] = 'SafeMath: division by zero'
                                                if not arg2 / 1000:
                                                    if stor2[stor13[address(s)]] > -1:
                                                        revert with 0, 17
                                                    if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    mem[0] = inviter[address(s)]
                                                    mem[32] = 2
                                                    mem[mem[64]] = 0
                                                    emit Transfer(0, msg.sender, inviter[address(s)]);
                                                else:
                                                    if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                        revert with 0, 17
                                                    if not arg2 / 1000:
                                                        revert with 0, 18
                                                    if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                        revert with 0, 'SafeMath: multiplication overflow'
                                                    if not 10 * arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                    else:
                                                        if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                            revert with 0, 17
                                                        if not 10 * arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                    mem[mem[64]] = 10 * arg2 / 1000
                                                    emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                            if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = inviter[address(s)]
                                            continue 
                                else:
                                    if arg2 / 100 and _liquidityFee > -1 / arg2 / 100:
                                        revert with 0, 17
                                    if not arg2 / 100:
                                        revert with 0, 18
                                    if arg2 / 100 * _liquidityFee / arg2 / 100 != _liquidityFee:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not arg2 / 100 * _liquidityFee:
                                        if stor2[stor14] > -1:
                                            revert with 0, 17
                                        if stor2[stor14] < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13801 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13801] = 26
                                                    mem[_13801 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13802 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13802] = 26
                                                    mem[_13802 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13803 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13803] = 26
                                                    mem[_13803 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13804 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13804] = 26
                                                    mem[_13804 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                    else:
                                        if arg2 / 100 * _liquidityFee and stor6 / totalSupply > -1 / arg2 / 100 * _liquidityFee:
                                            revert with 0, 17
                                        if not arg2 / 100 * _liquidityFee:
                                            revert with 0, 18
                                        if arg2 / 100 * _liquidityFee * stor6 / totalSupply / arg2 / 100 * _liquidityFee != stor6 / totalSupply:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if stor2[stor14] > !(arg2 / 100 * _liquidityFee * stor6 / totalSupply):
                                            revert with 0, 17
                                        if stor2[stor14] + (arg2 / 100 * _liquidityFee * stor6 / totalSupply) < stor2[stor14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        stor2[stor14] += arg2 / 100 * _liquidityFee * stor6 / totalSupply
                                        emit Transfer((arg2 / 100 * _liquidityFee), msg.sender, uniswapV2PairAddress);
                                        if uniswapV2PairAddress != msg.sender:
                                            idx = 0
                                            s = msg.sender
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13797 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13797] = 26
                                                    mem[_13797 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13798 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13798] = 26
                                                    mem[_13798 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                        else:
                                            idx = 0
                                            s = arg1
                                            while idx < 5:
                                                mem[0] = address(s)
                                                mem[32] = 13
                                                if not inviter[address(s)]:
                                                    if _liquidityFee > !sub_a41a08fb:
                                                        revert with 0, 17
                                                    if 100 < _liquidityFee + sub_a41a08fb:
                                                        revert with 0, 17
                                                    if not arg2 * stor6 / totalSupply / 100:
                                                        if stor2[address(arg1)] > -1:
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 17
                                                        if not arg2 * stor6 / totalSupply / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                                            revert with 0, 17
                                                        if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                                                    if not arg2 / 100:
                                                        emit Transfer(0, msg.sender, arg1);
                                                    else:
                                                        if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                                            revert with 0, 17
                                                        if not arg2 / 100:
                                                            revert with 0, 18
                                                        if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                                                    if not inviter[address(arg1)]:
                                                        inviter[address(arg1)] = msg.sender
                                                    else:
                                                        if uniswapV2PairAddress == msg.sender:
                                                            inviter[address(arg1)] = uniswapV2PairAddress
                                                    return 1
                                                if idx:
                                                    _13799 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13799] = 26
                                                    mem[_13799 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 5 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 5 * arg2 / 1000 / arg2 / 1000 != 5:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 5 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 5 * arg2 / 1000 and stor6 / totalSupply > -1 / 5 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 5 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 5 * arg2 / 1000 * stor6 / totalSupply / 5 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(5 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (5 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 5 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 5 * arg2 / 1000
                                                        emit Transfer((5 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                else:
                                                    _13800 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13800] = 26
                                                    mem[_13800 + 32] = 'SafeMath: division by zero'
                                                    if not arg2 / 1000:
                                                        if stor2[stor13[address(s)]] > -1:
                                                            revert with 0, 17
                                                        if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        mem[0] = inviter[address(s)]
                                                        mem[32] = 2
                                                        mem[mem[64]] = 0
                                                        emit Transfer(0, msg.sender, inviter[address(s)]);
                                                    else:
                                                        if arg2 / 1000 and 10 > -1 / arg2 / 1000:
                                                            revert with 0, 17
                                                        if not arg2 / 1000:
                                                            revert with 0, 18
                                                        if 10 * arg2 / 1000 / arg2 / 1000 != 10:
                                                            revert with 0, 'SafeMath: multiplication overflow'
                                                        if not 10 * arg2 / 1000:
                                                            if stor2[stor13[address(s)]] > -1:
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                        else:
                                                            if 10 * arg2 / 1000 and stor6 / totalSupply > -1 / 10 * arg2 / 1000:
                                                                revert with 0, 17
                                                            if not 10 * arg2 / 1000:
                                                                revert with 0, 18
                                                            if 10 * arg2 / 1000 * stor6 / totalSupply / 10 * arg2 / 1000 != stor6 / totalSupply:
                                                                revert with 0, 'SafeMath: multiplication overflow'
                                                            if stor2[stor13[address(s)]] > !(10 * arg2 / 1000 * stor6 / totalSupply):
                                                                revert with 0, 17
                                                            if stor2[stor13[address(s)]] + (10 * arg2 / 1000 * stor6 / totalSupply) < stor2[stor13[address(s)]]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            mem[0] = inviter[address(s)]
                                                            mem[32] = 2
                                                            stor2[stor13[address(s)]] += 10 * arg2 / 1000 * stor6 / totalSupply
                                                        mem[mem[64]] = 10 * arg2 / 1000
                                                        emit Transfer((10 * arg2 / 1000), msg.sender, inviter[address(s)]);
                                                if idx == 0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff:
                                                    revert with 0, 17
                                                idx = idx + 1
                                                s = inviter[address(s)]
                                                continue 
                                if _liquidityFee > !sub_a41a08fb:
                                    revert with 0, 17
                                if 100 < _liquidityFee + sub_a41a08fb:
                                    revert with 0, 17
                                if not arg2 * stor6 / totalSupply / 100:
                                    if stor2[address(arg1)] > -1:
                                        revert with 0, 17
                                    if stor2[address(arg1)] < stor2[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                else:
                                    if arg2 * stor6 / totalSupply / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 * stor6 / totalSupply / 100:
                                        revert with 0, 17
                                    if not arg2 * stor6 / totalSupply / 100:
                                        revert with 0, 18
                                    if (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) / arg2 * stor6 / totalSupply / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if stor2[address(arg1)] > !((100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)):
                                        revert with 0, 17
                                    if stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100) < stor2[address(arg1)]:
                                        revert with 0, 'SafeMath: addition overflow'
                                    stor2[address(arg1)] = stor2[address(arg1)] + (100 * arg2 * stor6 / totalSupply / 100) - (_liquidityFee * arg2 * stor6 / totalSupply / 100) - (sub_a41a08fb * arg2 * stor6 / totalSupply / 100)
                        if not arg2 / 100:
                            emit Transfer(0, msg.sender, arg1);
                        else:
                            if arg2 / 100 and -_liquidityFee + -sub_a41a08fb + 100 > -1 / arg2 / 100:
                                revert with 0, 17
                            if not arg2 / 100:
                                revert with 0, 18
                            if (100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100) / arg2 / 100 != -_liquidityFee + -sub_a41a08fb + 100:
                                revert with 0, 'SafeMath: multiplication overflow'
                            emit Transfer(((100 * arg2 / 100) - (_liquidityFee * arg2 / 100) - (sub_a41a08fb * arg2 / 100)), msg.sender, arg1);
                        if not inviter[address(arg1)]:
                            inviter[address(arg1)] = msg.sender
                        else:
                            if uniswapV2PairAddress == msg.sender:
                                inviter[address(arg1)] = uniswapV2PairAddress
    return 1
}



}
